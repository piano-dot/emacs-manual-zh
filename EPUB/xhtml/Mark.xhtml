<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<!-- Created by GNU Texinfo 7.1, https://www.gnu.org/software/texinfo/ -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<!-- 这是 GNU Emacs 手册,
为 Emacs  29.2 更新

英文原版版权提示 - Original English version copyright note

Copyright © 1985-2024 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "The GNU Manifesto," "Distribution" and
"GNU GENERAL PUBLIC LICENSE," with the Front-Cover Texts being "A GNU
Manual," and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled "GNU Free Documentation
License."

(a) The FSF's Back-Cover Text is: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."

中文翻译版版权提示 - Chinese translation revision copyright notice

版权所有 © 1985-2024 林羿轩(Ralph Lin).

您有在 Free Software Foundation发布的GNU Free Documentation License 第1.3版或之后版本的约束下对其进行再发布及修的权利。 恒定章节为 "The GNU Manifesto," "分发" "(中文版)GNU GENERAL PUBLIC LICENSE" 和
"GNU GENERAL PUBLIC LICENSE" , 前封面文字为 "A GNU
Manual,"后封面文字如下(a).  本书的FDL许可证可以在 "GNU Free Documentation
License."找到.

(a) FSF的后封面文字为: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."
 -->
<title>12 The Mark and the Region (GNU Emacs Manual)</title>

<meta name="description" content="12 The Mark and the Region (GNU Emacs Manual)"/>
<meta name="keywords" content="12 The Mark and the Region (GNU Emacs Manual)"/>
<meta name="resource-type" content="document"/>
<meta name="distribution" content="global"/>
<meta name="Generator" content="texi2any"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>

<link href="emacs.xhtml" rel="start" title="Emacs 编辑器"/>
<link href="Key-Index.xhtml" rel="index" title="Key (Character) Index"/>
<link href="emacs.xhtml#SEC_Contents" rel="contents" title="Table of Contents"/>
<link href="emacs.xhtml" rel="up" title="Emacs 编辑器"/>
<link href="Killing.xhtml#Killing" rel="next" title="13 Killing and Moving Text"/>
<link href="Help.xhtml#Help" rel="prev" title="11 Help"/>
<style type="text/css">
<!--
kbd.kbd {font-style: oblique}
kbd.key {font-style: normal}
span.r {font-family: initial; font-weight: normal; font-style: normal}
ul.mark-bullet {list-style-type: disc}
-->
</style>


</head>

<body lang="zh_CN">
<div class="chapter-level-extent" id="Mark">

<h2 class="chapter" id="The-Mark-and-the-Region">12 The Mark and the Region</h2>
<a class="index-entry-id" id="index-mark"></a>
<a class="index-entry-id" id="index-setting-a-mark"></a>
<a class="index-entry-id" id="index-region"></a>

<p>Emacs, like many other applications, lets you select some arbitrary
part of the buffer text and invoke commands that operate on such
<em class="dfn">selected text</em>.  In Emacs, we call the selected text <em class="dfn">the
region</em>; its handling is very similar to that of selected text in
other programs, but there are also important differences.
</p>
<a class="index-entry-id" id="index-active-region"></a>
<a class="index-entry-id" id="index-activating-the-mark"></a>
<p>The region is the portion of the buffer between <em class="dfn">the mark</em> and
the current <em class="dfn">point</em>.  You define a region by setting the mark
somewhere (with, for instance, the <kbd class="kbd">C-SPC</kbd> command), and then
moving point to where you want the region to end.  (Or you can use the
mouse to define a region.)
</p>
<p>The region always extends between point and the mark, no matter
which of them comes earlier in the text; each time you move point, the
region changes.
</p>
<p>Setting the mark at a position in the text <em class="dfn">activates</em> it.  When
the mark is active, we say also that the region is active; Emacs
indicates its extent by highlighting the text within it, using the
<code class="code">region</code> face (see <a class="pxref" href="Customization.xhtml#Face-Customization">Customizing Faces</a>).
</p>
<a class="index-entry-id" id="index-deactivating-the-mark"></a>
<p>After certain non-motion commands, including any command that
changes the text in the buffer, Emacs automatically <em class="dfn">deactivates</em>
the mark; this turns off the highlighting.  You can also explicitly
deactivate the mark at any time, by typing <kbd class="kbd">C-g</kbd>
(see <a class="pxref" href="Quitting.xhtml">Quitting and Aborting</a>).
</p>
<p>Many commands limit the text on which they operate to the active
region.  For instance, the <kbd class="kbd">M-%</kbd> command (which replaces matching
text) normally works on the entire accessible portion of the buffer,
but if you have an active region, it&#8217;ll work only on that region
instead.
</p>
<p>The mark is useful even if it is not active.  For example, you can
move to previous mark locations using the mark ring.  See <a class="xref" href="#Mark-Ring">The Mark Ring</a>.  Additionally, some commands will have an effect even on an
inactive region (for example <em class="dfn">upcase-region</em>).  You can also
reactivate the region with commands like <kbd class="kbd">C-x C-x</kbd>.
</p>
<p>The above behavior, which is the default in interactive sessions, is
known as Transient Mark mode.  Disabling Transient Mark mode switches
Emacs to an alternative behavior, in which the region is usually not
highlighted.  See <a class="xref" href="#Disabled-Transient-Mark">Disabling Transient Mark Mode</a>.
</p>
<a class="index-entry-id" id="index-highlight_002dnonselected_002dwindows"></a>
<p>Setting the mark in one buffer has no effect on the marks in other
buffers.  When you return to a buffer with an active mark, the mark is
at the same place as before.  When multiple windows show the same
buffer, they can have different values of point, and thus different
regions, but they all share one common mark position.  See <a class="xref" href="Windows.xhtml#Windows">Multiple Windows</a>.
Ordinarily, only the selected window highlights its region; however,
if the variable <code class="code">highlight-nonselected-windows</code> is
non-<code class="code">nil</code>, each window highlights its own region.
</p>
<p>There is another kind of region: the rectangular region.
See <a class="xref" href="Killing.xhtml#Rectangles">Rectangles</a>.
</p>

<div class="section-level-extent" id="Setting-Mark">
<h3 class="section" id="Setting-the-Mark">12.1 Setting the Mark</h3>

<p>Here are some commands for setting the mark:
</p>
<dl class="table">
<dt><kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd></dt>
<dd><p>Set the mark at point, and activate it (<code class="code">set-mark-command</code>).
</p></dd>
<dt><kbd class="kbd">C-@</kbd></dt>
<dd><p>The same.
</p></dd>
<dt><kbd class="kbd">C-x C-x</kbd></dt>
<dd><p>Set the mark at point, and activate it; then move point where the mark
used to be (<code class="code">exchange-point-and-mark</code>).
</p></dd>
<dt><kbd class="kbd">Drag-mouse-1</kbd></dt>
<dd><p>Set point and the mark around the text you drag across.
</p></dd>
<dt><kbd class="kbd">mouse-3</kbd></dt>
<dd><p>Set the mark at point, then move point to where you click
(<code class="code">mouse-save-then-kill</code>).
</p></dd>
<dt><kbd class="kbd"><span class="r">Shifted cursor motion keys</span></kbd></dt>
<dd><p>Set the mark at point if the mark is inactive, then move point.
See <a class="xref" href="#Shift-Selection">Shift Selection</a>.
</p></dd>
</dl>

<a class="index-entry-id" id="index-C_002dSPC"></a>
<a class="index-entry-id" id="index-C_002d_0040"></a>
<a class="index-entry-id" id="index-set_002dmark_002dcommand"></a>
<p>The most common way to set the mark is with <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd>
(<code class="code">set-mark-command</code>)<a class="footnote" id="DOCF4" href="#FOOT4"><sup>4</sup></a>.  This sets the mark where point is,
and activates it.  You can then move point away, leaving the mark
behind.
</p>
<p>For example, suppose you wish to convert part of the buffer to upper
case.  To accomplish this, go to one end of the desired text, type
<kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd>, and move point until the desired portion of text is
highlighted.  Now type <kbd class="kbd">C-x C-u</kbd> (<code class="code">upcase-region</code>).  This
converts the text in the region to upper case, and then deactivates
the mark.
</p>
<p>Whenever the mark is active, you can deactivate it by typing
<kbd class="kbd">C-g</kbd> (see <a class="pxref" href="Quitting.xhtml">Quitting and Aborting</a>).  Most commands that operate on the
region also automatically deactivate the mark, like <kbd class="kbd">C-x C-u</kbd> in
the above example.
</p>
<p>Instead of setting the mark in order to operate on a region, you can
also use it to remember a position in the buffer (by typing
<kbd class="kbd">C-<kbd class="key">SPC</kbd> C-<kbd class="key">SPC</kbd></kbd>), and later jump back there (by typing
<kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd>).  See <a class="xref" href="#Mark-Ring">The Mark Ring</a>, for details.
</p>
<a class="index-entry-id" id="index-C_002dx-C_002dx"></a>
<a class="index-entry-id" id="index-exchange_002dpoint_002dand_002dmark"></a>
<p>The command <kbd class="kbd">C-x C-x</kbd> (<code class="code">exchange-point-and-mark</code>) exchanges
the positions of point and the mark.  <kbd class="kbd">C-x C-x</kbd> is useful when you
are satisfied with the position of point but want to move the other
end of the region (where the mark is).  Using <kbd class="kbd">C-x C-x</kbd> a second
time, if necessary, puts the mark at the new position with point back
at its original position.  Normally, if the mark is inactive, this
command first reactivates the mark wherever it was last set, to ensure
that the region is left highlighted.  However, if you call it with a
prefix argument, it leaves the mark inactive and the region
unhighlighted; you can use this to jump to the mark in a manner
similar to <kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd>.
</p>
<p>You can also set the mark with the mouse.  If you press the left
mouse button (<kbd class="kbd">down-mouse-1</kbd>) and drag the mouse across a range of
text, this sets the mark where you first pressed the mouse button and
puts point where you release it.  Alternatively, clicking the right
mouse button (<kbd class="kbd">mouse-3</kbd>) sets the mark at point and then moves
point to where you clicked.  See <a class="xref" href="Frames.xhtml#Mouse-Commands">Mouse Commands for Editing</a>, for a more
detailed description of these mouse commands.
</p>
<p>Finally, you can set the mark by holding down the shift key while
typing certain cursor motion commands (such as <kbd class="kbd">S-<kbd class="key">RIGHT</kbd></kbd>,
<kbd class="kbd">S-C-f</kbd>, <kbd class="kbd">S-C-n</kbd>, etc.).  This is called <em class="dfn">shift-selection</em>.
It sets the mark at point before moving point, but only if there is no
active mark set via a previous shift-selection or mouse commands.  The
mark set by mouse commands and by shift-selection behaves slightly
differently from the usual mark: any subsequent unshifted cursor motion
command deactivates it automatically.  For details, see <a class="ref" href="#Shift-Selection">Shift Selection</a>.
</p>
<p>Many commands that insert text, such as <kbd class="kbd">C-y</kbd> (<code class="code">yank</code>), set
the mark at the other end of the inserted text, without activating it.
This lets you easily return to that position (see <a class="pxref" href="#Mark-Ring">The Mark Ring</a>).  You
can tell that a command does this when it shows &#8216;<samp class="samp">Mark set</samp>&#8217; in the
echo area.
</p>
<a class="index-entry-id" id="index-primary-selection_002c-when-active-region-changes"></a>
<p>Under X, every time the active region changes, Emacs saves the text
in the region to the <em class="dfn">primary selection</em>.  This lets you insert
that text into other X applications with <kbd class="kbd">mouse-2</kbd> clicks.
See <a class="xref" href="Killing.xhtml#Primary-Selection">Cut and Paste with Other Window Applications</a>.
</p>
</div>
<div class="section-level-extent" id="Marking-Objects">
<h3 class="section" id="Commands-to-Mark-Textual-Objects">12.2 Commands to Mark Textual Objects</h3>

<a class="index-entry-id" id="index-marking-sections-of-text"></a>
<p>Here are commands for placing point and the mark around a textual
object such as a word, list, paragraph or page:
</p>
<dl class="table">
<dt><kbd class="kbd">M-@</kbd></dt>
<dd><p>Set mark at the end of the next word (<code class="code">mark-word</code>).  This does not
move point.
</p></dd>
<dt><kbd class="kbd">C-M-@</kbd></dt>
<dd><p>Set mark after end of following balanced expression
(<code class="code">mark-sexp</code>).  This does not move point.
</p></dd>
<dt><kbd class="kbd">M-h</kbd></dt>
<dd><p>Move point to the beginning of the current paragraph, and set mark at
the end (<code class="code">mark-paragraph</code>).
</p></dd>
<dt><kbd class="kbd">C-M-h</kbd></dt>
<dd><p>Move point to the beginning of the current defun, and set mark at the
end (<code class="code">mark-defun</code>).
</p></dd>
<dt><kbd class="kbd">C-x C-p</kbd></dt>
<dd><p>Move point to the beginning of the current page, and set mark at the
end (<code class="code">mark-page</code>).
</p></dd>
<dt><kbd class="kbd">C-x h</kbd></dt>
<dd><p>Move point to the beginning of the buffer, and set mark at the end
(<code class="code">mark-whole-buffer</code>).
</p></dd>
</dl>

<a class="index-entry-id" id="index-M_002d_0040"></a>
<a class="index-entry-id" id="index-mark_002dword"></a>
<p><kbd class="kbd">M-@</kbd> (<code class="code">mark-word</code>) sets the mark at the end of the next
word (see <a class="pxref" href="Text.xhtml#Words">Words</a>, for information about words).  Repeated
invocations of this command extend the region by advancing the mark
one word at a time.  As an exception, if the mark is active and
located before point, <kbd class="kbd">M-@</kbd> moves the mark backwards from its
current position one word at a time.
</p>
<p>This command also accepts a numeric argument <var class="var">n</var>, which tells it
to advance the mark by <var class="var">n</var> words.  A negative argument
&#8722;<var class="var">n</var> moves the mark back by <var class="var">n</var> words.
</p>
<a class="index-entry-id" id="index-C_002dM_002d_0040"></a>
<a class="index-entry-id" id="index-mark_002dsexp"></a>
<p>Similarly, <kbd class="kbd">C-M-@</kbd> (<code class="code">mark-sexp</code>) puts the mark at the end
of the next balanced expression (see <a class="pxref" href="Programs.xhtml#Expressions">Expressions with Balanced Parentheses</a>).  Repeated
invocations extend the region to subsequent expressions, while
positive or negative numeric arguments move the mark forward or
backward by the specified number of expressions.
</p>
<p>The other commands in the above list set both point and mark, so as
to delimit an object in the buffer.  <kbd class="kbd">M-h</kbd> (<code class="code">mark-paragraph</code>)
marks paragraphs (see <a class="pxref" href="Text.xhtml#Paragraphs">Paragraphs</a>), <kbd class="kbd">C-M-h</kbd> (<code class="code">mark-defun</code>)
marks top-level definitions (see <a class="pxref" href="Programs.xhtml#Moving-by-Defuns">Moving by Defuns</a>), and <kbd class="kbd">C-x
C-p</kbd> (<code class="code">mark-page</code>) marks pages (see <a class="pxref" href="Text.xhtml#Pages">Pages</a>).  Repeated
invocations again play the same role, extending the region to
consecutive objects; similarly, numeric arguments specify how many
objects to move the mark by.
</p>
<a class="index-entry-id" id="index-C_002dx-h"></a>
<a class="index-entry-id" id="index-mark_002dwhole_002dbuffer"></a>
<a class="index-entry-id" id="index-select-all"></a>
<p><kbd class="kbd">C-x h</kbd> (<code class="code">mark-whole-buffer</code>) sets up the entire buffer as
the region, by putting point at the beginning and the mark at the end.
</p>
</div>
<div class="section-level-extent" id="Using-Region">
<h3 class="section" id="Operating-on-the-Region">12.3 Operating on the Region</h3>

<a class="index-entry-id" id="index-operations-on-a-marked-region"></a>
<p>Once you have a region, here are some of the ways you can operate on
it:
</p>
<ul class="itemize mark-bullet">
<li>Kill it with <kbd class="kbd">C-w</kbd> (see <a class="pxref" href="Killing.xhtml#Killing">Killing and Moving Text</a>).
</li><li>Copy it to the kill ring with <kbd class="kbd">M-w</kbd> (see <a class="pxref" href="Killing.xhtml#Yanking">Yanking</a>).
</li><li>Convert case with <kbd class="kbd">C-x C-l</kbd> or <kbd class="kbd">C-x C-u</kbd> (see <a class="pxref" href="Text.xhtml#Case">Case Conversion Commands</a>).
</li><li>Undo changes within it using <kbd class="kbd">C-u C-/</kbd> (see <a class="pxref" href="Fixit.xhtml#Undo">Undo</a>).
</li><li>Replace text within it using <kbd class="kbd">M-%</kbd> (see <a class="pxref" href="Search.xhtml#Query-Replace">Query Replace</a>).
</li><li>Indent it with <kbd class="kbd">C-x <kbd class="key">TAB</kbd></kbd> or <kbd class="kbd">C-M-\</kbd> (see <a class="pxref" href="Indentation.xhtml#Indentation">Indentation</a>).
</li><li>Fill it as text with <kbd class="kbd">M-x fill-region</kbd> (see <a class="pxref" href="Text.xhtml#Filling">Filling Text</a>).
</li><li>Check the spelling of words within it with <kbd class="kbd">M-$</kbd> (see <a class="pxref" href="Fixit.xhtml#Spelling">Checking and Correcting Spelling</a>).
</li><li>Evaluate it as Lisp code with <kbd class="kbd">M-x eval-region</kbd> (see <a class="pxref" href="Building.xhtml#Lisp-Eval">Evaluating Emacs Lisp Expressions</a>).
</li><li>Save it in a register with <kbd class="kbd">C-x r s</kbd> (see <a class="pxref" href="Registers.xhtml#Registers">Registers</a>).
</li><li>Save it in a buffer or a file (see <a class="pxref" href="Killing.xhtml#Accumulating-Text">Accumulating Text</a>).
</li></ul>

<p>Some commands have a default behavior when the mark is inactive, but
operate on the region if the mark is active.  For example, <kbd class="kbd">M-$</kbd>
(<code class="code">ispell-word</code>) normally checks the spelling of the word at
point, but it checks the text in the region if the mark is active
(see <a class="pxref" href="Fixit.xhtml#Spelling">Checking and Correcting Spelling</a>).  Normally, such commands use their default
behavior if the region is empty (i.e., if mark and point are at the
same position).  If you want them to operate on the empty region,
change the variable <code class="code">use-empty-active-region</code> to <code class="code">t</code>.
</p>
<a class="index-entry-id" id="index-delete_002dactive_002dregion"></a>
<p>As described in <a class="ref" href="Basic.xhtml#Erasing">Erasing Text</a>, the <kbd class="key">DEL</kbd>
(<code class="code">backward-delete-char</code>) and <kbd class="key">Delete</kbd>
(<code class="code">delete-forward-char</code>) commands also act this way.  If the mark
is active, they delete the text in the region.  (As an exception, if
you supply a numeric argument <var class="var">n</var>, where <var class="var">n</var> is not one, these
commands delete <var class="var">n</var> characters regardless of whether the mark is
active).  If you change the variable <code class="code">delete-active-region</code> to
<code class="code">nil</code>, then these commands don&#8217;t act differently when the mark is
active.  If you change the value to <code class="code">kill</code>, these commands
<em class="dfn">kill</em> the region instead of deleting it (see <a class="pxref" href="Killing.xhtml#Killing">Killing and Moving Text</a>).
</p>
<a class="index-entry-id" id="index-mark_002deven_002dif_002dinactive"></a>
<p>Other commands always operate on the region, and have no default
behavior.  Such commands usually have the word <code class="code">region</code> in their
names, like <kbd class="kbd">C-w</kbd> (<code class="code">kill-region</code>) and <kbd class="kbd">C-x C-u</kbd>
(<code class="code">upcase-region</code>).  If the mark is inactive, they operate on the
<em class="dfn">inactive region</em>&#8212;that is, on the text between point and the
position at which the mark was last set (see <a class="pxref" href="#Mark-Ring">The Mark Ring</a>).  To
disable this behavior, change the variable
<code class="code">mark-even-if-inactive</code> to <code class="code">nil</code>.  Then these commands will
instead signal an error if the mark is inactive.
</p>
<a class="index-entry-id" id="index-Delete-Selection-mode"></a>
<a class="index-entry-id" id="index-mode_002c-Delete-Selection"></a>
<a class="index-entry-id" id="index-delete_002dselection_002dmode"></a>
<a class="index-entry-id" id="index-delete_002dselection_002dtemporary_002dregion"></a>
<p>By default, text insertion occurs normally even if the mark is
active&#8212;for example, typing <kbd class="kbd">a</kbd> inserts the character &#8216;<samp class="samp">a</samp>&#8217;,
then deactivates the mark.  Delete Selection mode, a minor mode,
modifies this behavior: if you enable that mode, then inserting text
while the mark is active causes the text in the region to be deleted
first.  However, you can tune this behavior by customizing the
<code class="code">delete-selection-temporary-region</code> option.  Its default value is
<code class="code">nil</code>, but you can set it to <code class="code">t</code>, in which case only
temporarily-active regions will be replaced: those which are set by
dragging the mouse (see <a class="pxref" href="#Setting-Mark">Setting the Mark</a>) or by shift-selection
(see <a class="pxref" href="#Shift-Selection">Shift Selection</a>), as well as by <kbd class="kbd">C-u C-x C-x</kbd> when
Transient Mark Mode is disabled.  You can further tune the behavior by
setting <code class="code">delete-selection-temporary-region</code> to <code class="code">selection</code>:
then temporary regions by <kbd class="kbd">C-u C-x C-x</kbd> won&#8217;t be replaced, only
the ones activated by dragging the mouse or shift-selection.  To
toggle Delete Selection mode on or off, type <kbd class="kbd">M-x
delete-selection-mode</kbd>.
</p>
</div>
<div class="section-level-extent" id="Mark-Ring">
<h3 class="section" id="The-Mark-Ring">12.4 The Mark Ring</h3>

<a class="index-entry-id" id="index-mark-ring"></a>
<p>Each buffer remembers previous locations of the mark, in the
<em class="dfn">mark ring</em>.  Commands that set the mark also push the old mark
onto this ring.  One of the uses of the mark ring is to remember spots
that you may want to go back to.
</p>
<dl class="table">
<dt><kbd class="kbd">C-<kbd class="key">SPC</kbd> C-<kbd class="key">SPC</kbd></kbd></dt>
<dd><p>Set the mark, pushing it onto the mark ring, without activating it.
</p></dd>
<dt><kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd></dt>
<dd><p>Move point to where the mark was, and restore the mark from the ring
of former marks.
</p></dd>
</dl>

<a class="index-entry-id" id="index-C_002dSPC-C_002dSPC"></a>
<p>The command <kbd class="kbd">C-<kbd class="key">SPC</kbd> C-<kbd class="key">SPC</kbd></kbd> is handy when you want to
use the mark to remember a position to which you may wish to return.
It pushes the current point onto the mark ring, without activating the
mark (which would cause Emacs to highlight the region).  This is
actually two consecutive invocations of <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd>
(<code class="code">set-mark-command</code>); the first <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd> sets the mark,
and the second <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd> deactivates it.  (When Transient Mark
mode is off, <kbd class="kbd">C-<kbd class="key">SPC</kbd> C-<kbd class="key">SPC</kbd></kbd> instead activates Transient
Mark mode temporarily; see <a class="pxref" href="#Disabled-Transient-Mark">Disabling Transient Mark Mode</a>.)
</p>
<a class="index-entry-id" id="index-C_002du-C_002dSPC"></a>
<p>To return to a marked position, use <code class="code">set-mark-command</code> with a
prefix argument: <kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd>.  This moves point to where the
mark was, and deactivates the mark if it was active.  Each subsequent
<kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd> jumps to a prior position stored in the mark
ring.  The positions you move through in this way are not lost; they
go to the end of the ring.
</p>
<a class="index-entry-id" id="index-set_002dmark_002dcommand_002drepeat_002dpop"></a>
<p>If you set <code class="code">set-mark-command-repeat-pop</code> to non-<code class="code">nil</code>,
then immediately after you type <kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd>, you can type
<kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd> instead of <kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd> to cycle through
the mark ring.  By default, <code class="code">set-mark-command-repeat-pop</code> is
<code class="code">nil</code>.
</p>
<p>Each buffer has its own mark ring.  All editing commands use the
current buffer&#8217;s mark ring.  In particular, <kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd>
always stays in the same buffer.
</p>
<a class="index-entry-id" id="index-mark_002dring_002dmax"></a>
<p>The variable <code class="code">mark-ring-max</code> specifies the maximum number of
entries to keep in the mark ring.  This defaults to 16 entries.  If
that many entries exist and another one is pushed, the earliest one in
the list is discarded.  Repeating <kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd> cycles through
the positions currently in the ring.
</p>
<p>If you want to move back to the same place over and over, the mark
ring may not be convenient enough.  If so, you can record the position
in a register for later retrieval (see <a class="pxref" href="Registers.xhtml#Position-Registers">Saving
Positions in Registers</a>).
</p>
</div>
<div class="section-level-extent" id="Global-Mark-Ring">
<h3 class="section" id="The-Global-Mark-Ring">12.5 The Global Mark Ring</h3>
<a class="index-entry-id" id="index-global-mark-ring"></a>

<a class="index-entry-id" id="index-global_002dmark_002dring_002dmax"></a>
<p>In addition to the ordinary mark ring that belongs to each buffer,
Emacs has a single <em class="dfn">global mark ring</em>.  Each time you set a mark,
this is recorded in the global mark ring in addition to the current
buffer&#8217;s own mark ring, if you have switched buffers since the
previous mark setting.  Hence, the global mark ring records a sequence
of buffers that you have been in, and, for each buffer, a place where
you set the mark.  The length of the global mark ring is controlled by
<code class="code">global-mark-ring-max</code>, and is 16 by default.
</p>
<a class="index-entry-id" id="index-C_002dx-C_002dSPC"></a>
<a class="index-entry-id" id="index-pop_002dglobal_002dmark"></a>
<p>The command <kbd class="kbd">C-x C-<kbd class="key">SPC</kbd></kbd> (<code class="code">pop-global-mark</code>) jumps to
the buffer and position of the latest entry in the global ring.  It also
rotates the ring, so that successive uses of <kbd class="kbd">C-x C-<kbd class="key">SPC</kbd></kbd> take
you to earlier buffers and mark positions.
</p>
</div>
<div class="section-level-extent" id="Shift-Selection">
<h3 class="section" id="Shift-Selection-1">12.6 Shift Selection</h3>
<a class="index-entry-id" id="index-shift_002dselection"></a>

<p>If you hold down the shift key while typing a cursor motion command,
this sets the mark before moving point, so that the region extends
from the original position of point to its new position.  This feature
is referred to as <em class="dfn">shift-selection</em>.  It is similar to the way
text is selected in other editors.
</p>
<p>The mark set via shift-selection behaves a little differently from
what we have described above.  Firstly, in addition to the usual ways
of deactivating the mark (such as changing the buffer text or typing
<kbd class="kbd">C-g</kbd>), the mark is deactivated by any <em class="emph">unshifted</em> cursor
motion command.  Secondly, any subsequent <em class="emph">shifted</em> cursor motion
command avoids setting the mark anew.  Therefore, a series of shifted
cursor motion commands will continuously adjust the region.
</p>
<p>Shift-selection only works if the shifted cursor motion key is not
already bound to a separate command (see <a class="pxref" href="Customization.xhtml#Customization">Customization</a>).  For
example, if you bind <kbd class="kbd">S-C-f</kbd> to another command, typing
<kbd class="kbd">S-C-f</kbd> runs that command instead of performing a shift-selected
version of <kbd class="kbd">C-f</kbd> (<code class="code">forward-char</code>).
</p>
<p>A mark set via mouse commands behaves the same as a mark set via
shift-selection (see <a class="pxref" href="#Setting-Mark">Setting the Mark</a>).  For example, if you specify a
region by dragging the mouse, you can continue to extend the region
using shifted cursor motion commands.  In either case, any unshifted
cursor motion command deactivates the mark.
</p>
<a class="index-entry-id" id="index-shift_002dselect_002dmode"></a>
<p>To turn off shift-selection, set <code class="code">shift-select-mode</code> to
<code class="code">nil</code>.  Doing so does not disable setting the mark via mouse
commands.  If you set <code class="code">shift-select-mode</code> to the value
<code class="code">permanent</code>, cursor motion keys that were not shift-translated
will not deactivate the mark, so, for example, the region set by prior
commands can be extended by shift-selection, and unshifted cursor
motion keys will extend the region set by shift-selection.
</p>
</div>
<div class="section-level-extent" id="Disabled-Transient-Mark">
<h3 class="section" id="Disabling-Transient-Mark-Mode">12.7 Disabling Transient Mark Mode</h3>
<a class="index-entry-id" id="index-mode_002c-Transient-Mark"></a>
<a class="index-entry-id" id="index-Transient-Mark-mode"></a>
<a class="index-entry-id" id="index-highlighting-region"></a>
<a class="index-entry-id" id="index-region-highlighting"></a>
<a class="index-entry-id" id="index-Zmacs-mode"></a>
<a class="index-entry-id" id="index-transient_002dmark_002dmode"></a>

<p>The default behavior of the mark and region, in which setting the
mark activates it and highlights the region, is called Transient Mark
mode.  This is a minor mode that is enabled by default in interactive
sessions.  It can be toggled with <kbd class="kbd">M-x transient-mark-mode</kbd>, or
with the &#8216;<samp class="samp">Highlight Active Region</samp>&#8217; menu item in the
&#8216;<samp class="samp">Options</samp>&#8217; menu.  Turning it off switches Emacs to an alternative
mode of operation:
</p>
<ul class="itemize mark-bullet">
<li>Setting the mark, with commands like <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd> or <kbd class="kbd">C-x
C-x</kbd>, does not highlight the region.  Therefore, you can&#8217;t tell by
looking where the mark is located; you have to remember.

<p>The usual solution to this problem is to set the mark and then use it
soon, before you forget where it is.  You can also check where the
mark is by using <kbd class="kbd">C-x C-x</kbd>, which exchanges the positions of the
point and the mark (see <a class="pxref" href="#Setting-Mark">Setting the Mark</a>).
</p>
</li><li>Some commands, which ordinarily act on the region when the mark is
active, no longer do so.  For example, normally <kbd class="kbd">M-%</kbd>
(<code class="code">query-replace</code>) performs replacements within the region, if the
mark is active.  When Transient Mark mode is off, it always operates
from point to the end of the buffer.  Commands that act this way are
identified in their own documentation.
</li></ul>

<a class="index-entry-id" id="index-enabling-Transient-Mark-mode-temporarily"></a>
<p>While Transient Mark mode is off, you can activate it temporarily
using <kbd class="kbd">C-<kbd class="key">SPC</kbd> C-<kbd class="key">SPC</kbd></kbd> or <kbd class="kbd">C-u C-x C-x</kbd>.
</p>
<dl class="table">
<dt><a id="index-C_002dSPC-C_002dSPC_002c-enabling-Transient-Mark-mode-temporarily"></a><kbd class="kbd">C-<kbd class="key">SPC</kbd> C-<kbd class="key">SPC</kbd></kbd></dt>
<dd><p>Set the mark at point (like plain <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd>) and enable
Transient Mark mode just once, until the mark is deactivated.  (This
is not really a separate command; you are using the <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd>
command twice.)
</p>
</dd>
<dt><a id="index-C_002du-C_002dx-C_002dx"></a><kbd class="kbd">C-u C-x C-x</kbd></dt>
<dd><p>Exchange point and mark, activate the mark and enable Transient Mark
mode temporarily, until the mark is next deactivated.  (This is the
<kbd class="kbd">C-x C-x</kbd> command, <code class="code">exchange-point-and-mark</code>, with a prefix
argument.)
</p></dd>
</dl>

<p>These commands set or activate the mark, and enable Transient Mark
mode only until the mark is deactivated.  One reason you may want to
use them is that some commands operate on the entire buffer instead of
the region when Transient Mark mode is off.  Enabling Transient Mark
mode momentarily gives you a way to use these commands on the region.
</p>
<p>When you specify a region with the mouse (see <a class="pxref" href="#Setting-Mark">Setting the Mark</a>), or
with shift-selection (see <a class="pxref" href="#Shift-Selection">Shift Selection</a>), this likewise
activates Transient Mark mode temporarily and highlights the region.
</p>
</div>
</div>
<div class="footnotes-segment">
<h4 class="footnotes-heading">Footnotes</h4>

<h5 class="footnote-body-heading"><a id="FOOT4" href="#DOCF4">(4)</a></h5>
<p>There is no <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd>
character in <abbr class="acronym">ASCII</abbr>; usually, typing <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd> on a
text terminal gives the character <kbd class="kbd">C-@</kbd>.  This key is also bound
to <code class="code">set-mark-command</code>, so unless you are unlucky enough to have
a text terminal that behaves differently, you might as well think of
<kbd class="kbd">C-@</kbd> as <kbd class="kbd">C-<kbd class="key">SPC</kbd></kbd>.</p>
</div>



</body>
</html>
