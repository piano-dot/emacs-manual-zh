<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<!-- Created by GNU Texinfo 7.1, https://www.gnu.org/software/texinfo/ -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<!-- 这是 GNU Emacs 手册,
为 Emacs  29.2 更新

英文原版版权提示 - Original English version copyright note

Copyright © 1985-2024 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "The GNU Manifesto," "Distribution" and
"GNU GENERAL PUBLIC LICENSE," with the Front-Cover Texts being "A GNU
Manual," and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled "GNU Free Documentation
License."

(a) The FSF's Back-Cover Text is: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."

中文翻译版版权提示 - Chinese translation revision copyright notice

版权所有 © 1985-2024 林羿轩(Ralph Lin).

您有在 Free Software Foundation发布的GNU Free Documentation License 第1.3版或之后版本的约束下对其进行再发布及修的权利。 恒定章节为 "The GNU Manifesto," "分发" "(中文版)GNU GENERAL PUBLIC LICENSE" 和
"GNU GENERAL PUBLIC LICENSE" , 前封面文字为 "A GNU
Manual,"后封面文字如下(a).  本书的FDL许可证可以在 "GNU Free Documentation
License."找到.

(a) FSF的后封面文字为: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."
 -->
<title>31 Dired, the Directory Editor (GNU Emacs Manual)</title>

<meta name="description" content="31 Dired, the Directory Editor (GNU Emacs Manual)"/>
<meta name="keywords" content="31 Dired, the Directory Editor (GNU Emacs Manual)"/>
<meta name="resource-type" content="document"/>
<meta name="distribution" content="global"/>
<meta name="Generator" content="texi2any"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>

<link href="emacs.xhtml" rel="start" title="Emacs 编辑器"/>
<link href="Key-Index.xhtml" rel="index" title="Key (Character) Index"/>
<link href="emacs.xhtml#SEC_Contents" rel="contents" title="Table of Contents"/>
<link href="emacs.xhtml" rel="up" title="Emacs 编辑器"/>
<link href="Calendar_002fDiary.xhtml#Calendar_002fDiary" rel="next" title="32 The Calendar and the Diary"/>
<link href="Abbrevs.xhtml#Abbrevs" rel="prev" title="30 Abbrevs"/>
<style type="text/css">
<!--
div.example {margin-left: 3.2em}
kbd.kbd {font-style: oblique}
kbd.key {font-style: normal}
span.r {font-family: initial; font-weight: normal; font-style: normal}
strong.def-name {font-family: monospace; font-weight: bold; font-size: larger}
ul.mark-bullet {list-style-type: disc}
-->
</style>


</head>

<body lang="zh_CN">
<div class="chapter-level-extent" id="Dired">

<h2 class="chapter" id="Dired_002c-the-Directory-Editor">31 Dired, the Directory Editor</h2>
<a class="index-entry-id" id="index-Dired"></a>
<a class="index-entry-id" id="index-file-management"></a>

<p>Dired makes an Emacs buffer containing a listing of a directory, and
optionally some of its subdirectories as well.  You can use the normal
Emacs commands to move around in this buffer, and special Dired
commands to operate on the listed files.  Dired works with both local
and remote directories.
</p>
<p>The Dired buffer is normally read-only, and inserting text in it is
not allowed (however, the Wdired mode allows that, see <a class="pxref" href="#Wdired">Editing the Dired Buffer</a>).
Ordinary printing characters such as <kbd class="kbd">d</kbd> and <kbd class="kbd">x</kbd> are
redefined for special Dired commands.  Some Dired commands <em class="dfn">mark</em>
or <em class="dfn">flag</em> the <em class="dfn">current file</em> (that is, the file on the current
line); other commands operate on the marked files or on the flagged
files.  You first mark certain files in order to operate on all of
them with one command.
</p>
<p>The Dired-X package provides various extra features for Dired mode.
See <a href="https://www.gnu.org/software/emacs/manual/html_node/dired-x/index.html#Top">Dired-X</a> in <cite class="cite">Dired Extra User&#8217;s Manual</cite>.
</p>
<p>You can also view a list of files in a directory with <kbd class="kbd">C-x C-d</kbd>
(<code class="code">list-directory</code>).  Unlike Dired, this command does not allow
you to operate on the listed files.  See <a class="xref" href="Files.xhtml#Directories">File Directories</a>.
</p>

<div class="section-level-extent" id="Dired-Enter">
<h3 class="section" id="Entering-Dired">31.1 Entering Dired</h3>

<a class="index-entry-id" id="index-dired"></a>
<a class="index-entry-id" id="index-C_002dx-d"></a>
<a class="index-entry-id" id="index-dired_002dlisting_002dswitches"></a>
<p>To invoke Dired, type <kbd class="kbd">C-x d</kbd> (<code class="code">dired</code>).  This reads a
directory&#8217;s name using the minibuffer, and opens a <em class="dfn">Dired buffer</em>
listing the files in that directory.  You can also supply a wildcard
file name pattern as the minibuffer argument, in which case the Dired
buffer lists all files matching that pattern.  A wildcard may appear
in the directory part as well.
For instance,
</p>
<div class="example">
<pre class="example-preformatted">C-x d  ~/foo/*.el  <kbd class="key">RET</kbd>
C-x d  ~/foo/*/*.el  <kbd class="key">RET</kbd>
</pre></div>

<p>The former lists all the files with extension &#8216;<samp class="samp">.el</samp>&#8217; in directory
&#8216;<samp class="samp">foo</samp>&#8217;.  The latter lists the files with extension &#8216;<samp class="samp">.el</samp>&#8217;
in all the subdirectories of &#8216;<samp class="samp">foo</samp>&#8217;.
</p>
<a class="index-entry-id" id="index-globstar_002c-in-Dired"></a>
<p>On Posix systems, when the system shell supports <em class="dfn">globstar</em>, a
recursive globbing feature, and that support is enabled, you can use
recursive globbing in Dired:
</p>
<div class="example">
<pre class="example-preformatted">C-x d  ~/foo/**/*.el  <kbd class="key">RET</kbd>
</pre></div>

<p>This command produces a directory listing with all the files with
extension &#8216;<samp class="samp">.el</samp>&#8217;, descending recursively in all the subdirectories
of &#8216;<samp class="samp">foo</samp>&#8217;.  Note that there are small differences in the
implementation of globstar between different shells.  Check your shell
manual to know the expected behavior.
</p>
<a class="index-entry-id" id="index-dired_002dmaybe_002duse_002dglobstar"></a>
<a class="index-entry-id" id="index-dired_002denable_002dglobstar_002din_002dshell"></a>
<p>If the shell supports globstar, but that support is disabled by
default, you can still let Dired use this feature by customizing
<code class="code">dired-maybe-use-globstar</code> to a non-<code class="code">nil</code> value; then Dired
will enable globstar for those shells for which it knows how (see
<code class="code">dired-enable-globstar-in-shell</code> for the list of those shells).
</p>
<p>The usual history and completion commands can be used in the minibuffer;
in particular, <kbd class="kbd">M-n</kbd> puts the name of the visited file (if any) in
the minibuffer (see <a class="pxref" href="Minibuffer.xhtml#Minibuffer-History">Minibuffer History</a>).
</p>
<p>You can also invoke Dired by giving <kbd class="kbd">C-x C-f</kbd> (<code class="code">find-file</code>)
a directory&#8217;s name.
</p>
<a class="index-entry-id" id="index-dired_002djump"></a>
<a class="index-entry-id" id="index-dired_002djump_002dother_002dwindow"></a>
<a class="index-entry-id" id="index-C_002dx-C_002dj"></a>
<a class="index-entry-id" id="index-C_002dx-4-C_002dj"></a>
<p>You can ask Emacs to invoke Dired on the default-directory
(see <a class="pxref" href="Files.xhtml#File-Names">default-directory</a>) of any buffer, by typing
<kbd class="kbd">C-x C-j</kbd> (<code class="code">dired-jump</code>).  If the buffer visits a file, this
command will move point to that file&#8217;s line in the Dired buffer it
shows; otherwise, point will end up on the first file in the directory
listing.  As an exception, if you type <kbd class="kbd">C-x C-j</kbd> in a Dired
buffer, Emacs displays the directory listing of the parent directory
and places point on the line that corresponds to the directory where
you invoked <code class="code">dired-jump</code>.  Typing <kbd class="kbd">C-x 4 C-j</kbd>
(<code class="code">dired-jump-other-window</code>) has the same effect, but displays the
Dired buffer in a new window.
</p>
<p>The variable <code class="code">dired-listing-switches</code> specifies the options to
give to <code class="command">ls</code> for listing the directory; this string
<em class="emph">must</em> contain &#8216;<samp class="samp">-l</samp>&#8217;.  If you use a prefix argument with the
<code class="code">dired</code> command, you can specify the <code class="command">ls</code> switches with the
minibuffer before you enter the directory specification.  No matter
how they are specified, the <code class="command">ls</code> switches can include short
options (that is, single characters) requiring no arguments, and long
options (starting with &#8216;<samp class="samp">--</samp>&#8217;) whose arguments are specified with
&#8216;<samp class="samp">=</samp>&#8217;.
</p>
<p>Dired does not handle files that have names with embedded newline
characters well.  If you have many such files, you may consider adding
&#8216;<samp class="samp">-b</samp>&#8217; to <code class="code">dired-listing-switches</code>.  This will quote all
special characters and allow Dired to handle them better.  (You can
also use the <kbd class="kbd">C-u C-x d</kbd> command to add &#8216;<samp class="samp">-b</samp>&#8217; temporarily.)
</p>
<a class="index-entry-id" id="index-dired_002dswitches_002din_002dmode_002dline"></a>
<p>Dired displays in the mode line an indication of what were the
switches used to invoke <code class="command">ls</code>.  By default, Dired will try to
determine whether the switches indicate sorting by name or date, and
will say so in the mode line.  If the <code class="code">dired-switches-in-mode-line</code>
variable is <code class="code">as-is</code>, the switches will be shown verbatim.  If
this variable&#8217;s value is an integer, the switch display will be
truncated to that length.  This variable can also be a function, which
will be called with <code class="code">dired-actual-switches</code> as the only
parameter, and should return a string to display in the mode line.
</p>
<a class="index-entry-id" id="index-dired_002duse_002dls_002ddired"></a>
<p>If your <code class="command">ls</code> program supports the &#8216;<samp class="samp">--dired</samp>&#8217; option,
Dired automatically passes it that option; this causes <code class="command">ls</code> to
emit special escape sequences for certain unusual file names, without
which Dired will not be able to parse those names.  The first time you
run Dired in an Emacs session, it checks whether <code class="command">ls</code> supports
the &#8216;<samp class="samp">--dired</samp>&#8217; option by calling it once with that option.  If the
exit code is 0, Dired will subsequently use the &#8216;<samp class="samp">--dired</samp>&#8217; option;
otherwise it will not.  You can inhibit this check by customizing the
variable <code class="code">dired-use-ls-dired</code>.  The value <code class="code">unspecified</code> (the
default) means to perform the check; any other non-<code class="code">nil</code> value
means to use the &#8216;<samp class="samp">--dired</samp>&#8217; option; and <code class="code">nil</code> means not to
use the &#8216;<samp class="samp">--dired</samp>&#8217; option.
</p>
<p>On MS-Windows and MS-DOS systems, and also on some remote systems,
Emacs emulates <code class="command">ls</code>.  See <a class="xref" href="Microsoft-Windows.xhtml#ls-in-Lisp">Emulation of <code class="code">ls</code> on MS-Windows</a>, for options and
peculiarities of this emulation.
</p>
<a class="index-entry-id" id="index-dired_002dother_002dwindow"></a>
<a class="index-entry-id" id="index-C_002dx-4-d"></a>
<a class="index-entry-id" id="index-dired_002dother_002dframe"></a>
<a class="index-entry-id" id="index-C_002dx-5-d"></a>
<p>To display the Dired buffer in another window, use <kbd class="kbd">C-x 4 d</kbd>
(<code class="code">dired-other-window</code>).  <kbd class="kbd">C-x 5 d</kbd>
(<code class="code">dired-other-frame</code>) displays the Dired buffer in a separate
frame.
</p>
<a class="index-entry-id" id="index-q-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-quit_002dwindow_002c-in-Dired-buffers"></a>
<p>Typing <kbd class="kbd">q</kbd> (<code class="code">quit-window</code>) buries the Dired buffer, and
deletes its window if the window was created just for that buffer.
</p>
</div>
<div class="section-level-extent" id="Dired-Navigation">
<h3 class="section" id="Navigation-in-the-Dired-Buffer">31.2 Navigation in the Dired Buffer</h3>

<a class="index-entry-id" id="index-C_002dn-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-C_002dp-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dnext_002dline"></a>
<a class="index-entry-id" id="index-dired_002dprevious_002dline"></a>
<p>All the usual Emacs cursor motion commands are available in Dired
buffers.  The keys <kbd class="kbd">C-n</kbd> and <kbd class="kbd">C-p</kbd> are redefined to run
<code class="code">dired-next-line</code> and <code class="code">dired-previous-line</code>, respectively,
and they put the cursor at the beginning of the file name on the line,
rather than at the beginning of the line.
</p>
<a class="index-entry-id" id="index-SPC-_0028Dired_0029"></a>
<p>For extra convenience, <kbd class="key">SPC</kbd> and <kbd class="kbd">n</kbd> in Dired are equivalent
to <kbd class="kbd">C-n</kbd>.  <kbd class="kbd">p</kbd> is equivalent to <kbd class="kbd">C-p</kbd>.  (Moving by lines
is so common in Dired that it deserves to be easy to type.)  <kbd class="key">DEL</kbd>
(move up and unflag) is also often useful simply for moving up
(see <a class="pxref" href="#Dired-Deletion">Deleting Files with Dired</a>).
</p>
<a class="index-entry-id" id="index-dired_002dgoto_002dfile"></a>
<a class="index-entry-id" id="index-j-_0028Dired_0029"></a>
<p><kbd class="kbd">j</kbd> (<code class="code">dired-goto-file</code>) prompts for a file name using the
minibuffer, and moves point to the line in the Dired buffer describing
that file.
</p>
<a class="index-entry-id" id="index-searching-Dired-buffers"></a>
<a class="index-entry-id" id="index-dired_002disearch_002dfilenames"></a>
<a class="index-entry-id" id="index-dired_002disearch_002dfilenames-1"></a>
<a class="index-entry-id" id="index-dired_002disearch_002dfilenames_002dregexp"></a>
<a class="index-entry-id" id="index-M_002ds-f-C_002ds-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-M_002ds-f-M_002dC_002ds-_0028Dired_0029"></a>
<p><kbd class="kbd">M-s f C-s</kbd> (<code class="code">dired-isearch-filenames</code>) performs a forward
incremental search in the Dired buffer, looking for matches only
amongst the file names and ignoring the rest of the text in the
buffer.  <kbd class="kbd">M-s f M-C-s</kbd> (<code class="code">dired-isearch-filenames-regexp</code>)
does the same, using a regular expression search.  If you change the
variable <code class="code">dired-isearch-filenames</code> to <code class="code">t</code>, then the
usual search commands also limit themselves to the file names; for
instance, <kbd class="kbd">C-s</kbd> behaves like <kbd class="kbd">M-s f C-s</kbd>.  If the value is
<code class="code">dwim</code>, then search commands match the file names only when point
was on a file name initially.  See <a class="xref" href="Search.xhtml#Search">Searching and Replacement</a>, for information about
incremental search.
</p>
<p>Some additional navigation commands are available when the Dired
buffer includes several directories.  See <a class="xref" href="#Subdirectory-Motion">Moving Over Subdirectories</a>.
</p>
</div>
<div class="section-level-extent" id="Dired-Deletion">
<h3 class="section" id="Deleting-Files-with-Dired">31.3 Deleting Files with Dired</h3>
<a class="index-entry-id" id="index-flagging-files-_0028in-Dired_0029"></a>
<a class="index-entry-id" id="index-deleting-files-_0028in-Dired_0029"></a>

<p>One of the most frequent uses of Dired is to first <em class="dfn">flag</em> files for
deletion, then delete the files that were flagged.
</p>
<dl class="table">
<dt><kbd class="kbd">d</kbd></dt>
<dd><p>Flag this file for deletion (<code class="code">dired-flag-file-deletion</code>).
</p></dd>
<dt><kbd class="kbd">u</kbd></dt>
<dd><p>Remove the deletion flag (<code class="code">dired-unmark</code>).
</p></dd>
<dt><kbd class="kbd"><kbd class="key">DEL</kbd></kbd></dt>
<dd><p>Move point to previous line and remove the deletion flag on that line
(<code class="code">dired-unmark-backward</code>).
</p></dd>
<dt><kbd class="kbd">x</kbd></dt>
<dd><p>Delete files flagged for deletion (<code class="code">dired-do-flagged-delete</code>).
</p></dd>
</dl>

<a class="index-entry-id" id="index-d-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dflag_002dfile_002ddeletion"></a>
<p>You can flag a file for deletion by moving to the line describing
the file and typing <kbd class="kbd">d</kbd> (<code class="code">dired-flag-file-deletion</code>).  The
deletion flag is visible as a &#8216;<samp class="samp">D</samp>&#8217; at the beginning of the line.
This command moves point to the next line, so that repeated <kbd class="kbd">d</kbd>
commands flag successive files.  A numeric prefix argument serves as a
repeat count; a negative count means to flag preceding files.
</p>
<p>If the region is active, the <kbd class="kbd">d</kbd> command flags all files in the
region for deletion; in this case, the command does not move point,
and ignores any prefix argument.
</p>
<a class="index-entry-id" id="index-u-_0028Dired-deletion_0029"></a>
<a class="index-entry-id" id="index-DEL-_0028Dired_0029"></a>
<p>The reason for flagging files for deletion, rather than deleting
files immediately, is to reduce the danger of deleting a file
accidentally.  Until you direct Dired to delete the flagged files, you
can remove deletion flags using the commands <kbd class="kbd">u</kbd> and <kbd class="key">DEL</kbd>.
<kbd class="kbd">u</kbd> (<code class="code">dired-unmark</code>) works just like <kbd class="kbd">d</kbd>, but removes
flags rather than making flags.  <kbd class="key">DEL</kbd>
(<code class="code">dired-unmark-backward</code>) moves upward, removing flags; it is
like <kbd class="kbd">u</kbd> with argument &#8722;1.  A numeric prefix argument to
either command serves as a repeat count, with a negative count meaning
to unflag in the opposite direction.  If the region is active, these
commands instead unflag all files in the region, without moving point.
</p>
<a class="index-entry-id" id="index-x-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002dflagged_002ddelete"></a>
<p>To delete flagged files, type <kbd class="kbd">x</kbd>
(<code class="code">dired-do-flagged-delete</code>).  This command displays a list of all
the file names flagged for deletion, and requests confirmation with
<kbd class="kbd">yes</kbd>.  If you confirm, Dired deletes the flagged files, then
deletes their lines from the text of the Dired buffer.  The Dired
buffer, with somewhat fewer lines, remains selected.
</p>
<p>If you answer <kbd class="kbd">no</kbd> or quit with <kbd class="kbd">C-g</kbd> when asked to confirm, you
return immediately to Dired, with the deletion flags still present in
the buffer, and no files actually deleted.
</p>
<a class="index-entry-id" id="index-recursive-deletion"></a>
<a class="index-entry-id" id="index-dired_002drecursive_002ddeletes"></a>
<p>You can delete empty directories just like other files, but normally
Dired cannot delete directories that are nonempty.  However, if the
variable <code class="code">dired-recursive-deletes</code> is non-<code class="code">nil</code>, then Dired
is allowed to delete nonempty directories including all their
contents.  That can be somewhat risky.  If the value of the variable
is <code class="code">always</code>, Dired will delete nonempty directories recursively,
which is even more risky.
</p>
<p>Even if you have set <code class="code">dired-recursive-deletes</code> to <code class="code">nil</code>, you
might want sometimes to delete directories recursively without being
asked for confirmation for all of them.  For example, you may want
that when you have marked many directories for deletion and you are
very sure that all of them can safely be deleted.  For every nonempty
directory you are asked for confirmation to delete, if you answer
<code class="code">all</code>, then all the remaining directories will be deleted without
any further questions.
</p>
<a class="index-entry-id" id="index-delete_002dby_002dmoving_002dto_002dtrash_002c-and-Dired"></a>
<p>If you change the variable <code class="code">delete-by-moving-to-trash</code> to
<code class="code">t</code>, the above deletion commands will move the affected files or
directories into the operating system&#8217;s Trash, instead of deleting
them outright.  See <a class="xref" href="Files.xhtml#Misc-File-Ops">Miscellaneous File Operations</a>.
</p>
<p>An alternative way of deleting files is to mark them with <kbd class="kbd">m</kbd>
and delete with <kbd class="kbd">D</kbd>, see <a class="ref" href="#Operating-on-Files">Operating on Files</a>.
</p>
</div>
<div class="section-level-extent" id="Flagging-Many-Files">
<h3 class="section" id="Flagging-Many-Files-at-Once">31.4 Flagging Many Files at Once</h3>
<a class="index-entry-id" id="index-flagging-many-files-for-deletion-_0028in-Dired_0029"></a>

<p>The <kbd class="kbd">#</kbd>, <kbd class="kbd">~</kbd>, <kbd class="kbd">.</kbd>, <kbd class="kbd">% &amp;</kbd>, and <kbd class="kbd">% d</kbd> commands
flag many files for deletion, based on their file names:
</p>
<dl class="table">
<dt><kbd class="kbd">#</kbd></dt>
<dd><p>Flag all auto-save files (files whose names start and end with &#8216;<samp class="samp">#</samp>&#8217;)
for deletion (see <a class="pxref" href="Files.xhtml#Auto-Save">Auto-Saving: Protection Against Disasters</a>).
</p>
</dd>
<dt><kbd class="kbd">~</kbd></dt>
<dd><p>Flag all backup files (files whose names end with &#8216;<samp class="samp">~</samp>&#8217;) for deletion
(see <a class="pxref" href="Files.xhtml#Backup">Backup Files</a>).
</p>
</dd>
<dt><kbd class="kbd">. <span class="r">(Period)</span></kbd></dt>
<dd><p>Flag excess numeric backup files for deletion.  The oldest and newest
few backup files of any one file are exempt; the middle ones are
flagged.
</p>
</dd>
<dt><kbd class="kbd">% &amp;</kbd></dt>
<dd><p>Flag for deletion all files with certain kinds of names which suggest
you could easily create those files again.
</p>
</dd>
<dt><kbd class="kbd">% d <var class="var">regexp</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Flag for deletion all files whose names match the regular expression
<var class="var">regexp</var>.
</p></dd>
</dl>

<a class="index-entry-id" id="index-_0023-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dflag_002dauto_002dsave_002dfiles"></a>
<a class="index-entry-id" id="index-deleting-auto_002dsave-files"></a>
<p><kbd class="kbd">#</kbd> (<code class="code">dired-flag-auto-save-files</code>) flags all files whose
names look like auto-save files&#8212;that is, files whose names begin and
end with &#8216;<samp class="samp">#</samp>&#8217;.  See <a class="xref" href="Files.xhtml#Auto-Save">Auto-Saving: Protection Against Disasters</a>.
</p>
<a class="index-entry-id" id="index-_007e-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dflag_002dbackup_002dfiles"></a>
<p><kbd class="kbd">~</kbd> (<code class="code">dired-flag-backup-files</code>) flags all files whose names
say they are backup files&#8212;that is, files whose names end in
&#8216;<samp class="samp">~</samp>&#8217;.  See <a class="xref" href="Files.xhtml#Backup">Backup Files</a>.
</p>
<a class="index-entry-id" id="index-_002e-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dkept_002dversions"></a>
<a class="index-entry-id" id="index-dired_002dclean_002ddirectory"></a>
<p><kbd class="kbd">.</kbd> (period, <code class="code">dired-clean-directory</code>) flags just some of
the backup files for deletion: all but the oldest few and newest few
backups of any one file.  Normally, the number of newest versions kept
for each file is given by the variable <code class="code">dired-kept-versions</code>
(<em class="emph">not</em> <code class="code">kept-new-versions</code>; that applies only when saving).
The number of oldest versions to keep is given by the variable
<code class="code">kept-old-versions</code>.
</p>
<p>Period with a positive numeric argument, as in <kbd class="kbd">C-u 3 .</kbd>,
specifies the number of newest versions to keep, overriding
<code class="code">dired-kept-versions</code>.  A negative numeric argument overrides
<code class="code">kept-old-versions</code>, using minus the value of the argument to
specify the number of oldest versions of each file to keep.
</p>
<a class="index-entry-id" id="index-_0025-_0026-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dflag_002dgarbage_002dfiles"></a>
<a class="index-entry-id" id="index-dired_002dgarbage_002dfiles_002dregexp"></a>
<a class="index-entry-id" id="index-deleting-some-backup-files"></a>
<p><kbd class="kbd">% &amp;</kbd> (<code class="code">dired-flag-garbage-files</code>) flags files whose names
match the regular expression specified by the variable
<code class="code">dired-garbage-files-regexp</code>.  By default, this matches certain
files produced by TeX, &#8216;<samp class="samp">.bak</samp>&#8217; files, and the &#8216;<samp class="samp">.orig</samp>&#8217; and
&#8216;<samp class="samp">.rej</samp>&#8217; files produced by <code class="code">patch</code>.
</p>
<a class="index-entry-id" id="index-dired_002dflag_002dfiles_002dregexp"></a>
<a class="index-entry-id" id="index-_0025-d-_0028Dired_0029"></a>
<p><kbd class="kbd">% d</kbd> flags all files whose names match a specified regular
expression (<code class="code">dired-flag-files-regexp</code>).  Only the non-directory
part of the file name is used in matching.  You can use &#8216;<samp class="samp">^</samp>&#8217; and
&#8216;<samp class="samp">$</samp>&#8217; to anchor matches.  You can exclude certain subdirectories
from marking by hiding them while you use <kbd class="kbd">% d</kbd>.  See <a class="xref" href="#Hiding-Subdirectories">Hiding Subdirectories</a>.
</p>
</div>
<div class="section-level-extent" id="Dired-Visiting">
<h3 class="section" id="Visiting-Files-in-Dired">31.5 Visiting Files in Dired</h3>

<p>There are several Dired commands for visiting or examining the files
listed in the Dired buffer.  All of them apply to the current line&#8217;s
file; if that file is really a directory, these commands invoke Dired on
that subdirectory (making a separate Dired buffer).
</p>
<dl class="table">
<dt><a class="index-entry-id" id="index-dired_002dfind_002dfile"></a>
<a id="index-f-_0028Dired_0029"></a><kbd class="kbd">f</kbd></dt>
<dd><p>Visit the file described on the current line, like typing <kbd class="kbd">C-x C-f</kbd>
and supplying that file name (<code class="code">dired-find-file</code>).  See <a class="xref" href="Files.xhtml#Visiting">Visiting Files</a>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-e-_0028Dired_0029"></a>
<a id="index-RET-_0028Dired_0029"></a><kbd class="kbd"><kbd class="key">RET</kbd></kbd></dt>
<dt><kbd class="kbd">e</kbd></dt>
<dd><p>Equivalent to <kbd class="kbd">f</kbd>.
</p>

</dd>
<dt><a class="index-entry-id" id="index-dired_002dfind_002dfile_002dother_002dwindow"></a>
<a id="index-o-_0028Dired_0029"></a><kbd class="kbd">o</kbd></dt>
<dd><p>Like <kbd class="kbd">f</kbd>, but uses another window to display the file&#8217;s buffer
(<code class="code">dired-find-file-other-window</code>).  The Dired buffer remains visible
in the first window.  This is like using <kbd class="kbd">C-x 4 C-f</kbd> to visit the
file.  See <a class="xref" href="Windows.xhtml#Windows">Multiple Windows</a>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002ddisplay_002dfile"></a>
<a id="index-C_002do-_0028Dired_0029"></a><kbd class="kbd">C-o</kbd></dt>
<dd><p>Visit the file described on the current line, and display the buffer in
another window, but do not select that window (<code class="code">dired-display-file</code>).
</p>
</dd>
<dt><a id="index-dired_002dmouse_002dfind_002dfile_002dother_002dwindow"></a><kbd class="kbd">mouse-1</kbd></dt>
<dt><kbd class="kbd">mouse-2</kbd></dt>
<dd><p>Visit the file whose name you clicked on
(<code class="code">dired-mouse-find-file-other-window</code>).  This uses another window
to display the file, like the <kbd class="kbd">o</kbd> command.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dview_002dfile"></a>
<a id="index-v-_0028Dired_0029"></a><kbd class="kbd">v</kbd></dt>
<dd><p>View the file described on the current line, with View mode
(<code class="code">dired-view-file</code>).  View mode provides convenient commands to
navigate the buffer but forbids changing it; See <a class="xref" href="Display.xhtml#View-Mode">View Mode</a>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dup_002ddirectory"></a>
<a id="index-_005e-_0028Dired_0029"></a><kbd class="kbd">^</kbd></dt>
<dd><p>Visit the parent directory of the current directory
(<code class="code">dired-up-directory</code>).  This is equivalent to moving to the line
for <samp class="file">..</samp> and typing <kbd class="kbd">f</kbd> there.
</p></dd>
</dl>

<dl class="first-defvr first-defopt-alias-first-defvr">
<dt class="defvr defopt-alias-defvr" id="index-dired_002dkill_002dwhen_002dopening_002dnew_002ddired_002dbuffer"><span class="category-def">User Option: </span><strong class="def-name">dired-kill-when-opening-new-dired-buffer</strong></dt>
<dd><p>When visiting a new sub-directory in Dired, Emacs will (by default)
open a new buffer to display this new directory, and leave the old
Dired buffer as is.  If this user option is non-<code class="code">nil</code>, the old
Dired buffer will be killed after selecting the new directory.  This
means that if you&#8217;re traversing a directory structure in Dired, you
won&#8217;t end up with more than a single Dired buffer.
</p></dd></dl>

</div>
<div class="section-level-extent" id="Marks-vs-Flags">
<h3 class="section" id="Dired-Marks-vs_002e-Flags">31.6 Dired Marks vs. Flags</h3>

<a class="index-entry-id" id="index-marking-many-files-_0028in-Dired_0029"></a>
<p>Instead of flagging a file with &#8216;<samp class="samp">D</samp>&#8217;, you can <em class="dfn">mark</em> the
file with some other character (usually &#8216;<samp class="samp">*</samp>&#8217;).  Most Dired
commands to operate on files use the files marked with &#8216;<samp class="samp">*</samp>&#8217;.  The
only command that operates on flagged files is <kbd class="kbd">x</kbd>, which deletes
them.
</p>
<p>Here are some commands for marking with &#8216;<samp class="samp">*</samp>&#8217;, for unmarking, and
for operating on marks.  (See <a class="xref" href="#Dired-Deletion">Deleting Files with Dired</a>, for commands to flag
and unflag files.)
</p>
<dl class="table">
<dt><a class="index-entry-id" id="index-_002a-m-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dmark"></a>
<a id="index-m-_0028Dired_0029"></a><kbd class="kbd">m</kbd></dt>
<dt><kbd class="kbd">* m</kbd></dt>
<dd><p>Mark the current file with &#8216;<samp class="samp">*</samp>&#8217; (<code class="code">dired-mark</code>).  If the
region is active, mark all files in the region instead; otherwise, if
a numeric argument <var class="var">n</var> is supplied, mark the next <var class="var">n</var> files
instead, starting with the current file (if <var class="var">n</var> is negative, mark
the previous &#8722;<var class="var">n</var> files).  If invoked on a subdirectory
header line (see <a class="pxref" href="#Subdirectories-in-Dired">Subdirectories in Dired</a>), this command marks all
the files in that subdirectory.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dnumber_002dof_002dmarked_002dfiles"></a>
<a id="index-_002a-N-_0028Dired_0029"></a><kbd class="kbd">* N</kbd></dt>
<dd><p>Report what the number and size of the marked files are
(<code class="code">dired-number-of-marked-files</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dmark_002dexecutables"></a>
<a class="index-entry-id" id="index-marking-executable-files-_0028in-Dired_0029"></a>
<a id="index-_002a-_002a-_0028Dired_0029"></a><kbd class="kbd">* *</kbd></dt>
<dd><p>Mark all executable files with &#8216;<samp class="samp">*</samp>&#8217;
(<code class="code">dired-mark-executables</code>).  With a numeric argument, unmark all
those files.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dmark_002dsymlinks"></a>
<a class="index-entry-id" id="index-marking-symbolic-links-_0028in-Dired_0029"></a>
<a id="index-_002a-_0040-_0028Dired_0029"></a><kbd class="kbd">* @</kbd></dt>
<dd><p>Mark all symbolic links with &#8216;<samp class="samp">*</samp>&#8217; (<code class="code">dired-mark-symlinks</code>).
With a numeric argument, unmark all those files.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dmark_002ddirectories"></a>
<a class="index-entry-id" id="index-marking-subdirectories-_0028in-Dired_0029"></a>
<a id="index-_002a-_002f-_0028Dired_0029"></a><kbd class="kbd">* /</kbd></dt>
<dd><p>Mark with &#8216;<samp class="samp">*</samp>&#8217; all files which are directories, except for
<samp class="file">.</samp> and <samp class="file">..</samp> (<code class="code">dired-mark-directories</code>).  With a numeric
argument, unmark all those files.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dmark_002dsubdir_002dfiles"></a>
<a id="index-_002a-s-_0028Dired_0029"></a><kbd class="kbd">* s</kbd></dt>
<dd><p>Mark all the files in the current subdirectory, aside from <samp class="file">.</samp>
and <samp class="file">..</samp> (<code class="code">dired-mark-subdir-files</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-_002a-u-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dunmark"></a>
<a id="index-u-_0028Dired_0029"></a><kbd class="kbd">u</kbd></dt>
<dt><kbd class="kbd">* u</kbd></dt>
<dd><p>Remove any mark on this line (<code class="code">dired-unmark</code>).  If the region is
active, unmark all files in the region instead; otherwise, if a
numeric argument <var class="var">n</var> is supplied, unmark the next <var class="var">n</var> files
instead, starting with the current file (if <var class="var">n</var> is negative,
unmark the previous &#8722;<var class="var">n</var> files).
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dunmark_002dbackward"></a>
<a class="index-entry-id" id="index-unmarking-files-_0028in-Dired_0029"></a>
<a id="index-_002a-DEL-_0028Dired_0029"></a><kbd class="kbd"><kbd class="key">DEL</kbd></kbd></dt>
<dt><kbd class="kbd">* <kbd class="key">DEL</kbd></kbd></dt>
<dd><p>Move point to previous line and remove any mark on that line
(<code class="code">dired-unmark-backward</code>).  If the region is active, unmark all
files in the region instead; otherwise, if a numeric argument <var class="var">n</var>
is supplied, unmark the <var class="var">n</var> preceding files instead, starting with
the current file (if <var class="var">n</var> is negative, unmark the next
&#8722;<var class="var">n</var> files).
</p>
</dd>
<dt><a class="index-entry-id" id="index-U-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dunmark_002dall_002dmarks"></a>
<a id="index-_002a-_0021-_0028Dired_0029"></a><kbd class="kbd">* !</kbd></dt>
<dt><kbd class="kbd">U</kbd></dt>
<dd><p>Remove all marks from all the files in this Dired buffer
(<code class="code">dired-unmark-all-marks</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-M_002dDEL-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dunmark_002dall_002dfiles"></a>
<a id="index-_002a-_003f-_0028Dired_0029"></a><kbd class="kbd">* ? <var class="var">markchar</var></kbd></dt>
<dt><kbd class="kbd">M-<kbd class="key">DEL</kbd></kbd></dt>
<dd><p>Remove all marks that use the character <var class="var">markchar</var>
(<code class="code">dired-unmark-all-files</code>).  If invoked with <kbd class="kbd">M-<kbd class="key">DEL</kbd></kbd>,
the command prompts for <var class="var">markchar</var>.  That <var class="var">markchar</var> is a
single character&#8212;do not use <kbd class="key">RET</kbd> to terminate it.  See the
description of the <kbd class="kbd">* c</kbd> command below, which lets you replace one
mark character with another.
</p>
<p>With a numeric argument, this command queries about each marked file,
asking whether to remove its mark.  You can answer <kbd class="kbd">y</kbd> meaning yes,
<kbd class="kbd">n</kbd> meaning no, or <kbd class="kbd">!</kbd> to remove the marks from the remaining
files without asking about them.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_002a-C_002dn-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-M_002d_007d-_0028Dired_0029"></a>
<a id="index-dired_002dnext_002dmarked_002dfile"></a><kbd class="kbd">* C-n</kbd></dt>
<dt><kbd class="kbd">M-}</kbd></dt>
<dd><p>Move down to the next marked file (<code class="code">dired-next-marked-file</code>).
A file is &#8220;marked&#8221; if it has any kind of mark.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_002a-C_002dp-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-M_002d_007b-_0028Dired_0029"></a>
<a id="index-dired_002dprev_002dmarked_002dfile"></a><kbd class="kbd">* C-p</kbd></dt>
<dt><kbd class="kbd">M-{</kbd></dt>
<dd><p>Move up to the previous marked file (<code class="code">dired-prev-marked-file</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-_002a-t-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dtoggle_002dmarks"></a>
<a class="index-entry-id" id="index-toggling-marks-_0028in-Dired_0029"></a>
<a id="index-t-_0028Dired_0029"></a><kbd class="kbd">t</kbd></dt>
<dt><kbd class="kbd">* t</kbd></dt>
<dd><p>Toggle all marks (<code class="code">dired-toggle-marks</code>): files marked with &#8216;<samp class="samp">*</samp>&#8217;
become unmarked, and unmarked files are marked with &#8216;<samp class="samp">*</samp>&#8217;.  Files
marked in any other way are not affected.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dchange_002dmarks"></a>
<a id="index-_002a-c-_0028Dired_0029"></a><kbd class="kbd">* c <var class="var">old-markchar</var> <var class="var">new-markchar</var></kbd></dt>
<dd><p>Replace all marks that use the character <var class="var">old-markchar</var> with marks
that use the character <var class="var">new-markchar</var> (<code class="code">dired-change-marks</code>).
This command is the primary way to create or use marks other than
&#8216;<samp class="samp">*</samp>&#8217; or &#8216;<samp class="samp">D</samp>&#8217;.  The arguments are single characters&#8212;do not use
<kbd class="key">RET</kbd> to terminate them.
</p>
<p>You can use almost any character as a mark character by means of this
command, to distinguish various classes of files.  If <var class="var">old-markchar</var>
is a space (&#8216;<samp class="samp"> </samp>&#8217;), then the command operates on all unmarked files;
if <var class="var">new-markchar</var> is a space, then the command unmarks the files it
acts on.
</p>
<p>To illustrate the power of this command, here is how to put &#8216;<samp class="samp">D</samp>&#8217;
flags on all the files that have no marks, while unflagging all those
that already have &#8216;<samp class="samp">D</samp>&#8217; flags:
</p>
<div class="example">
<pre class="example-preformatted">* c D t  * c <kbd class="key">SPC</kbd> D  * c t <kbd class="key">SPC</kbd>
</pre></div>

<p>This assumes that no files were already marked with &#8216;<samp class="samp">t</samp>&#8217;.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_0025-m-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-_002a-_0025-_0028Dired_0029"></a>
<a id="index-dired_002dmark_002dfiles_002dregexp"></a><kbd class="kbd">% m <var class="var">regexp</var> <kbd class="key">RET</kbd></kbd></dt>
<dt><kbd class="kbd">* % <var class="var">regexp</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Mark (with &#8216;<samp class="samp">*</samp>&#8217;) all files whose names match the regular expression
<var class="var">regexp</var> (<code class="code">dired-mark-files-regexp</code>).  This command is like
<kbd class="kbd">% d</kbd>, except that it marks files with &#8216;<samp class="samp">*</samp>&#8217; instead of flagging
with &#8216;<samp class="samp">D</samp>&#8217;.
</p>
<p>Only the non-directory part of the file name is used in matching.  Use
&#8216;<samp class="samp">^</samp>&#8217; and &#8216;<samp class="samp">$</samp>&#8217; to anchor matches.  You can exclude
subdirectories by temporarily hiding them (see <a class="pxref" href="#Hiding-Subdirectories">Hiding Subdirectories</a>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-_0025-g-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-finding-files-containing-regexp-matches-_0028in-Dired_0029"></a>
<a id="index-dired_002dmark_002dfiles_002dcontaining_002dregexp"></a><kbd class="kbd">% g <var class="var">regexp</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Mark (with &#8216;<samp class="samp">*</samp>&#8217;) all files whose <em class="emph">contents</em> contain a match for
the regular expression <var class="var">regexp</var>
(<code class="code">dired-mark-files-containing-regexp</code>).  This command is like
<kbd class="kbd">% m</kbd>, except that it searches the file contents instead of the file
name.  Note that if a file is visited in an Emacs buffer,
and <code class="code">dired-always-read-filesystem</code> is <code class="code">nil</code> (the default), this
command will look in the buffer without revisiting the file, so the results
might be inconsistent with the file on disk if its contents have changed
since it was last visited.  If you don&#8217;t want this, you may wish to
revert the files you have visited in your buffers, or to turn on
Auto-Revert mode in those buffers, before invoking this command.
See <a class="xref" href="Files.xhtml#Reverting">Reverting a Buffer</a>.  If you prefer that this command should always
revisit the file, without you having to revert the file or enable
Auto-Revert mode, you might want to set
<code class="code">dired-always-read-filesystem</code> to non-<code class="code">nil</code>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002dundo"></a>
<a id="index-C_002d_005f-_0028Dired_0029"></a><kbd class="kbd">C-/</kbd></dt>
<dt><kbd class="kbd">C-x u</kbd></dt>
<dt><kbd class="kbd">C-_</kbd></dt>
<dd><p>Undo changes in the Dired buffer, such as adding or removing
marks (<code class="code">dired-undo</code>).  <em class="emph">This command does not revert the
actual file operations, nor recover lost files!</em>  It just undoes
changes in the buffer itself.
</p>
<p>In some cases, using this after commands that operate on files can
cause trouble.  For example, after renaming one or more files,
<code class="code">dired-undo</code> restores the original names in the Dired buffer,
which gets the Dired buffer out of sync with the actual contents of
the directory.
</p></dd>
</dl>

</div>
<div class="section-level-extent" id="Operating-on-Files">
<h3 class="section" id="Operating-on-Files-1">31.7 Operating on Files</h3>
<a class="index-entry-id" id="index-operating-on-files-in-Dired"></a>

<p>This section describes the basic Dired commands to operate on one file
or several files.  All of these commands are capital letters; all of
them use the minibuffer, either to read an argument or to ask for
confirmation, before they act.  All of them let you specify the
files to manipulate in these ways:
</p>
<ul class="itemize mark-bullet">
<li>If you give the command a numeric prefix argument <var class="var">n</var>, it operates
on the next <var class="var">n</var> files, starting with the current file.  (If <var class="var">n</var>
is negative, the command operates on the &#8722;<var class="var">n</var> files preceding
the current line.)

</li><li>Otherwise, if some files are marked with &#8216;<samp class="samp">*</samp>&#8217;, the command operates
on all those files.

</li><li>Otherwise, the command operates on the current file only.
</li></ul>

<p>Certain other Dired commands, such as <kbd class="kbd">!</kbd> and the &#8216;<samp class="samp">%</samp>&#8217;
commands, use the same conventions to decide which files to work on.
</p>
<p>In addition to Dired commands described here, you can also invoke
Version Control (VC) commands on one or more files shown in a Dired
buffer.  See <a class="xref" href="Maintaining.xhtml#Version-Control">Version Control</a>.
</p>
<a class="index-entry-id" id="index-dired_002ddwim_002dtarget"></a>
<a class="index-entry-id" id="index-two-directories-_0028in-Dired_0029"></a>
<p>Commands which ask for a destination directory, such as those which
copy and rename files or create links for them, try to guess the default
target directory for the operation.  Normally, they suggest the Dired
buffer&#8217;s default directory, but if the option <code class="code">dired-dwim-target</code>
is non-<code class="code">nil</code>, and if there is another Dired buffer displayed in
some window, that other buffer&#8217;s directory is suggested instead.
You can customize <code class="code">dired-dwim-target</code> to prefer either the next
window with a Dired buffer, or the most recently used window with
a Dired buffer, or to use any other function.  When the value is
a function, it will be called with no arguments and is expected to
return a list of directories which will be used as defaults
(i.e. default target and &#8220;future history&#8221;).
</p>
<p>Here are the file-manipulating Dired commands that operate on files.
</p>
<dl class="table">
<dt><a class="index-entry-id" id="index-C-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-copying-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dcopy"></a><kbd class="kbd">C <var class="var">new</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Copy the specified files (<code class="code">dired-do-copy</code>).  The argument <var class="var">new</var>
is the directory to copy into, or (if copying a single file) the new
name.  This is like the shell command <code class="code">cp</code>.
</p>
<a class="index-entry-id" id="index-dired_002dcreate_002ddestination_002ddirs"></a>
<p>The option <code class="code">dired-create-destination-dirs</code> controls whether Dired
should create non-existent directories in the destination while
copying/renaming files.  The default value <code class="code">nil</code> means Dired
never creates such missing directories;  the value <code class="code">always</code>,
means Dired automatically creates them; the value <code class="code">ask</code>
means Dired asks you for confirmation before creating them.
</p>
<a class="index-entry-id" id="index-dired_002dcreate_002ddestination_002ddirs_002don_002dtrailing_002ddirsep"></a>
<p>If the option <code class="code">dired-create-destination-dirs-on-trailing-dirsep</code>
is non-<code class="code">nil</code> in addition to <code class="code">dired-create-destination-dirs</code>,
a trailing directory separator at the destination directory is treated
specially.  In that case, when copying to &#8216;<samp class="samp">test/</samp>&#8217; and no
directory &#8216;<samp class="samp">test</samp>&#8217; exists already, it will be created and the
specified source files or directories are copied into the newly
created directory.
</p>
<a class="index-entry-id" id="index-dired_002dcopy_002dpreserve_002dtime"></a>
<p>If <code class="code">dired-copy-preserve-time</code> is non-<code class="code">nil</code>, then copying
with this command preserves the modification time of the old file in
the copy, like &#8216;<samp class="samp">cp -p</samp>&#8217;.
</p>
<a class="index-entry-id" id="index-dired_002drecursive_002dcopies"></a>
<a class="index-entry-id" id="index-recursive-copying"></a>
<p>The variable <code class="code">dired-recursive-copies</code> controls whether to copy
directories recursively (like &#8216;<samp class="samp">cp -r</samp>&#8217;).  The default is
<code class="code">top</code>, which means to ask before recursively copying a directory.
</p>
<a class="index-entry-id" id="index-dired_002dcopy_002ddereference"></a>
<a class="index-entry-id" id="index-follow-symbolic-links"></a>
<a class="index-entry-id" id="index-dereference-symbolic-links"></a>
<p>The variable <code class="code">dired-copy-dereference</code> controls whether to copy
symbolic links as links or after dereferencing (like &#8216;<samp class="samp">cp -L</samp>&#8217;).
The default is <code class="code">nil</code>, which means that the symbolic links are
copied by creating new ones.
</p>
<a class="index-entry-id" id="index-dired_002dkeep_002dmarker_002dcopy"></a>
<p>The <code class="code">dired-keep-marker-copy</code> user option controls how this
command handles file marking.  The default is to mark all new copies
of files with a &#8216;<samp class="samp">C</samp>&#8217; mark.
</p>
</dd>
<dt><a class="index-entry-id" id="index-D-_0028Dired_0029"></a>
<a id="index-dired_002ddo_002ddelete"></a><kbd class="kbd">D</kbd></dt>
<dd><p>Delete the specified files (<code class="code">dired-do-delete</code>).  This is like the
shell command <code class="code">rm</code>.
</p>
<p>Like the other commands in this section, this command operates on the
<em class="emph">marked</em> files, or the next <var class="var">n</var> files.  By contrast, <kbd class="kbd">x</kbd>
(<code class="code">dired-do-flagged-delete</code>) deletes all <em class="dfn">flagged</em> files.
</p>
</dd>
<dt><a class="index-entry-id" id="index-R-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-renaming-files-_0028in-Dired_0029"></a>
<a class="index-entry-id" id="index-moving-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002drename"></a><kbd class="kbd">R <var class="var">new</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Rename the specified files (<code class="code">dired-do-rename</code>).  If you rename a
single file, the argument <var class="var">new</var> is the new name of the file.  If
you rename several files, the argument <var class="var">new</var> is the directory into
which to move the files (this is like the shell command <code class="command">mv</code>).
</p>
<p>The option <code class="code">dired-create-destination-dirs</code> controls whether Dired
should create non-existent directories in <var class="var">new</var>.
</p>
<p>The option <code class="code">dired-create-destination-dirs-on-trailing-dirsep</code>,
when set in addition to <code class="code">dired-create-destination-dirs</code>, controls
whether a trailing directory separator at the destination is treated
specially.  In that case, when renaming a directory &#8216;<samp class="samp">old</samp>&#8217; to
&#8216;<samp class="samp">new/</samp>&#8217; and no directory &#8216;<samp class="samp">new</samp>&#8217; exists already, it will be
created and &#8216;<samp class="samp">old</samp>&#8217; is moved into the newly created directory.
Otherwise, &#8216;<samp class="samp">old</samp>&#8217; is renamed to &#8216;<samp class="samp">new</samp>&#8217;.
</p>
<p>Dired automatically changes the visited file name of buffers associated
with renamed files so that they refer to the new names.
</p>
<a class="index-entry-id" id="index-dired_002dvc_002drename_002dfile"></a>
<p>If the value of the variable <code class="code">dired-vc-rename-file</code> is non-<code class="code">nil</code>,
files are renamed using the commands of the underlying VCS, via
<code class="code">vc-rename-file</code> (see <a class="pxref" href="Maintaining.xhtml#VC-Delete_002fRename">Deleting and Renaming Version-Controlled Files</a>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-H-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-hard-links-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dhardlink"></a><kbd class="kbd">H <var class="var">new</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Make hard links to the specified files (<code class="code">dired-do-hardlink</code>).
This is like the shell command <code class="command">ln</code>.  The argument <var class="var">new</var> is
the directory to make the links in, or (if making just one link) the
name to give the link.
</p>
</dd>
<dt><a class="index-entry-id" id="index-S-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-symbolic-links-_0028creation-in-Dired_0029"></a>
<a id="index-dired_002ddo_002dsymlink"></a><kbd class="kbd">S <var class="var">new</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Make symbolic links to the specified files (<code class="code">dired-do-symlink</code>).
This is like &#8216;<samp class="samp">ln -s</samp>&#8217;.  The argument <var class="var">new</var> is the directory to
make the links in, or (if making just one link) the name to give the
link.
</p>
</dd>
<dt><a class="index-entry-id" id="index-Y-_0028Dired_0029"></a>
<a id="index-dired_002ddo_002drelsymlink"></a><kbd class="kbd">Y <var class="var">new</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Make relative symbolic links to the specified files
(<code class="code">dired-do-relsymlink</code>).  The argument <var class="var">new</var> is the directory
to make the links in, or (if making just one link) the name to give
the link.  This is like <code class="code">dired-do-symlink</code> but creates relative
symbolic links.  For example:
</p>
<div class="example">
<pre class="example-preformatted">    foo -&gt; ../bar/foo
</pre></div>

<p>It does not create absolute ones like:
</p>
<div class="example">
<pre class="example-preformatted">    foo -&gt; /path/that/may/change/any/day/bar/foo
</pre></div>

</dd>
<dt><a class="index-entry-id" id="index-M-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-changing-file-permissions-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dchmod"></a><kbd class="kbd">M <var class="var">modespec</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Change the mode (also called <em class="dfn">permission bits</em>) of the specified
files (<code class="code">dired-do-chmod</code>).  <var class="var">modespec</var> can be in octal or
symbolic notation, like arguments handled by the <code class="command">chmod</code>
program.  This command does not follow symbolic links, so it reports
an error if you try to change the mode of a symbolic link on a
platform where such modes are immutable.
</p>
</dd>
<dt><a class="index-entry-id" id="index-G-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-changing-file-group-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dchgrp"></a><kbd class="kbd">G <var class="var">newgroup</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Change the group of the specified files to <var class="var">newgroup</var>
(<code class="code">dired-do-chgrp</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-O-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-changing-file-owner-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dchown"></a><kbd class="kbd">O <var class="var">newowner</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Change the owner of the specified files to <var class="var">newowner</var>
(<code class="code">dired-do-chown</code>).  (On most systems, only the superuser can do
this.)
</p>
<a class="index-entry-id" id="index-dired_002dchown_002dprogram"></a>
<p>The variable <code class="code">dired-chown-program</code> specifies the name of the
program to use to do the work.  (This variable is necessary because
different systems put <code class="command">chown</code> in different places).
</p>
</dd>
<dt><a class="index-entry-id" id="index-T-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-changing-file-time-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dtouch"></a><kbd class="kbd">T <var class="var">timestamp</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Touch the specified files (<code class="code">dired-do-touch</code>).  This means
updating their modification times to <var class="var">timestamp</var>, which defaults
to the present time.  This is like the shell command <code class="command">touch</code>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-P-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-printing-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dprint"></a><kbd class="kbd">P <var class="var">command</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Print the specified files (<code class="code">dired-do-print</code>).  You must specify the
command to print them with, but the minibuffer starts out with a
suitable guess made using the variables <code class="code">lpr-command</code> and
<code class="code">lpr-switches</code> (the same variables that <code class="code">lpr-buffer</code> uses;
see <a class="pxref" href="Printing.xhtml#Printing">Printing Hard Copies</a>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-Z-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-compressing-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dcompress"></a><kbd class="kbd">Z</kbd></dt>
<dd><p>Compress the specified files (<code class="code">dired-do-compress</code>).  If the file
appears to be a compressed file already, uncompress it instead.  Each
marked file is compressed into its own archive; this uses the
<code class="command">gzip</code> program if it is available, otherwise it uses
<code class="command">compress</code>.
</p>
<p>On a directory name, this command produces a compressed archive
depending on the <code class="code">dired-compress-directory-default-suffix</code> user
option.  The default is a <samp class="file">.tar.gz</samp> archive containing all of the
directory&#8217;s files, by running the <code class="command">tar</code> command with output
piped to <code class="command">gzip</code>.  To allow decompression of compressed
directories, typing <kbd class="kbd">Z</kbd> on a <samp class="file">.tar.gz</samp> or <samp class="file">.tgz</samp> archive
file unpacks all the files in the archive into a directory whose name
is the archive name with the extension removed.
</p>
</dd>
<dt><a class="index-entry-id" id="index-c-_0028Dired_0029"></a>
<a id="index-dired_002ddo_002dcompress_002dto"></a><kbd class="kbd">c</kbd></dt>
<dd><p>Compress the specified files (<code class="code">dired-do-compress-to</code>) into a
single archive anywhere on the file system.  The default archive is
controlled by the <code class="code">dired-compress-directory-default-suffix</code> user
option.  Also see <code class="code">dired-compress-files-alist</code>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_003ad-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-decrypting-files-_0028in-Dired_0029"></a>
<a id="index-epa_002ddired_002ddo_002ddecrypt"></a><kbd class="kbd">:d</kbd></dt>
<dd><p>Decrypt the specified files (<code class="code">epa-dired-do-decrypt</code>).
See <a href="https://www.gnu.org/software/emacs/manual/html_node/epa/Dired-integration.html#Dired-integration">Dired integration</a> in <cite class="cite">EasyPG Assistant User&#8217;s Manual</cite>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_003av-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-verifying-digital-signatures-on-files-_0028in-Dired_0029"></a>
<a id="index-epa_002ddired_002ddo_002dverify"></a><kbd class="kbd">:v</kbd></dt>
<dd><p>Verify digital signatures on the specified files (<code class="code">epa-dired-do-verify</code>).
See <a href="https://www.gnu.org/software/emacs/manual/html_node/epa/Dired-integration.html#Dired-integration">Dired integration</a> in <cite class="cite">EasyPG Assistant User&#8217;s Manual</cite>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_003as-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-signing-files-_0028in-Dired_0029"></a>
<a id="index-epa_002ddired_002ddo_002dsign"></a><kbd class="kbd">:s</kbd></dt>
<dd><p>Digitally sign the specified files (<code class="code">epa-dired-do-sign</code>).
See <a href="https://www.gnu.org/software/emacs/manual/html_node/epa/Dired-integration.html#Dired-integration">Dired integration</a> in <cite class="cite">EasyPG Assistant User&#8217;s Manual</cite>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_003ae-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-encrypting-files-_0028in-Dired_0029"></a>
<a id="index-epa_002ddired_002ddo_002dencrypt"></a><kbd class="kbd">:e</kbd></dt>
<dd><p>Encrypt the specified files (<code class="code">epa-dired-do-encrypt</code>).
See <a href="https://www.gnu.org/software/emacs/manual/html_node/epa/Dired-integration.html#Dired-integration">Dired integration</a> in <cite class="cite">EasyPG Assistant User&#8217;s Manual</cite>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-L-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-loading-several-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dload"></a><kbd class="kbd">L</kbd></dt>
<dd><p>Load the specified Emacs Lisp files (<code class="code">dired-do-load</code>).
See <a class="xref" href="Building.xhtml#Lisp-Libraries">Libraries of Lisp Code for Emacs</a>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-B-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-byte_002dcompiling-several-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dbyte_002dcompile"></a><kbd class="kbd">B</kbd></dt>
<dd><p>Byte compile the specified Emacs Lisp files
(<code class="code">dired-do-byte-compile</code>).  See <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Byte-Compilation.html#Byte-Compilation">Byte
Compilation</a> in <cite class="cite">The Emacs Lisp Reference Manual</cite>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-I-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-running-info-on-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dinfo"></a><kbd class="kbd">I</kbd></dt>
<dd><p>Run Info on this file (assumed to be a file in Info format).
</p>
</dd>
<dt><a class="index-entry-id" id="index-N-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-running-man-on-files-_0028in-Dired_0029"></a>
<a id="index-dired_002ddo_002dman"></a><kbd class="kbd">N</kbd></dt>
<dd><p>Run man on this file (assumed to be a file in <code class="code">nroff</code> format).
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002ddo_002dfind_002dregexp"></a>
<a class="index-entry-id" id="index-search-multiple-files-_0028in-Dired_0029"></a>
<a id="index-A-_0028Dired_0029"></a><kbd class="kbd">A <var class="var">regexp</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Search all the specified files for the regular expression <var class="var">regexp</var>
(<code class="code">dired-do-find-regexp</code>).
</p>
<p>This command is a variant of <code class="code">xref-find-references</code>
(see <a class="pxref" href="Maintaining.xhtml#Identifier-Search">Searching and Replacing with Identifiers</a>), it displays the <samp class="file">*xref*</samp> buffer,
where you can navigate between matches and display them as needed
using the commands described in <a class="ref" href="Maintaining.xhtml#Xref-Commands">Commands Available in the <samp class="file">*xref*</samp> Buffer</a>.
</p>
<a class="index-entry-id" id="index-grep_002dfind_002dignored_002dfiles-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-grep_002dfind_002dignored_002ddirectories-_0028Dired_0029"></a>
<p>If any of the marked files are directories, then this command searches
all of the files in those directories, and any of their
subdirectories, recursively, except files whose names match
<code class="code">grep-find-ignored-files</code> and subdirectories whose names match
<code class="code">grep-find-ignored-directories</code>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002ddo_002dfind_002dregexp_002dand_002dreplace"></a>
<a class="index-entry-id" id="index-search-and-replace-in-multiple-files-_0028in-Dired_0029"></a>
<a id="index-Q-_0028Dired_0029"></a><kbd class="kbd">Q <var class="var">regexp</var> <kbd class="key">RET</kbd> <var class="var">to</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Perform <code class="code">query-replace-regexp</code> on each of the specified files,
replacing matches for <var class="var">regexp</var> with the string
<var class="var">to</var> (<code class="code">dired-do-find-regexp-and-replace</code>).
</p>
<p>This command is a variant of <code class="code">xref-query-replace-in-results</code>.  It
presents an <samp class="file">*xref*</samp> buffer that lists all the matches of <var class="var">regexp</var>,
and you can use the special commands in that buffer (see <a class="pxref" href="Maintaining.xhtml#Xref-Commands">Commands Available in the <samp class="file">*xref*</samp> Buffer</a>).  In particular, if you exit the query replace loop, you
can use <kbd class="kbd">r</kbd> in that buffer to replace more matches.
See <a class="xref" href="Maintaining.xhtml#Identifier-Search">Searching and Replacing with Identifiers</a>.
</p>
<p>Like with <code class="code">dired-do-find-regexp</code>, if any of the marked files are
directories, this command performs replacements in all of the files in
those directories, and in any of their subdirectories, recursively,
except for files whose names match <code class="code">grep-find-ignored-files</code> and
subdirectories whose names match <code class="code">grep-find-ignored-directories</code>.
</p></dd>
</dl>

</div>
<div class="section-level-extent" id="Shell-Commands-in-Dired">
<h3 class="section" id="Shell-Commands-in-Dired-1">31.8 Shell Commands in Dired</h3>
<a class="index-entry-id" id="index-shell-commands_002c-Dired"></a>

<a class="index-entry-id" id="index-dired_002ddo_002dshell_002dcommand"></a>
<a class="index-entry-id" id="index-_0021-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-X-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dconfirm_002dshell_002dcommand"></a>
<p>The Dired command <kbd class="kbd">!</kbd> (<code class="code">dired-do-shell-command</code>) reads a
shell command string in the minibuffer, and runs that shell command on
one or more files.  The files that the shell command operates on are
determined in the usual way for Dired commands (see <a class="pxref" href="#Operating-on-Files">Operating on Files</a>).  The command <kbd class="kbd">X</kbd> is a synonym for <kbd class="kbd">!</kbd>.
</p>
<p>The command <kbd class="kbd">&amp;</kbd> (<code class="code">dired-do-async-shell-command</code>) does the
same, except that it runs the shell command asynchronously.  (You can
also do this with <kbd class="kbd">!</kbd>, by appending a &#8216;<samp class="samp">&amp;</samp>&#8217; character to the
end of the shell command.)  When the command operates on more than one
file, it runs multiple parallel copies of the specified shell command,
one for each file.  As an exception, if the specified shell command
ends in &#8216;<samp class="samp">;</samp>&#8217; or &#8216;<samp class="samp">;&amp;</samp>&#8217;, the shell command is run in the
background on each file sequentially; Emacs waits for each invoked
shell command to terminate before running the next one.
</p>
<p>For both <kbd class="kbd">!</kbd> and <kbd class="kbd">&amp;</kbd>, the working directory for the shell
command is the top-level directory of the Dired buffer.
</p>
<p>If you tell <kbd class="kbd">!</kbd> or <kbd class="kbd">&amp;</kbd> to operate on more than one file, the
shell command string determines how those files are passed to the
shell command:
</p>
<ul class="itemize mark-bullet">
<li>If you use &#8216;<samp class="samp">*</samp>&#8217; surrounded by whitespace in the command string,
then the command runs just once, with the list of file names
substituted for the &#8216;<samp class="samp">*</samp>&#8217;.  The order of file names is the order of
appearance in the Dired buffer.

<p>Thus, <kbd class="kbd">! tar cf foo.tar * <kbd class="key">RET</kbd></kbd> runs <code class="code">tar</code> on the entire
list of file names, putting them into one tar file <samp class="file">foo.tar</samp>.
</p>
<p>If you want to use &#8216;<samp class="samp">*</samp>&#8217; as a shell wildcard with whitespace around
it, write &#8216;<samp class="samp">*&quot;&quot;</samp>&#8217;.  In the shell, this is equivalent to &#8216;<samp class="samp">*</samp>&#8217;;
but since the &#8216;<samp class="samp">*</samp>&#8217; is not surrounded by whitespace, Dired does not
treat it specially.  Emacs will prompt for confirmation if you do
this, unless <code class="code">dired-confirm-shell-command</code> is <code class="code">nil</code>.
</p>
</li><li>Otherwise, if the command string contains &#8216;<samp class="samp">?</samp>&#8217; surrounded by
whitespace or &#8216;<samp class="samp">`?`</samp>&#8217;, Emacs runs the shell command once
<em class="emph">for each file</em>, substituting the current file name for &#8216;<samp class="samp">?</samp>&#8217;
and &#8216;<samp class="samp">`?`</samp>&#8217; each time.  You can use both &#8216;<samp class="samp">?</samp>&#8217; and &#8216;<samp class="samp">`?`</samp>&#8217; more
than once in the command; the same file name replaces each occurrence.
If you mix them with &#8216;<samp class="samp">*</samp>&#8217; the command signals an error.

</li><li>If the command string contains neither &#8216;<samp class="samp">*</samp>&#8217; nor &#8216;<samp class="samp">?</samp>&#8217; nor &#8216;<samp class="samp">`?`</samp>&#8217;,
Emacs runs the shell command once for each file, adding the file name at the
end.  For example, <kbd class="kbd">! uudecode <kbd class="key">RET</kbd></kbd> runs <code class="code">uudecode</code> on
each file.
</li></ul>

<p>To iterate over the file names in a more complicated fashion, you might
prefer to use an explicit shell loop.  For example, here is how to uuencode
each file, making the output file name by appending &#8216;<samp class="samp">.uu</samp>&#8217; to the input
file name:
</p>
<div class="example">
<pre class="example-preformatted">for file in * ; do uuencode &quot;$file&quot; &quot;$file&quot; &gt;&quot;$file&quot;.uu; done
</pre></div>

<p>The same example with &#8216;<samp class="samp">`?`</samp>&#8217; notation:
</p><div class="example">
<pre class="example-preformatted">uuencode ? ? &gt; `?`.uu
</pre></div>

<p>The <kbd class="kbd">!</kbd> and <kbd class="kbd">&amp;</kbd> commands do not attempt to update the Dired
buffer to show new or modified files, because they don&#8217;t know what
files will be changed.  Use the <kbd class="kbd">g</kbd> command to update the Dired
buffer (see <a class="pxref" href="#Dired-Updating">Updating the Dired Buffer</a>).
</p>
<p>See <a class="xref" href="Shell.xhtml#Single-Shell">Single Shell Commands</a>, for information about running shell commands
outside Dired.
</p>
</div>
<div class="section-level-extent" id="Shell-Command-Guessing">
<h3 class="section" id="Shell-Command-Guessing-1">31.9 Shell Command Guessing</h3>
<a class="index-entry-id" id="index-guessing-shell-commands-for-files-_0028in-Dired_0029"></a>

<p>Based upon the name of a file, Dired tries to guess what shell command
you might want to apply to it.  For example, if you have point on a
file named <samp class="file">foo.tar</samp> and you press <kbd class="kbd">!</kbd>, Dired will guess that
you want to run &#8216;<samp class="samp">tar xvf</samp>&#8217;, and suggest that as the default shell
command.
</p>
<p>You can type <kbd class="kbd">M-n</kbd> to get the default into the minibuffer for
editing.  If there are several commands for a given file, type
<kbd class="kbd">M-n</kbd> several times to see each matching command in order.
</p>
<p>Dired only tries to guess a command for a single file, never for a
list of marked files.
</p>
<dl class="first-defvr first-defvar-alias-first-defvr">
<dt class="defvr defvar-alias-defvr" id="index-dired_002dguess_002dshell_002dalist_002ddefault"><span class="category-def">Variable: </span><strong class="def-name">dired-guess-shell-alist-default</strong></dt>
<dd><p>This variable specifies the predefined rules for guessing shell
commands suitable for certain files.  Set this to <code class="code">nil</code> to turn
guessing off.  The elements of <code class="code">dired-guess-shell-alist-user</code>
(defined by the user) will override these rules.
</p></dd></dl>

<dl class="first-defvr first-defvar-alias-first-defvr">
<dt class="defvr defvar-alias-defvr" id="index-dired_002dguess_002dshell_002dalist_002duser"><span class="category-def">Variable: </span><strong class="def-name">dired-guess-shell-alist-user</strong></dt>
<dd><p>If non-<code class="code">nil</code>, this variable specifies the user-defined alist of
file regexps and their suggested commands.  These rules take
precedence over the predefined rules in the variable
<code class="code">dired-guess-shell-alist-default</code> when
<code class="code">dired-do-shell-command</code> is run).  The default is <code class="code">nil</code>.
</p>
<p>Each element of the alist looks like
</p>
<div class="example">
<pre class="example-preformatted">(<var class="var">regexp</var> <var class="var">command</var>...)
</pre></div>

<p>where each <var class="var">command</var> can either be a string or a Lisp expression
that evaluates to a string.  If several commands are given, all of
them will temporarily be pushed onto the history.
</p>
<p>A &#8216;<samp class="samp">*</samp>&#8217; in the shell command stands for the file name that matched
<var class="var">regexp</var>.  When Emacs invokes the <var class="var">command</var>, it replaces each
instance of &#8216;<samp class="samp">*</samp>&#8217; with the matched file name.
</p>
<p>To add rules for &#8216;<samp class="samp">.foo</samp>&#8217; and &#8216;<samp class="samp">.bar</samp>&#8217; file extensions, add this
to your Init file:
</p>
<div class="example">
<pre class="example-preformatted">(setq dired-guess-shell-alist-user
      (list
       (list &quot;\\.foo$&quot; &quot;<var class="var">foo-command</var>&quot;)  ; fixed rule
       ;; possibly more rules...
       (list &quot;\\.bar$&quot;  ; rule with condition test
             '(if <var class="var">condition</var>
                  &quot;<var class="var">bar-command-1</var>&quot;
                &quot;<var class="var">bar-command-2</var>&quot;))))
</pre></div>

<p>This will override any predefined rules for the same extensions.
</p></dd></dl>

<p>You can find more user options with <kbd class="kbd">M-x customize-group <kbd class="key">RET</kbd>
dired-guess <kbd class="key">RET</kbd></kbd>.
</p>
</div>
<div class="section-level-extent" id="Transforming-File-Names">
<h3 class="section" id="Transforming-File-Names-in-Dired">31.10 Transforming File Names in Dired</h3>

<p>This section describes Dired commands which alter file names in a
systematic way.  Each command operates on some or all of the marked
files, using a new name made by transforming the existing name.
</p>
<p>Like the basic Dired file-manipulation commands (see <a class="pxref" href="#Operating-on-Files">Operating on Files</a>), the commands described here operate either on the next
<var class="var">n</var> files, or on all files marked with &#8216;<samp class="samp">*</samp>&#8217;, or on the current
file.  (To mark files, use the commands described in <a class="ref" href="#Marks-vs-Flags">Dired Marks vs. Flags</a>.)
</p>
<p>All of the commands described in this section work
<em class="emph">interactively</em>: they ask you to confirm the operation for each
candidate file.  Thus, you can select more files than you actually
need to operate on (e.g., with a regexp that matches many files), and
then filter the selected names by typing <kbd class="kbd">y</kbd> or <kbd class="kbd">n</kbd> when the
command prompts for confirmation.
</p>
<dl class="table">
<dt><a class="index-entry-id" id="index-_0025-u-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-upcase-file-names"></a>
<a id="index-dired_002dupcase"></a><kbd class="kbd">% u</kbd></dt>
<dd><p>Rename each of the selected files to an upper-case name
(<code class="code">dired-upcase</code>).  If the old file names are <samp class="file">Foo</samp>
and <samp class="file">bar</samp>, the new names are <samp class="file">FOO</samp> and <samp class="file">BAR</samp>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_0025-l-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-downcase-file-names"></a>
<a id="index-dired_002ddowncase"></a><kbd class="kbd">% l</kbd></dt>
<dd><p>Rename each of the selected files to a lower-case name
(<code class="code">dired-downcase</code>).  If the old file names are <samp class="file">Foo</samp> and
<samp class="file">bar</samp>, the new names are <samp class="file">foo</samp> and <samp class="file">bar</samp>.
</p>
</dd>
<dt><a class="index-entry-id" id="index-dired_002ddo_002drelsymlink_002dregexp"></a>
<a id="index-_0025-Y-_0028Dired_0029"></a><kbd class="kbd">% R <var class="var">from</var> <kbd class="key">RET</kbd> <var class="var">to</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><a class="index-entry-id" id="index-_0025-R-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002drename_002dregexp"></a>
</dd>
<dt><kbd class="kbd">% C <var class="var">from</var> <kbd class="key">RET</kbd> <var class="var">to</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><a class="index-entry-id" id="index-_0025-C-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002dcopy_002dregexp"></a>
</dd>
<dt><kbd class="kbd">% H <var class="var">from</var> <kbd class="key">RET</kbd> <var class="var">to</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><a class="index-entry-id" id="index-_0025-H-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002dhardlink_002dregexp"></a>
</dd>
<dt><kbd class="kbd">% S <var class="var">from</var> <kbd class="key">RET</kbd> <var class="var">to</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><a class="index-entry-id" id="index-_0025-S-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002dsymlink_002dregexp"></a>
</dd>
<dt><kbd class="kbd">% Y <var class="var">from</var> <kbd class="key">RET</kbd> <var class="var">to</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>These five commands rename, copy, make hard links, make soft links,
and make relative soft links, in each case computing the new name by
regular-expression substitution from the name of the old file.
</p></dd>
</dl>

<p>The four regular-expression substitution commands effectively
perform a search-and-replace on the selected file names.  They read
two arguments: a regular expression <var class="var">from</var>, and a substitution
pattern <var class="var">to</var>; they match each old file name against
<var class="var">from</var>, and then replace the matching part with <var class="var">to</var>.  You can
use &#8216;<samp class="samp">\&amp;</samp>&#8217; and &#8216;<samp class="samp">\<var class="var">digit</var></samp>&#8217; in <var class="var">to</var> to refer to all or
part of what the pattern matched in the old file name, as in
<code class="code">replace-regexp</code> (see <a class="pxref" href="Search.xhtml#Regexp-Replace">Regexp Replacement</a>).  If the regular
expression matches more than once in a file name, only the first match
is replaced.
</p>
<p>For example, <kbd class="kbd">% R ^.*$ <kbd class="key">RET</kbd> x-\&amp; <kbd class="key">RET</kbd></kbd> renames each
selected file by prepending &#8216;<samp class="samp">x-</samp>&#8217; to its name.  The inverse of this,
removing &#8216;<samp class="samp">x-</samp>&#8217; from the front of each file name, is also possible:
one method is <kbd class="kbd">% R ^x-\(.*\)$ <kbd class="key">RET</kbd> \1 <kbd class="key">RET</kbd></kbd>; another is
<kbd class="kbd">% R ^x- <kbd class="key">RET</kbd> <kbd class="key">RET</kbd></kbd>.  (Use &#8216;<samp class="samp">^</samp>&#8217; and &#8216;<samp class="samp">$</samp>&#8217; to anchor
matches that should span the whole file name.)
</p>
<p>Normally, the replacement process does not consider the files&#8217;
directory names; it operates on the file name within the directory.  If
you specify a numeric argument of zero, then replacement affects the
entire absolute file name including directory name.  (A non-zero
argument specifies the number of files to operate on.)
</p>
<p>You may want to select the set of files to operate on using the same
regexp <var class="var">from</var> that you will use to operate on them.  To do this,
mark those files with <kbd class="kbd">% m <var class="var">from</var> <kbd class="key">RET</kbd></kbd>, then use the
same regular expression in the command to operate on the files.  To
make this more convenient, the <kbd class="kbd">%</kbd> commands to operate on files
use the last regular expression specified in any <kbd class="kbd">%</kbd> command as a
default.
</p>
</div>
<div class="section-level-extent" id="Comparison-in-Dired">
<h3 class="section" id="File-Comparison-with-Dired">31.11 File Comparison with Dired</h3>
<a class="index-entry-id" id="index-file-comparison-_0028in-Dired_0029"></a>
<a class="index-entry-id" id="index-compare-files-_0028in-Dired_0029"></a>

<a class="index-entry-id" id="index-dired_002ddiff"></a>
<a class="index-entry-id" id="index-_003d-_0028Dired_0029"></a>
<p>The <kbd class="kbd">=</kbd> (<code class="code">dired-diff</code>) command compares the current file
(the file at point) with another file (read using the minibuffer)
using the <code class="command">diff</code> program.  The file specified with the
minibuffer is the first argument of <code class="command">diff</code>, and file at point
is the second argument.  The output of the <code class="command">diff</code> program is
shown in a buffer using Diff mode (see <a class="pxref" href="Files.xhtml#Comparing-Files">Comparing Files</a>).
</p>
<p>If the region is active, the default for the file read using the
minibuffer is the file at the mark (i.e., the ordinary Emacs mark,
not a Dired mark; see <a class="pxref" href="Mark.xhtml#Setting-Mark">Setting the Mark</a>).  Otherwise, if the file at
point has a backup file (see <a class="pxref" href="Files.xhtml#Backup">Backup Files</a>), that is the default.
</p>
<p>You could also compare files using <code class="code">ediff-files</code>, see
<a href="https://www.gnu.org/software/emacs/manual/html_node/ediff/Major-Entry-Points.html#Major-Entry-Points">Major Entry Points</a> in <cite class="cite">Ediff User&#8217;s Manual</cite>.
</p>
</div>
<div class="section-level-extent" id="Subdirectories-in-Dired">
<h3 class="section" id="Subdirectories-in-Dired-1">31.12 Subdirectories in Dired</h3>
<a class="index-entry-id" id="index-subdirectories-in-Dired"></a>
<a class="index-entry-id" id="index-expanding-subdirectories-in-Dired"></a>

<p>A Dired buffer usually displays just one directory, but you can
optionally include its subdirectories as well.
</p>
<p>The simplest way to include multiple directories in one Dired buffer is
to specify the options &#8216;<samp class="samp">-lR</samp>&#8217; for running <code class="command">ls</code>.  (If you give a
numeric argument when you run Dired, then you can specify these options
in the minibuffer.)  That produces a recursive directory listing showing
all subdirectories at all levels.
</p>
<p>More often, you will want to show only specific subdirectories.  You
can do this with <kbd class="kbd">i</kbd> (<code class="code">dired-maybe-insert-subdir</code>):
</p>
<dl class="table">
<dt><a class="index-entry-id" id="index-in_002dsitu-subdirectory-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dmaybe_002dinsert_002dsubdir"></a>
<a class="index-entry-id" id="index-i-_0028Dired_0029"></a>
<a id="index-inserted-subdirectory-_0028Dired_0029"></a><kbd class="kbd">i</kbd></dt>
<dd><p>Insert the contents of a subdirectory later in the buffer.
</p></dd>
</dl>

<p>If you use this command on a line that describes a file which is a
directory, it inserts the contents of that directory into the same
Dired buffer, and moves there.  Inserted subdirectory contents follow
the top-level directory of the Dired buffer, just as they do in
&#8216;<samp class="samp">ls -lR</samp>&#8217; output.
</p>
<p>If the subdirectory&#8217;s contents are already present in the buffer,
the <kbd class="kbd">i</kbd> command just moves to it.
</p>
<p>In either case, <kbd class="kbd">i</kbd> sets the Emacs mark before moving, so
<kbd class="kbd">C-u C-<kbd class="key">SPC</kbd></kbd> returns to your previous position in the Dired
buffer (see <a class="pxref" href="Mark.xhtml#Setting-Mark">Setting the Mark</a>).  You can also use &#8216;<samp class="samp">^</samp>&#8217; to return to
the parent directory in the same Dired buffer (see <a class="pxref" href="#Dired-Visiting">Visiting Files in Dired</a>).
</p>
<p>Use the <kbd class="kbd">l</kbd> command (<code class="code">dired-do-redisplay</code>) to update the
subdirectory&#8217;s contents, and use <kbd class="kbd">C-u k</kbd> on the subdirectory
header line to remove the subdirectory listing (see <a class="pxref" href="#Dired-Updating">Updating the Dired Buffer</a>).  You can also hide and show inserted subdirectories
(see <a class="pxref" href="#Hiding-Subdirectories">Hiding Subdirectories</a>).
</p>
</div>
<div class="section-level-extent" id="Subdir-Switches">
<h3 class="section" id="Subdirectory-Switches-in-Dired">31.13 Subdirectory Switches in Dired</h3>

<p>You can insert subdirectories with specified <code class="command">ls</code> switches in
Dired buffers using <kbd class="kbd">C-u i</kbd>.  You can change the <code class="command">ls</code>
switches of an already inserted subdirectory at point using <kbd class="kbd">C-u l</kbd>.
</p>
<p>Dired preserves the switches if you revert the buffer.  Deleting a
subdirectory forgets about its switches.
</p>
<p>Using <code class="code">dired-undo</code>
(see <a class="pxref" href="#Marks-vs-Flags">Dired Marks vs. Flags</a>)
to reinsert or delete
subdirectories that were inserted with explicit switches can bypass
Dired&#8217;s machinery for remembering (or forgetting) switches.  Deleting
a subdirectory using <code class="code">dired-undo</code> does not forget its switches.
When later reinserted using <kbd class="kbd">i</kbd>, it will be reinserted using its
old switches.  Using <code class="code">dired-undo</code> to reinsert a subdirectory that
was deleted using the regular Dired commands (not <code class="code">dired-undo</code>)
will originally insert it with its old switches.  Reverting the
buffer, however, will relist it using the buffer&#8217;s default switches.
If any of this yields problems, you can easily correct the situation
using <kbd class="kbd">C-u i</kbd> or <kbd class="kbd">C-u l</kbd>.
</p>
<p>Dired does not remember the <code class="code">R</code> switch.  Inserting a subdirectory
with switches that include the <code class="code">R</code> switch is equivalent to
inserting each of its subdirectories using all remaining switches.
For instance, updating or killing a subdirectory that was inserted
with the <code class="code">R</code> switch will not update or kill its subdirectories.
</p>
<p>The buffer&#8217;s default switches do not affect subdirectories that were
inserted using explicitly specified switches.  In particular,
commands such as <kbd class="kbd">s</kbd> that change the buffer&#8217;s switches do not
affect such subdirectories.  (They do, however, affect subdirectories
without explicitly assigned switches.)
</p>
<p>You can make Dired forget about all subdirectory switches and relist
all subdirectories with the buffer&#8217;s default switches using
<kbd class="kbd">M-x dired-reset-subdir-switches</kbd>.  This also reverts the Dired buffer.
</p>
</div>
<div class="section-level-extent" id="Subdirectory-Motion">
<h3 class="section" id="Moving-Over-Subdirectories">31.14 Moving Over Subdirectories</h3>

<p>When a Dired buffer lists subdirectories, you can use the page motion
commands <kbd class="kbd">C-x [</kbd> and <kbd class="kbd">C-x ]</kbd> to move by entire directories
(see <a class="pxref" href="Text.xhtml#Pages">Pages</a>).
</p>
<a class="index-entry-id" id="index-header-line-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-directory-header-lines"></a>
<p>The following commands move across, up and down in the tree of
directories within one Dired buffer.  They move to <em class="dfn">directory header
lines</em>, which are the lines that give a directory&#8217;s name, at the
beginning of the directory&#8217;s contents.
</p>
<dl class="table">
<dt><a class="index-entry-id" id="index-C_002dM_002dn-_0028Dired_0029"></a>
<a id="index-dired_002dnext_002dsubdir"></a><kbd class="kbd">C-M-n</kbd></dt>
<dd><p>Go to next subdirectory header line, regardless of level
(<code class="code">dired-next-subdir</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-C_002dM_002dp-_0028Dired_0029"></a>
<a id="index-dired_002dprev_002dsubdir"></a><kbd class="kbd">C-M-p</kbd></dt>
<dd><p>Go to previous subdirectory header line, regardless of level
(<code class="code">dired-prev-subdir</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-C_002dM_002du-_0028Dired_0029"></a>
<a id="index-dired_002dtree_002dup"></a><kbd class="kbd">C-M-u</kbd></dt>
<dd><p>Go up to the parent directory&#8217;s header line (<code class="code">dired-tree-up</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-C_002dM_002dd-_0028Dired_0029"></a>
<a id="index-dired_002dtree_002ddown"></a><kbd class="kbd">C-M-d</kbd></dt>
<dd><p>Go down in the directory tree, to the first subdirectory&#8217;s header line
(<code class="code">dired-tree-down</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-_003c-_0028Dired_0029"></a>
<a id="index-dired_002dprev_002ddirline"></a><kbd class="kbd">&lt;</kbd></dt>
<dd><p>Move up to the previous directory-file line (<code class="code">dired-prev-dirline</code>).
These lines are the ones that describe a directory as a file in its
parent directory.
</p>
</dd>
<dt><a class="index-entry-id" id="index-_003e-_0028Dired_0029"></a>
<a id="index-dired_002dnext_002ddirline"></a><kbd class="kbd">&gt;</kbd></dt>
<dd><p>Move down to the next directory-file line (<code class="code">dired-next-dirline</code>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-M_002dG-_0028Dired_0029"></a>
<a id="index-dired_002dgoto_002dsubdir"></a><kbd class="kbd">M-G</kbd></dt>
<dd><p>Prompt for a directory and move to its directory-file line
(<code class="code">dired-goto-subdir</code>).
</p></dd>
</dl>

</div>
<div class="section-level-extent" id="Hiding-Subdirectories">
<h3 class="section" id="Hiding-Subdirectories-1">31.15 Hiding Subdirectories</h3>
<a class="index-entry-id" id="index-hiding-subdirectories-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-showing-hidden-subdirectories-_0028Dired_0029"></a>

<p><em class="dfn">Hiding</em> a subdirectory means to make it invisible, except for its
header line.
</p>
<dl class="table">
<dt><a class="index-entry-id" id="index-_0024-_0028Dired_0029"></a>
<a id="index-dired_002dhide_002dsubdir"></a><kbd class="kbd">$</kbd></dt>
<dd><p>Hide or show the subdirectory that point is in, and move point to the
next subdirectory (<code class="code">dired-hide-subdir</code>).  This is a toggle.  A
numeric argument serves as a repeat count.
</p>
</dd>
<dt><a class="index-entry-id" id="index-M_002d_0024-_0028Dired_0029"></a>
<a id="index-dired_002dhide_002dall"></a><kbd class="kbd">M-$</kbd></dt>
<dd><p>Hide all subdirectories in this Dired buffer, leaving only their header
lines (<code class="code">dired-hide-all</code>).  Or, if any subdirectory is currently
hidden, make all subdirectories visible again.  You can use this command
to get an overview in very deep directory trees or to move quickly to
subdirectories far away.
</p></dd>
</dl>

<p>Ordinary Dired commands never consider files inside a hidden
subdirectory.  For example, the commands to operate on marked files
ignore files in hidden directories even if they are marked.  Thus you
can use hiding to temporarily exclude subdirectories from operations
without having to remove the Dired marks on files in those
subdirectories.
</p>
<p>See <a class="xref" href="#Subdirectories-in-Dired">Subdirectories in Dired</a>, for how to insert a subdirectory
listing, and see <a class="ref" href="#Dired-Updating">Updating the Dired Buffer</a>, for how to delete it.
</p>
</div>
<div class="section-level-extent" id="Dired-Updating">
<h3 class="section" id="Updating-the-Dired-Buffer">31.16 Updating the Dired Buffer</h3>
<a class="index-entry-id" id="index-updating-Dired-buffer"></a>
<a class="index-entry-id" id="index-refreshing-displayed-files"></a>

<p>This section describes commands to update the Dired buffer to reflect
outside (non-Dired) changes in the directories and files, and to delete
part of the Dired buffer.
</p>
<dl class="table">
<dt><kbd class="kbd">g</kbd></dt>
<dd><p>Update the entire contents of the Dired buffer (<code class="code">revert-buffer</code>).
</p>
</dd>
<dt><kbd class="kbd">l</kbd></dt>
<dd><p>Update the specified files (<code class="code">dired-do-redisplay</code>).  You specify the
files for <kbd class="kbd">l</kbd> in the same way as for file operations.
</p>
</dd>
<dt><kbd class="kbd">k</kbd></dt>
<dd><p>Delete the specified <em class="emph">file lines</em>&#8212;not the files, just the lines
(<code class="code">dired-do-kill-lines</code>).
</p>
</dd>
<dt><kbd class="kbd">s</kbd></dt>
<dd><p>Toggle between alphabetical order and date/time order
(<code class="code">dired-sort-toggle-or-edit</code>).
</p>
</dd>
<dt><kbd class="kbd">C-u s <var class="var">switches</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Refresh the Dired buffer using <var class="var">switches</var> as
<code class="code">dired-listing-switches</code>.
</p></dd>
</dl>

<a class="index-entry-id" id="index-g-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-revert_002dbuffer-_0028Dired_0029"></a>
<p>Type <kbd class="kbd">g</kbd> (<code class="code">revert-buffer</code>) to update the contents of the
Dired buffer, based on changes in the files and directories listed.
This preserves all marks except for those on files that have vanished.
Hidden subdirectories are updated but remain hidden.
</p>
<a class="index-entry-id" id="index-l-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002dredisplay"></a>
<p>To update only some of the files, type <kbd class="kbd">l</kbd>
(<code class="code">dired-do-redisplay</code>).  Like the Dired file-operating commands,
this command operates on the next <var class="var">n</var> files (or previous
&#8722;<var class="var">n</var> files), or on the marked files if any, or on the
current file.  Updating the files means reading their current status,
then updating their lines in the buffer to indicate that status.
</p>
<p>If you use <kbd class="kbd">l</kbd> on a subdirectory header line, it updates the
contents of the corresponding subdirectory.
</p>
<a class="index-entry-id" id="index-dired_002dauto_002drevert_002dbuffer"></a>
<p>If you use <kbd class="kbd">C-x d</kbd> or some other Dired command to visit a
directory that is already being shown in a Dired buffer, Dired
switches to that buffer but does not update it.  If the buffer is not
up-to-date, Dired displays a warning telling you to type <kbd class="kbd">g</kbd> to
update it.  You can also tell Emacs to revert each Dired buffer
automatically when you revisit it, by setting the variable
<code class="code">dired-auto-revert-buffer</code> to a non-<code class="code">nil</code> value.
</p>
<a class="index-entry-id" id="index-k-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002dkill_002dlines"></a>
<p>To delete <em class="emph">file lines</em> from the buffer&#8212;without actually
deleting the files&#8212;type <kbd class="kbd">k</kbd> (<code class="code">dired-do-kill-lines</code>).  Like
the file-operating commands, this command operates on the next <var class="var">n</var>
files, or on the marked files if any.  However, it does not operate on
the current file, since otherwise mistyping <kbd class="kbd">k</kbd> could be annoying.
</p>
<p>If you use <kbd class="kbd">k</kbd> to kill the line for a directory file which you
had inserted in the Dired buffer as a subdirectory
(see <a class="pxref" href="#Subdirectories-in-Dired">Subdirectories in Dired</a>), it removes the subdirectory listing
as well.  Typing <kbd class="kbd">C-u k</kbd> on the header line for a subdirectory
also removes the subdirectory line from the Dired buffer.
</p>
<p>The <kbd class="kbd">g</kbd> command brings back any individual lines that you have
killed in this way, but not subdirectories&#8212;you must use <kbd class="kbd">i</kbd> to
reinsert a subdirectory.
</p>
<a class="index-entry-id" id="index-Dired-sorting"></a>
<a class="index-entry-id" id="index-sorting-Dired-buffer"></a>
<a class="index-entry-id" id="index-s-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dsort_002dtoggle_002dor_002dedit"></a>
<p>The files in a Dired buffers are normally listed in alphabetical order
by file names.  Alternatively Dired can sort them by date/time.  The
Dired command <kbd class="kbd">s</kbd> (<code class="code">dired-sort-toggle-or-edit</code>) switches
between these two sorting modes.  The mode line in a Dired buffer
indicates which way it is currently sorted&#8212;by name, or by date.
</p>
<p><kbd class="kbd">C-u s <var class="var">switches</var> <kbd class="key">RET</kbd></kbd> lets you specify a new value for
<code class="code">dired-listing-switches</code>.
</p>
</div>
<div class="section-level-extent" id="Dired-and-Find">
<h3 class="section" id="Dired-and-find">31.17 Dired and <code class="code">find</code></h3>
<a class="index-entry-id" id="index-find-and-Dired"></a>

<p>You can select a set of files for display in a Dired buffer more
flexibly by using the <code class="command">find</code> utility to choose the files.
</p>
<a class="index-entry-id" id="index-find_002dname_002ddired"></a>
<p>To search for files with names matching a wildcard pattern use
<kbd class="kbd">M-x find-name-dired</kbd>.  It reads arguments <var class="var">directory</var> and
<var class="var">pattern</var>, and chooses all the files in <var class="var">directory</var> or its
subdirectories whose individual names match <var class="var">pattern</var>.
</p>
<p>The files thus chosen are displayed in a Dired buffer, in which the
ordinary Dired commands are available.
</p>
<a class="index-entry-id" id="index-find_002dgrep_002ddired"></a>
<p>If you want to test the contents of files, rather than their names,
use <kbd class="kbd">M-x find-grep-dired</kbd>.  This command reads two minibuffer
arguments, <var class="var">directory</var> and <var class="var">regexp</var>; it chooses all the files
in <var class="var">directory</var> or its subdirectories that contain a match for
<var class="var">regexp</var>.  It works by running the programs <code class="command">find</code> and
<code class="command">grep</code>.  See also <kbd class="kbd">M-x grep-find</kbd>, in <a class="ref" href="Building.xhtml#Grep-Searching">Searching with Grep under Emacs</a>.  Remember to write the regular expression for
<code class="command">grep</code>, not for Emacs.  (An alternative method of showing
files whose contents match a given regexp is the <kbd class="kbd">% g
<var class="var">regexp</var></kbd> command, see <a class="ref" href="#Marks-vs-Flags">Dired Marks vs. Flags</a>.)
</p>
<a class="index-entry-id" id="index-find_002ddired"></a>
<p>The most general command in this series is <kbd class="kbd">M-x find-dired</kbd>,
which lets you specify any condition that <code class="command">find</code> can test.  It
takes two minibuffer arguments, <var class="var">directory</var> and <var class="var">find-args</var>;
it runs <code class="command">find</code> in <var class="var">directory</var>, passing <var class="var">find-args</var> to
tell <code class="command">find</code> what condition to test.  To use this command, you
need to know how to use <code class="command">find</code>.
</p>
<a class="index-entry-id" id="index-find_002dls_002doption"></a>
<p>The format of listing produced by these commands is controlled by
the variable <code class="code">find-ls-option</code>.  This is a pair of options; the
first specifying how to call <code class="command">find</code> to produce the file listing,
and the second telling Dired to parse the output.
</p>
<a class="index-entry-id" id="index-locate"></a>
<a class="index-entry-id" id="index-locate_002dwith_002dfilter"></a>
<a class="index-entry-id" id="index-file-database-_0028locate_0029"></a>
<a class="index-entry-id" id="index-locate_002dcommand"></a>
<p>The command <kbd class="kbd">M-x locate</kbd> provides a similar interface to the
<code class="command">locate</code> program.  <kbd class="kbd">M-x locate-with-filter</kbd> is similar, but
keeps only files whose names match a given regular expression.
</p>
<p>These buffers don&#8217;t work entirely like ordinary Dired buffers: file
operations work, but do not always automatically update the buffer.
Reverting the buffer with <kbd class="kbd">g</kbd> deletes all inserted subdirectories,
and erases all flags and marks.
</p>
</div>
<div class="section-level-extent" id="Wdired">
<h3 class="section" id="Editing-the-Dired-Buffer">31.18 Editing the Dired Buffer</h3>

<a class="index-entry-id" id="index-wdired-mode"></a>
<a class="index-entry-id" id="index-wdired_002dchange_002dto_002dwdired_002dmode"></a>
<p>Wdired is a special mode that allows you to perform file operations
by editing the Dired buffer directly (the &#8220;W&#8221; in &#8220;Wdired&#8221; stands
for &#8220;writable&#8221;).  To enter Wdired mode, type <kbd class="kbd">C-x C-q</kbd>
(<code class="code">dired-toggle-read-only</code>) while in a Dired buffer.
Alternatively, use the &#8216;<samp class="samp">Immediate / Edit File Names</samp>&#8217; menu item.
</p>
<a class="index-entry-id" id="index-wdired_002dfinish_002dedit"></a>
<p>While in Wdired mode, you can rename files by editing the file names
displayed in the Dired buffer.  All the ordinary Emacs editing
commands, including rectangle operations and <code class="code">query-replace</code>, are
available for this.  Once you are done editing, type <kbd class="kbd">C-c C-c</kbd>
(<code class="code">wdired-finish-edit</code>).  This applies your changes and switches
back to ordinary Dired mode.
</p>
<p>Apart from simply renaming files, you can move a file to another
directory by typing in the new file name (either absolute or
relative).  To mark a file for deletion, delete the entire file name.
To change the target of a symbolic link, edit the link target name
which appears next to the link name.
</p>
<p>If you edit the file names to create a new subdirectory, Wdired will
automatically create these new directories.  To inhibit this behavior,
set <code class="code">wdired-create-parent-directories</code> to <code class="code">nil</code>.
</p>
<p>The rest of the text in the buffer, such as the file sizes and
modification dates, is marked read-only, so you can&#8217;t edit it.
However, if you set <code class="code">wdired-allow-to-change-permissions</code> to
<code class="code">t</code>, you can edit the file permissions.  For example, you can
change &#8216;<samp class="samp">-rw-r--r--</samp>&#8217; to &#8216;<samp class="samp">-rw-rw-rw-</samp>&#8217; to make a file
world-writable.  These changes also take effect when you type <kbd class="kbd">C-c
C-c</kbd>.
</p>
</div>
<div class="section-level-extent" id="Image_002dDired">
<h3 class="section" id="Viewing-Image-Thumbnails-in-Dired">31.19 Viewing Image Thumbnails in Dired</h3>
<a class="index-entry-id" id="index-image_002ddired-mode"></a>
<a class="index-entry-id" id="index-image_002ddired"></a>

<p>Image-Dired is a facility for browsing image files.  It provides viewing
the images either as thumbnails or in full size, either inside Emacs
or through an external viewer.  This is different from Image mode
(see <a class="pxref" href="Files.xhtml#Image-Mode">Viewing Image Files</a>) for visiting an image file in the Emacs buffer.
</p>
<a class="index-entry-id" id="index-C_002dt-d-_0028Image_002dDired_0029"></a>
<a class="index-entry-id" id="index-image_002ddired_002ddisplay_002dthumbs"></a>
<p>To enter Image-Dired, mark the image files you want to look at in
the Dired buffer, using <kbd class="kbd">m</kbd> as usual.  Then type <kbd class="kbd">C-t d</kbd>
(<code class="code">image-dired-display-thumbs</code>).  This creates and switches to a
buffer containing Image-Dired, corresponding to the marked files.
</p>
<p>You can also enter Image-Dired directly by typing <kbd class="kbd">M-x
image-dired</kbd>.  This prompts for a directory; specify one that has
image files.  This creates thumbnails for all the images in that
directory, and displays them all in the thumbnail buffer.  The
thumbnails are generated in the background and are loaded as they
become available.
</p>
<a class="index-entry-id" id="index-image_002ddired_002ddisplay_002dthis"></a>
<a class="index-entry-id" id="index-image_002ddired_002ddisplay_002dnext"></a>
<a class="index-entry-id" id="index-image_002ddired_002ddisplay_002dprevious"></a>
<p>With point in the thumbnail buffer, you can type <kbd class="key">RET</kbd>
(<code class="code">image-dired-display-this</code>) to display the image in another
window.  Use the standard Emacs movement key bindings or the arrow
keys to move around in the thumbnail buffer.  For easy browsing, use
<kbd class="key">SPC</kbd> (<code class="code">image-dired-display-next</code>) to advance and display the
next image.  Typing <kbd class="key">DEL</kbd> (<code class="code">image-dired-display-previous</code>)
backs up to the previous thumbnail and displays that instead.
</p>
<a class="index-entry-id" id="index-image_002ddired_002dexternal_002dviewer"></a>
<p>Type <kbd class="kbd">C-<kbd class="key">RET</kbd></kbd>
(<code class="code">image-dired-thumbnail-display-external</code>) to display the image
in an external viewer.  You must first configure
<code class="code">image-dired-external-viewer</code>.
</p>
<p>You can delete images through Image-Dired also.  Type <kbd class="kbd">d</kbd>
(<code class="code">image-dired-flag-thumb-original-file</code>) to flag the image file
for deletion in the Dired buffer.  Alternatively, you can remove an
image&#8217;s thumbnail from the thumbnail buffer without flagging the image
for deletion, by typing <kbd class="kbd">C-d</kbd> (<code class="code">image-dired-delete-char</code>).
</p>
<a class="index-entry-id" id="index-image_002ddired_002ddired_002dtoggle_002dmarked_002dthumbs"></a>
<a class="index-entry-id" id="index-image_002ddired_002ddired_002ddisplay_002dexternal"></a>
<a class="index-entry-id" id="index-image_002ddired_002ddired_002ddisplay_002dimage"></a>
<p>You could also use Image-Dired for &#8220;inline&#8221; operations (i.e.,
right into the Dired buffer).  Type <kbd class="kbd">C-t C-t</kbd>, and the thumbnails
of the selected images in Dired will appear in front of their names
(<code class="code">image-dired-dired-toggle-marked-thumbs</code>).  <kbd class="kbd">C-t i</kbd> and
<kbd class="kbd">C-t x</kbd> will display the image under the point in Emacs or with
the external viewer, respectively.
</p>
<p>More advanced features include <em class="dfn">image tags</em>, which are metadata
used to categorize image files.  The tags are stored in a plain text
file configured by <code class="code">image-dired-tags-db-file</code>.
</p>
<p>To tag image files, mark them in the Dired buffer (you can also mark
files in Dired from the thumbnail buffer by typing <kbd class="kbd">m</kbd>) and type
<kbd class="kbd">C-t t</kbd> (<code class="code">image-dired-tag-files</code>).  This reads the tag name
in the minibuffer.  To mark files having a certain tag, type <kbd class="kbd">C-t f</kbd>
(<code class="code">image-dired-mark-tagged-files</code>).  After marking image files
with a certain tag, you can use <kbd class="kbd">C-t d</kbd> to view them.
</p>
<a class="index-entry-id" id="index-image_002ddired_002ddired_002dcomment_002dfiles"></a>
<a class="index-entry-id" id="index-image_002ddired_002ddired_002dedit_002dcomment_002dand_002dtags"></a>
<p>You can also tag a file directly from the thumbnail buffer by typing
<kbd class="kbd">t t</kbd>, and you can remove a tag by typing <kbd class="kbd">t r</kbd>.  There is
also a special tag called &#8220;comment&#8221; for each file (it is not a tag
in the exact same sense as the other tags, it is handled slightly
differently).  That is used to enter a comment or description about
the image.  You comment a file from the thumbnail buffer by typing
<kbd class="kbd">c</kbd>.  You will be prompted for a comment.  Type <kbd class="kbd">C-t c</kbd> to add
a comment from Dired (<code class="code">image-dired-dired-comment-files</code>).
<kbd class="kbd">C-t e</kbd> will bring a buffer to edit comment and tags
(<code class="code">image-dired-dired-edit-comment-and-tags</code>).
</p>
<a class="index-entry-id" id="index-image_002ddired_002dthumb_002dvisible_002dmarks"></a>
<p>Files that are marked in Dired will also be marked in Image-Dired if
<code class="code">image-dired-thumb-visible-marks</code> is non-<code class="code">nil</code> (which is the
default).
</p>
<p>Image-Dired also provides simple image manipulation.  In the
thumbnail buffer, type <kbd class="kbd">L</kbd> to rotate the original image 90 degrees
anti clockwise, and <kbd class="kbd">R</kbd> to rotate it 90 degrees clockwise.  This
rotation is lossless, and uses an external utility called
<code class="command">jpegtran</code>, which you need to install first.
</p>
</div>
<div class="section-level-extent" id="Misc-Dired-Features">
<h3 class="section" id="Other-Dired-Features">31.20 Other Dired Features</h3>

<a class="index-entry-id" id="index-dired_002dfree_002dspace"></a>
<p>By default, Dired displays the available space on the directory&#8217;s
disk on the first line of that directory&#8217;s listing, following the
directory name.  You can control this display by customizing the
variable <code class="code">dired-free-space</code>.  Its default value is <code class="code">first</code>,
which produces the available space after the directory name.  If you
customize it to the value <code class="code">separate</code> instead, Dired will display
the disk space information on a separate line, following the line with
the directory name, and will include in that line the space used by
the files in the current directory as well as the available disk
space.  If you set this to <code class="code">nil</code>, the available disk space
information will not be displayed at all.
</p>
<a class="index-entry-id" id="index-_002b-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dcreate_002ddirectory"></a>
<p>The command <kbd class="kbd">+</kbd> (<code class="code">dired-create-directory</code>) reads a
directory&#8217;s name, and creates that directory.  It signals an error if
the directory already exists.
</p>
<a class="index-entry-id" id="index-dired_002dcreate_002dempty_002dfile"></a>
<p>The command (<code class="code">dired-create-empty-file</code>) reads a
file name, and creates that file.  It signals an error if
the file already exists.
</p>
<a class="index-entry-id" id="index-searching-multiple-files-via-Dired"></a>
<a class="index-entry-id" id="index-M_002ds-a-C_002ds-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-M_002ds-a-M_002dC_002ds-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002ddo_002disearch"></a>
<a class="index-entry-id" id="index-dired_002ddo_002disearch_002dregexp"></a>
<p>The command <kbd class="kbd">M-s a C-s</kbd> (<code class="code">dired-do-isearch</code>) begins a
multi-file incremental search on the marked files.  If a search
fails at the end of a file, typing <kbd class="kbd">C-s</kbd> advances to the next
marked file and repeats the search; at the end of the last marked
file, the search wraps around to the first marked file.  The command
<kbd class="kbd">M-s a M-C-s</kbd> (<code class="code">dired-do-isearch-regexp</code>) does the same with
a regular expression search.  See <a class="xref" href="Search.xhtml#Repeat-Isearch">Repeating Incremental Search</a>, for information
about search repetition.
</p>
<a class="index-entry-id" id="index-adding-to-the-kill-ring-in-Dired"></a>
<a class="index-entry-id" id="index-w-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dcopy_002dfilename_002das_002dkill"></a>
<p>The command <kbd class="kbd">w</kbd> (<code class="code">dired-copy-filename-as-kill</code>) puts the
names of the marked (or next <var class="var">n</var>) files into the kill ring, as if
you had killed them with <kbd class="kbd">C-w</kbd>.  The names are separated by a
space.
</p>
<p>With a zero prefix argument, this uses the absolute file name of
each marked file.  With just <kbd class="kbd">C-u</kbd> as the prefix argument, it uses
file names relative to the Dired buffer&#8217;s default directory.  (This
can still contain slashes if in a subdirectory.)  As a special case,
if point is on a directory header line, <kbd class="kbd">w</kbd> gives you the absolute
name of that directory.  Any prefix argument or marked files are
ignored in this case.
</p>
<p>The main purpose of this command is so that you can yank the file
names into arguments for other Emacs commands.  It also displays what
it added to the kill ring, so you can use it to display the list of
currently marked files in the echo area.
</p>
<a class="index-entry-id" id="index-W-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-browse_002durl_002dof_002ddired_002dfile"></a>
<p>If you have an HTML file in the file listing, it can be useful to
view that file with a browser.  The <kbd class="kbd">W</kbd>
(<code class="code">browse-url-of-dired-file</code>) command will use the standard
configured browser to view that file.
</p>
<a class="index-entry-id" id="index-_0028-_0028Dired_0029"></a>
<a class="index-entry-id" id="index-dired_002dhide_002ddetails_002dmode"></a>
<a class="index-entry-id" id="index-dired_002dhide_002ddetails_002dhide_002dsymlink_002dtargets"></a>
<a class="index-entry-id" id="index-dired_002dhide_002ddetails_002dhide_002dinformation_002dlines"></a>
<a class="index-entry-id" id="index-hiding-details-in-Dired"></a>
<p>The command <kbd class="kbd">(</kbd> (<code class="code">dired-hide-details-mode</code>) toggles whether
details, such as ownership or file permissions, are visible in the
current Dired buffer.  By default, it also hides the targets of
symbolic links, and all lines other than the header line and
file/directory listings.  To change this, customize the options
<code class="code">dired-hide-details-hide-symlink-targets</code> and
<code class="code">dired-hide-details-hide-information-lines</code>, respectively.
</p>
<a class="index-entry-id" id="index-Dired-and-version-control"></a>
<p>If the directory you are visiting is under version control
(see <a class="pxref" href="Maintaining.xhtml#Version-Control">Version Control</a>), then the normal VC diff and log commands
will operate on the selected files.
</p>
<a class="index-entry-id" id="index-dired_002dcompare_002ddirectories"></a>
<p>The command <kbd class="kbd">M-x dired-compare-directories</kbd> is used to compare
the current Dired buffer with another directory.  It marks all the files
that differ between the two directories.  It puts these marks
in all Dired buffers where these files are listed, which of course includes
the current buffer.
</p>
<p>The default comparison method (used if you type <kbd class="key">RET</kbd> at the
prompt) is to compare just the file names&#8212;file names differ if
they do not appear in the other directory.  You can specify
more stringent comparisons by entering a Lisp expression, which can
refer to the variables <code class="code">size1</code> and <code class="code">size2</code>, the respective
file sizes; <code class="code">mtime1</code> and <code class="code">mtime2</code>, the last modification
times in seconds, as floating point numbers; and <code class="code">fa1</code> and
<code class="code">fa2</code>, the respective file attribute lists (as returned by the
function <code class="code">file-attributes</code>).  This expression is evaluated for
each pair of like-named files, and files differ if the expression&#8217;s
value is non-<code class="code">nil</code>.
</p>
<p>For instance, the sequence <kbd class="kbd">M-x dired-compare-directories
<kbd class="key">RET</kbd> (&gt; mtime1 mtime2) <kbd class="key">RET</kbd></kbd> marks files newer in this
directory than in the other, and marks files older in the other
directory than in this one.  It also marks files with no counterpart,
in both directories, as always.
</p>
<a class="index-entry-id" id="index-drag-and-drop_002c-Dired"></a>
<a class="index-entry-id" id="index-dired_002dmouse_002ddrag_002dfiles"></a>
<p>On the X Window System, Emacs supports the drag and drop protocol.
You can drag a file object from another program, and drop it onto a
Dired buffer; this either moves, copies, or creates a link to the file
in that directory.  Precisely which action is taken is determined by
the originating program.  Dragging files out of a Dired buffer is also
supported, by enabling the user option <code class="code">dired-mouse-drag-files</code>,
the mouse can be used to drag files onto other programs.  When set to
<code class="code">link</code>, it will make the other program (typically a file manager)
create a symbolic link to the file; when set to <code class="code">move</code>, it will
make the other program move the file to a new location, and setting it
to any other non-<code class="code">nil</code> value will make the other program open or
create a copy of the file.  The keyboard modifiers pressed during the
drag-and-drop operation can also control what action the other program
takes towards the file.
</p></div>
</div>



</body>
</html>
