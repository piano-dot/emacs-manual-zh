<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<!-- Created by GNU Texinfo 7.1, https://www.gnu.org/software/texinfo/ -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<!-- 这是 GNU Emacs 手册,
为 Emacs  29.2 更新

英文原版版权提示 - Original English version copyright note

Copyright © 1985-2024 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "The GNU Manifesto," "Distribution" and
"GNU GENERAL PUBLIC LICENSE," with the Front-Cover Texts being "A GNU
Manual," and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled "GNU Free Documentation
License."

(a) The FSF's Back-Cover Text is: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."

中文翻译版版权提示 - Chinese translation revision copyright notice

版权所有 © 1985-2024 林羿轩(Ralph Lin).

您有在 Free Software Foundation发布的GNU Free Documentation License 第1.3版或之后版本的约束下对其进行再发布及修的权利。 恒定章节为 "The GNU Manifesto," "分发" "(中文版)GNU GENERAL PUBLIC LICENSE" 和
"GNU GENERAL PUBLIC LICENSE" , 前封面文字为 "A GNU
Manual,"后封面文字如下(a).  本书的FDL许可证可以在 "GNU Free Documentation
License."找到.

(a) FSF的后封面文字为: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."
 -->
<title>Appendix D X Options and Resources (GNU Emacs Manual)</title>

<meta name="description" content="Appendix D X Options and Resources (GNU Emacs Manual)"/>
<meta name="keywords" content="Appendix D X Options and Resources (GNU Emacs Manual)"/>
<meta name="resource-type" content="document"/>
<meta name="distribution" content="global"/>
<meta name="Generator" content="texi2any"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>

<link href="emacs.xhtml" rel="start" title="Emacs 编辑器"/>
<link href="Key-Index.xhtml" rel="index" title="Key (Character) Index"/>
<link href="emacs.xhtml#SEC_Contents" rel="contents" title="Table of Contents"/>
<link href="emacs.xhtml" rel="up" title="Emacs 编辑器"/>
<link href="Antinews.xhtml" rel="next" title="Appendix E Emacs 28 Antinews"/>
<link href="Emacs-Invocation.xhtml#Emacs-Invocation" rel="prev" title="Appendix C Command Line Arguments for Emacs Invocation"/>
<style type="text/css">
<!--
div.example {margin-left: 3.2em}
kbd.kbd {font-style: oblique}
kbd.key {font-style: normal}
span.r {font-family: initial; font-weight: normal; font-style: normal}
-->
</style>


</head>

<body lang="zh_CN">
<div class="appendix-level-extent" id="X-Resources">

<h2 class="appendix" id="X-Options-and-Resources">Appendix D X Options and Resources</h2>

<p>You can customize some X-related aspects of Emacs behavior using X
resources, as is usual for programs that use X.
</p>
<p>When Emacs is compiled with GTK+ support, the appearance of various
graphical widgets, such as the menu-bar, scroll-bar, and dialog boxes,
is determined by
GTK+ resources, which we will also describe.
When Emacs is built without GTK+ support, the appearance of these
widgets is determined by additional X resources.
</p>
<p>On MS-Windows, you can customize some of the same aspects using the
system registry (see <a class="pxref" href="Emacs-Invocation.xhtml#MS_002dWindows-Registry">The MS-Windows System Registry</a>).
</p>

<div class="appendixsec-level-extent" id="Resources">
<h3 class="appendixsec" id="X-Resources-1">D.1 X Resources</h3>
<a class="index-entry-id" id="index-resources"></a>
<a class="index-entry-id" id="index-X-resources"></a>
<a class="index-entry-id" id="index-_007e_002f_002eXdefaults-file"></a>
<a class="index-entry-id" id="index-_007e_002f_002eXresources-file"></a>

<p>Programs running under the X Window System organize their user
options under a hierarchy of classes and resources.  You can specify
default values for these options in your <em class="dfn">X resource file</em>,
usually named <samp class="file">~/.Xdefaults</samp> or <samp class="file">~/.Xresources</samp>.  Changes in
this file do not take effect immediately, because the X server stores
its own list of resources; to update it, use the command
<code class="command">xrdb</code>&#8212;for instance, &#8216;<samp class="samp">xrdb ~/.Xdefaults</samp>&#8217;.
</p>
<p>Settings specified via X resources in general override the
equivalent settings in Emacs init files (see <a class="pxref" href="Customization.xhtml#Init-File">The Emacs Initialization File</a>), in
particular for parameters of the initial frame (see <a class="pxref" href="Frames.xhtml#Frame-Parameters">Frame Parameters</a>).
</p>
<a class="index-entry-id" id="index-registry_002c-setting-resources-_0028MS_002dWindows_0029"></a>
<p>(MS-Windows systems do not support X resource files; on such systems,
Emacs looks for X resources in the Windows Registry, first under the
key &#8216;<samp class="samp">HKEY_CURRENT_USER\SOFTWARE\GNU\Emacs</samp>&#8217;, which affects only
the current user and override the system-wide settings, and then under
the key &#8216;<samp class="samp">HKEY_LOCAL_MACHINE\SOFTWARE\GNU\Emacs</samp>&#8217;, which affects
all users of the system.  The menu and scroll bars are native widgets
on MS-Windows, so they are only customizable via the system-wide
settings in the Display Control Panel.  You can also set resources
using the &#8216;<samp class="samp">-xrm</samp>&#8217; command line option, as explained below.)
</p>
<p>Each line in the X resource file specifies a value for one option or
for a collection of related options.  The order in which the lines
appear in the file does not matter.  Each resource specification
consists of a <em class="dfn">program name</em> and a <em class="dfn">resource name</em>.  Case
distinctions are significant in each of these names.  Here is an
example:
</p>
<div class="example">
<pre class="example-preformatted">emacs.cursorColor: dark green
</pre></div>

<p>The program name is the name of the executable file to which the
resource applies.  For Emacs, this is normally &#8216;<samp class="samp">emacs</samp>&#8217;.  To
specify a definition that applies to all instances of Emacs,
regardless of the name of the Emacs executable, use &#8216;<samp class="samp">Emacs</samp>&#8217;.
</p>
<p>The resource name is the name of a program setting.  For instance,
Emacs recognizes a &#8216;<samp class="samp">cursorColor</samp>&#8217; resource that controls the color
of the text cursor.
</p>
<p>Resources are grouped into named classes.  For instance, the
&#8216;<samp class="samp">Foreground</samp>&#8217; class contains the &#8216;<samp class="samp">cursorColor</samp>&#8217;,
&#8216;<samp class="samp">foreground</samp>&#8217; and &#8216;<samp class="samp">pointerColor</samp>&#8217; resources (see <a class="pxref" href="#Table-of-Resources">Table of X Resources for Emacs</a>).  Instead of using a resource name, you can use a class
name to specify the default value for all resources in that class,
like this:
</p>
<div class="example">
<pre class="example-preformatted">emacs.Foreground: dark green
</pre></div>

<p>Emacs does not process X resources at all if you set the variable
<code class="code">inhibit-x-resources</code> to a non-<code class="code">nil</code> value.  If you invoke
Emacs with the &#8216;<samp class="samp">-Q</samp>&#8217; (or &#8216;<samp class="samp">--quick</samp>&#8217;) command-line option,
<code class="code">inhibit-x-resources</code> is automatically set to <code class="code">t</code>
(see <a class="pxref" href="Emacs-Invocation.xhtml#Initial-Options">Initial Options</a>).
</p>
<p>In addition, you can use the following command-line options to
override the X resources file:
</p>
<dl class="table">
<dt><a id="index-resource-name_002c-command_002dline-argument"></a>&#8216;<samp class="samp">-name <var class="var">name</var></samp>&#8217;</dt>
<dd><a class="index-entry-id" id="index-_002d_002dname"></a>
</dd>
<dt>&#8216;<samp class="samp">--name=<var class="var">name</var></samp>&#8217;</dt>
<dd><p>This option sets the program name of the initial Emacs frame to
<var class="var">name</var>.  It also sets the title of the initial frame to
<var class="var">name</var>.  This option does not affect subsequent frames.
</p>
<p>If you don&#8217;t specify this option, the default is to use the Emacs
executable&#8217;s name as the program name.
</p>
<p>For consistency, &#8216;<samp class="samp">-name</samp>&#8217; also specifies the name to use for other
resource values that do not belong to any particular frame.
</p>
<p>The resources that name Emacs invocations also belong to a class,
named &#8216;<samp class="samp">Emacs</samp>&#8217;.  If you write &#8216;<samp class="samp">Emacs</samp>&#8217; instead of
&#8216;<samp class="samp">emacs</samp>&#8217;, the resource applies to all frames in all Emacs jobs,
regardless of frame titles and regardless of the name of the
executable file.
</p>
</dd>
<dt><a id="index-resource-values_002c-command_002dline-argument"></a>&#8216;<samp class="samp">-xrm <var class="var">resource-value</var></samp>&#8217;</dt>
<dd><a class="index-entry-id" id="index-_002d_002dxrm"></a>
</dd>
<dt>&#8216;<samp class="samp">--xrm=<var class="var">resource-value</var></samp>&#8217;</dt>
<dd><p>This option specifies X resource values for the present Emacs job.
</p>
<p><var class="var">resource-value</var> should have the same format that you would use
inside a file of X resources.  Several &#8216;<samp class="samp">-xrm</samp>&#8217; options are
possible to include multiple resource specifications.  You can also
use &#8216;<samp class="samp">#include &quot;<var class="var">filename</var>&quot;</samp>&#8217; as <var class="var">resource-value</var> to
include a file full of resource specifications.  Resource values
specified with &#8216;<samp class="samp">-xrm</samp>&#8217; take precedence over all other resource
specifications.
</p></dd>
</dl>

</div>
<div class="appendixsec-level-extent" id="Table-of-Resources">
<h3 class="appendixsec" id="Table-of-X-Resources-for-Emacs">D.2 Table of X Resources for Emacs</h3>

<p>The table below lists the X resource names that Emacs recognizes.
Note that some of the resources have no effect in Emacs compiled with
various X toolkits (GTK+, Lucid, etc.)&#8212;we indicate below when this
is the case.
</p>
<dl class="table">
<dt><code class="code">alpha</code> (class <code class="code">Alpha</code>)</dt>
<dd><p>Sets the &#8216;<samp class="samp">alpha</samp>&#8217; frame parameter, determining frame transparency
(see <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Frame-Parameters.html#Frame-Parameters">Frame Parameters</a> in <cite class="cite">The Emacs Lisp Reference Manual</cite>).
</p>
</dd>
<dt><code class="code">alphaBackground</code> (class <code class="code">AlphaBackground</code>)</dt>
<dd><p>Sets the &#8216;<samp class="samp">alpha-background</samp>&#8217; frame parameter, determining background
transparency
(see <a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Frame-Parameters.html#Frame-Parameters">Frame Parameters</a> in <cite class="cite">The Emacs Lisp Reference Manual</cite>).
</p>
</dd>
<dt><code class="code">background</code> (class <code class="code">Background</code>)</dt>
<dd><p>Background color (see <a class="pxref" href="Display.xhtml#Colors">Colors for Faces</a>).
</p>
</dd>
<dt><code class="code">bitmapIcon</code> (class <code class="code">BitmapIcon</code>)</dt>
<dd><p>Tell the window manager to display the Emacs icon if &#8216;<samp class="samp">on</samp>&#8217;; don&#8217;t
do so if &#8216;<samp class="samp">off</samp>&#8217;.  See <a class="xref" href="Emacs-Invocation.xhtml#Icons-X">Icons</a>, for a description of the icon.
</p>
</dd>
<dt><code class="code">borderColor</code> (class <code class="code">BorderColor</code>)</dt>
<dd><p>Color of the frame&#8217;s external border.  This has no effect if Emacs is
compiled with GTK+ support.
</p>
</dd>
<dt><code class="code">borderWidth</code> (class <code class="code">BorderWidth</code>)</dt>
<dd><p>Width of the frame&#8217;s external border, in pixels.  This has no effect
if Emacs is compiled with GTK+ support.
</p>
</dd>
<dt><code class="code">cursorBlink</code> (class <code class="code">CursorBlink</code>)</dt>
<dd><p>If the value of this resource is &#8216;<samp class="samp">off</samp>&#8217; or &#8216;<samp class="samp">false</samp>&#8217; or
&#8216;<samp class="samp">0</samp>&#8217; at startup, Emacs disables Blink Cursor mode (see <a class="pxref" href="Display.xhtml#Cursor-Display">Displaying the Cursor</a>).
</p>
</dd>
<dt><code class="code">cursorColor</code> (class <code class="code">Foreground</code>)</dt>
<dd><p>Text cursor color.  If this resource is specified when Emacs starts
up, Emacs sets its value as the background color of the <code class="code">cursor</code>
face (see <a class="pxref" href="Display.xhtml#Faces">Text Faces</a>).
</p>
</dd>
<dt><code class="code">font</code> (class <code class="code">Font</code>)</dt>
<dd><p>Font name for the <code class="code">default</code> face (see <a class="pxref" href="Frames.xhtml#Fonts">Fonts</a>).  You can also
specify a fontset name (see <a class="pxref" href="International.xhtml#Fontsets">Fontsets</a>).
</p>
</dd>
<dt><code class="code">fontBackend</code> (class <code class="code">FontBackend</code>)</dt>
<dd><p>Comma-delimited list of backend(s) to use for drawing fonts, in order
of precedence.  For instance, the value &#8216;<samp class="samp">x,xft</samp>&#8217; tells Emacs to
draw fonts using the X core font driver, falling back on the Xft font
driver if that fails.  Normally, you should leave this resource unset,
in which case Emacs tries using all available font backends.
</p>
</dd>
<dt><code class="code">foreground</code> (class <code class="code">Foreground</code>)</dt>
<dd><p>Default foreground color for text.
</p>
</dd>
<dt><code class="code">fullscreen</code> (class <code class="code">Fullscreen</code>)</dt>
<dd><p>The desired fullscreen size.  The value can be one of <code class="code">fullboth</code>,
<code class="code">maximized</code>, <code class="code">fullwidth</code> or <code class="code">fullheight</code>, which
correspond to the command-line options &#8216;<samp class="samp">-fs</samp>&#8217;, &#8216;<samp class="samp">-mm</samp>&#8217;,
&#8216;<samp class="samp">-fw</samp>&#8217;, and &#8216;<samp class="samp">-fh</samp>&#8217; (see <a class="pxref" href="Emacs-Invocation.xhtml#Window-Size-X">Options for Window Size and Position</a>).  Note that this
applies to the initial frame only.
</p>
</dd>
<dt><code class="code">geometry</code> (class <code class="code">Geometry</code>)</dt>
<dd><p>Window size and position.  The value should be a size and position
specification, of the same form as in the &#8216;<samp class="samp">-g</samp>&#8217; or
&#8216;<samp class="samp">--geometry</samp>&#8217; command-line option (see <a class="pxref" href="Emacs-Invocation.xhtml#Window-Size-X">Options for Window Size and Position</a>).
</p>
<p>The size applies to all frames in the Emacs session, but the position
applies only to the initial Emacs frame (or, in the case of a resource
for a specific frame name, only that frame).
</p>
<p>Be careful not to specify this resource as &#8216;<samp class="samp">emacs*geometry</samp>&#8217;, as
that may affect individual menus as well as the main Emacs frame.
</p>
</dd>
<dt><code class="code">horizontalScrollBars</code> (class <code class="code">ScrollBars</code>)</dt>
<dd><p>If the value of this resource is &#8216;<samp class="samp">off</samp>&#8217; or &#8216;<samp class="samp">false</samp>&#8217; or
&#8216;<samp class="samp">0</samp>&#8217;, Emacs disables Horizontal Scroll Bar mode at startup
(see <a class="pxref" href="Frames.xhtml#Scroll-Bars">Scroll Bars</a>).
</p>
</dd>
<dt><code class="code">iconName</code> (class <code class="code">Title</code>)</dt>
<dd><p>Name to display in the icon.
</p>
</dd>
<dt><code class="code">internalBorder</code> (class <code class="code">BorderWidth</code>)</dt>
<dd><p>Width of the internal frame border, in pixels.
</p>
</dd>
<dt><a id="index-line-spacing-_0028X-resource_0029"></a><code class="code">lineSpacing</code> (class <code class="code">LineSpacing</code>)</dt>
<dd><p>Additional space between lines, in pixels.
</p>
</dd>
<dt><a id="index-background-for-menus-_0028X-resource_0029"></a><code class="code">menuBackground</code> (class <code class="code">Background</code>)</dt>
<dd><p>The background color of the menus in non-toolkit versions of Emacs.
(For toolkit versions, see <a class="ref" href="#Lucid-Resources">Lucid Menu And Dialog X Resources</a>, also see <a class="ref" href="#Motif-Resources">Motif Menu X Resources</a>, and see <a class="ref" href="#GTK-resources">GTK+ resources</a>.)
</p>
</dd>
<dt><a id="index-menu-bar-_0028X-resource_0029"></a><code class="code">menuBar</code> (class <code class="code">MenuBar</code>)</dt>
<dd><p>If the value of this resource is &#8216;<samp class="samp">off</samp>&#8217; or &#8216;<samp class="samp">false</samp>&#8217; or
&#8216;<samp class="samp">0</samp>&#8217;, Emacs disables Menu Bar mode at startup (see <a class="pxref" href="Frames.xhtml#Menu-Bars">Menu Bars</a>).
</p>
</dd>
<dt><code class="code">minibuffer</code> (class <code class="code">Minibuffer</code>)</dt>
<dd><p>If &#8216;<samp class="samp">none</samp>&#8217;, Emacs will not make a minibuffer in this frame; it
will use a separate minibuffer frame instead.
</p>
</dd>
<dt><a id="index-font-for-menus-_0028X-resource_0029"></a><code class="code">paneFont</code> (class <code class="code">Font</code>)</dt>
<dd><p>Font name for menu pane titles, in non-toolkit versions of Emacs.
(For toolkit versions, see <a class="ref" href="#Lucid-Resources">Lucid Menu And Dialog X Resources</a>, also see <a class="ref" href="#Motif-Resources">Motif Menu X Resources</a>, and see <a class="ref" href="#GTK-resources">GTK+ resources</a>.)
</p>
</dd>
<dt><a id="index-foreground-for-menus-_0028X-resource_0029"></a><code class="code">paneForeground</code> (class <code class="code">Foreground</code>)</dt>
<dd><p>Foreground color for menu pane titles, in non-toolkit versions of
Emacs.  (For toolkit versions, see <a class="ref" href="#Lucid-Resources">Lucid Menu And Dialog X Resources</a>, also see
<a class="ref" href="#Motif-Resources">Motif Menu X Resources</a>, and see <a class="ref" href="#GTK-resources">GTK+ resources</a>.)
</p>
</dd>
<dt><code class="code">pointerColor</code> (class <code class="code">Foreground</code>)</dt>
<dd><p>Color of the mouse cursor.  This has no effect in many graphical
desktop environments, as they do not let Emacs change the mouse cursor
this way.
</p>
</dd>
<dt><code class="code">privateColormap</code> (class <code class="code">PrivateColormap</code>)</dt>
<dd><p>If &#8216;<samp class="samp">on</samp>&#8217;, use a private color map, in the case where the default
visual of class PseudoColor and Emacs is using it.
</p>
</dd>
<dt><code class="code">reverseVideo</code> (class <code class="code">ReverseVideo</code>)</dt>
<dd><p>Switch foreground and background default colors if &#8216;<samp class="samp">on</samp>&#8217;, use colors as
specified if &#8216;<samp class="samp">off</samp>&#8217;.
</p>
</dd>
<dt><a id="index-gamma-correction-_0028X-resource_0029"></a><code class="code">screenGamma</code> (class <code class="code">ScreenGamma</code>)</dt>
<dd><p>Gamma correction for colors, equivalent to the frame parameter
<code class="code">screen-gamma</code>.
</p>
</dd>
<dt><a id="index-scroll-bar-_0028X-resource_0029"></a><code class="code">scrollBar</code> (class <code class="code">ScrollBar</code>)</dt>
<dd><p>If the value of this resource is &#8216;<samp class="samp">off</samp>&#8217; or &#8216;<samp class="samp">false</samp>&#8217; or
&#8216;<samp class="samp">0</samp>&#8217;, Emacs disables Scroll Bar mode at startup (see <a class="pxref" href="Frames.xhtml#Scroll-Bars">Scroll Bars</a>).
</p>
</dd>
<dt><a id="index-scrollbar-width-_0028X-resource_0029"></a><code class="code">scrollBarWidth</code> (class <code class="code">ScrollBarWidth</code>)</dt>
<dd><p>The scroll bar width in pixels, equivalent to the frame parameter
<code class="code">scroll-bar-width</code>.  Do not set this resource if Emacs is
compiled with GTK+ support.
</p>
</dd>
<dt><code class="code">selectionFont</code> (class <code class="code">SelectionFont</code>)</dt>
<dd><p>Font name for pop-up menu items, in non-toolkit versions of Emacs.  (For
toolkit versions, see <a class="ref" href="#Lucid-Resources">Lucid Menu And Dialog X Resources</a>, also see <a class="ref" href="#Motif-Resources">Motif Menu X Resources</a>, and see <a class="ref" href="#GTK-resources">GTK+ resources</a>.)
</p>
</dd>
<dt><code class="code">selectionForeground</code> (class <code class="code">SelectionForeground</code>)</dt>
<dd><p>Foreground color for pop-up menu items, in non-toolkit versions of
Emacs.  (For toolkit versions, see <a class="ref" href="#Lucid-Resources">Lucid Menu And Dialog X Resources</a>, also see
<a class="ref" href="#Motif-Resources">Motif Menu X Resources</a>, and see <a class="ref" href="#GTK-resources">GTK+ resources</a>.)
</p>
</dd>
<dt><code class="code">selectionTimeout</code> (class <code class="code">SelectionTimeout</code>)</dt>
<dd><p>Number of milliseconds to wait for a selection reply.
If the selection owner doesn&#8217;t reply in this time, we give up.
A value of 0 means wait as long as necessary.
</p>
</dd>
<dt><a class="index-entry-id" id="index-synchronous-X-mode"></a>
<a id="index-debugging-X-problems"></a><code class="code">synchronous</code> (class <code class="code">Synchronous</code>)</dt>
<dd><p>Run Emacs in synchronous mode if &#8216;<samp class="samp">on</samp>&#8217;.  Synchronous mode is
useful for debugging X problems.
</p>
</dd>
<dt><code class="code">title</code> (class <code class="code">Title</code>)</dt>
<dd><p>Name to display in the title bar of the initial Emacs frame.
</p>
</dd>
<dt><a id="index-tool-bar-_0028X-resource_0029"></a><code class="code">toolBar</code> (class <code class="code">ToolBar</code>)</dt>
<dd><p>If the value of this resource is &#8216;<samp class="samp">off</samp>&#8217; or &#8216;<samp class="samp">false</samp>&#8217; or
&#8216;<samp class="samp">0</samp>&#8217;, Emacs disables Tool Bar mode at startup (see <a class="pxref" href="Frames.xhtml#Tool-Bars">Tool Bars</a>).
</p>
</dd>
<dt><a id="index-tab-bar-_0028X-resource_0029"></a><code class="code">tabBar</code> (class <code class="code">TabBar</code>)</dt>
<dd><p>If the value of this resource is &#8216;<samp class="samp">on</samp>&#8217; or &#8216;<samp class="samp">yes</samp>&#8217; or
&#8216;<samp class="samp">1</samp>&#8217;, Emacs enables Tab Bar mode at startup (see <a class="pxref" href="Frames.xhtml#Tab-Bars">Tab Bars</a>).
</p>
</dd>
<dt><a class="index-entry-id" id="index-X-input-methods-_0028X-resource_0029"></a>
<a class="index-entry-id" id="index-input-methods_002c-X"></a>
<a id="index-XIM-_0028X-resource_0029"></a><code class="code">useXIM</code> (class <code class="code">UseXIM</code>)</dt>
<dd><p>Disable use of X input methods (XIM) if &#8216;<samp class="samp">false</samp>&#8217; or &#8216;<samp class="samp">off</samp>&#8217;.
This is only relevant if your Emacs is built with XIM support.  It
might be useful to turn off XIM on slow X client/server links.
</p>
</dd>
<dt><a class="index-entry-id" id="index-input-method-style_002c-X"></a>
<a id="index-inputStyle-_0028X-resource_0029"></a><code class="code">inputStyle</code> (class <code class="code">InputStyle</code>)</dt>
<dd><p>This resource controls how preview text generated by X input methods
is displayed.  Its value can be on of the following:
</p>
<dl class="table">
<dt>&#8216;<samp class="samp">callback</samp>&#8217;</dt>
<dd><p>Display the contents of the preview text in the current buffer.
</p>
</dd>
<dt>&#8216;<samp class="samp">offthespot</samp>&#8217;</dt>
<dd><p>Display the preview text inside a separate area of the display
provided by Emacs.
</p>
</dd>
<dt>&#8216;<samp class="samp">overthespot</samp>&#8217;</dt>
<dd><p>Display the preview text inside a popup window at the location of
point in the current window.
</p>
</dd>
<dt>&#8216;<samp class="samp">none</samp>&#8217;</dt>
<dd><p>Let the input method decide how to display itself.  This is usually
equivalent to &#8216;<samp class="samp">overthespot</samp>&#8217;, but it might work with more input
methods.
</p>
</dd>
<dt>&#8216;<samp class="samp">native</samp>&#8217;</dt>
<dd><p>Use the toolkit for handling input methods.  This is currently
implemented only on GTK.
</p>
</dd>
<dt>&#8216;<samp class="samp">root</samp>&#8217;</dt>
<dd><p>Use some location on display specific to the input method for
displaying the preview text.
</p></dd>
</dl>

</dd>
<dt><code class="code">synchronizeResize</code> (class <code class="code">SynchronizeResize</code>)</dt>
<dd><p>If &#8216;<samp class="samp">off</samp>&#8217; or &#8216;<samp class="samp">false</samp>&#8217;, Emacs will not try to tell the window
manager when it has finished redrawing the display in response to a
frame being resized.  Otherwise, the window manager will postpone
drawing a frame that was just resized until its contents are updated,
which prevents blank areas of a frame that have not yet been painted
from being displayed.  If set to &#8216;<samp class="samp">extended</samp>&#8217;, it will enable use
of an alternative frame synchronization protocol, which might be
supported by some compositing window managers that don&#8217;t support the
protocol Emacs uses by default, and causes Emacs to synchronize
display with the monitor refresh rate when a compatible compositing
window manager is in use.
</p>
</dd>
<dt><code class="code">verticalScrollBars</code> (class <code class="code">ScrollBars</code>)</dt>
<dd><p>Give frames scroll bars on the left if &#8216;<samp class="samp">left</samp>&#8217;, on the right if
&#8216;<samp class="samp">right</samp>&#8217;; don&#8217;t have scroll bars if &#8216;<samp class="samp">off</samp>&#8217; (see <a class="pxref" href="Frames.xhtml#Scroll-Bars">Scroll Bars</a>).
</p>
</dd>
<dt><code class="code">visualClass</code> (class <code class="code">VisualClass</code>)</dt>
<dd><p>The <em class="dfn">visual class</em> for X color display.  If specified, the value
should start with one of &#8216;<samp class="samp">TrueColor</samp>&#8217;, &#8216;<samp class="samp">PseudoColor</samp>&#8217;,
&#8216;<samp class="samp">DirectColor</samp>&#8217;, &#8216;<samp class="samp">StaticColor</samp>&#8217;, &#8216;<samp class="samp">GrayScale</samp>&#8217;, and
&#8216;<samp class="samp">StaticGray</samp>&#8217;, followed by &#8216;<samp class="samp">-<var class="var">depth</var></samp>&#8217;, where <var class="var">depth</var>
is the number of color planes.
</p></dd>
</dl>

<p>You can also use X resources to customize individual Emacs faces
(see <a class="pxref" href="Display.xhtml#Faces">Text Faces</a>).  For example, setting the resource
&#8216;<samp class="samp"><var class="var">face</var>.attributeForeground</samp>&#8217; is equivalent to customizing the
&#8216;<samp class="samp">foreground</samp>&#8217; attribute of the face <var class="var">face</var>.  However, we
recommend customizing faces from within Emacs, instead of using X
resources.  See <a class="xref" href="Customization.xhtml#Face-Customization">Customizing Faces</a>.
</p>
</div>
<div class="appendixsec-level-extent" id="Lucid-Resources">
<h3 class="appendixsec" id="Lucid-Menu-And-Dialog-X-Resources">D.3 Lucid Menu And Dialog X Resources</h3>
<a class="index-entry-id" id="index-Menu-X-Resources-_0028Lucid-widgets_0029"></a>
<a class="index-entry-id" id="index-Dialog-X-Resources-_0028Lucid-widgets_0029"></a>
<a class="index-entry-id" id="index-Lucid-Widget-X-Resources"></a>

<p>If Emacs is compiled with the X toolkit support using Lucid widgets,
you can use X resources to customize the appearance of the menu bar
(see <a class="pxref" href="Screen.xhtml#Menu-Bar">The Menu Bar</a>), pop-up menus, and dialog boxes (see <a class="pxref" href="Frames.xhtml#Dialog-Boxes">Using Dialog Boxes</a>).  The resources for the menu bar fall in the
&#8216;<samp class="samp">pane.menubar</samp>&#8217; class (following, as always, either the name of
the Emacs executable or &#8216;<samp class="samp">Emacs</samp>&#8217; for all Emacs invocations).  The
resources for the pop-up menu are in the &#8216;<samp class="samp">menu*</samp>&#8217; class.  The
resources for dialog boxes are in the &#8216;<samp class="samp">dialog*</samp>&#8217; class.
</p>
<p>For example, to display menu bar entries with the &#8216;<samp class="samp">Courier-12</samp>&#8217;
font (see <a class="pxref" href="Frames.xhtml#Fonts">Fonts</a>), write this:
</p>
<div class="example">
<pre class="example-preformatted">Emacs.pane.menubar.font: Courier-12
</pre></div>

<p>Lucid widgets can display multilingual text in your locale.  To enable
this, specify a <code class="code">fontSet</code> resource instead of a <code class="code">font</code>
resource.  See <a class="xref" href="International.xhtml#Fontsets">Fontsets</a>.  If both <code class="code">font</code> and <code class="code">fontSet</code>
resources are specified, the <code class="code">fontSet</code> resource is used.
</p>
<p>Here is a list of resources for menu bars, pop-up menus, and dialogs:
</p>
<dl class="table">
<dt><code class="code">font</code></dt>
<dd><p>Font for menu item text.
</p></dd>
<dt><code class="code">fontSet</code></dt>
<dd><p>Fontset for menu item text.
</p></dd>
<dt><code class="code">background</code></dt>
<dd><p>Background color.
</p></dd>
<dt><code class="code">buttonForeground</code></dt>
<dd><p>Foreground color for a selected item.
</p></dd>
<dt><code class="code">foreground</code></dt>
<dd><p>Foreground color.
</p></dd>
<dt><code class="code">disabledForeground</code></dt>
<dd><p>Foreground color for a disabled menu item.
</p></dd>
<dt><code class="code">highlightForeground</code></dt>
<dd><p>Foreground color for a menu item highlighted by the mouse or key
navigation.
</p></dd>
<dt><code class="code">highlightBackground</code></dt>
<dd><p>Background color for a menu item highlighted by the mouse or key
navigation.
</p></dd>
<dt><code class="code">horizontalSpacing</code></dt>
<dd><p>Horizontal spacing in pixels between items.  Default is 3.
</p></dd>
<dt><code class="code">verticalSpacing</code></dt>
<dd><p>Vertical spacing in pixels between items.  Default is 2.
</p></dd>
<dt><code class="code">arrowSpacing</code></dt>
<dd><p>Horizontal spacing between the arrow (which indicates a submenu) and
the associated text.  Default is 10.
</p></dd>
<dt><code class="code">shadowThickness</code></dt>
<dd><p>Thickness of shadow lines for 3D buttons, arrows, and other graphical
elements.  Default is 1.
</p></dd>
<dt><code class="code">borderThickness</code></dt>
<dd><p>Thickness of the external borders of the menu bars and pop-up menus.
Default is 1.
</p></dd>
<dt><code class="code">cursor</code></dt>
<dd><p>Name of the cursor to use in the menu bars and pop-up menus.  Default
is <code class="code">&quot;right_ptr&quot;</code>.
</p></dd>
<dt><code class="code">margin</code></dt>
<dd><p>Margin of the menu bar, in characters.  Default is 1.
</p></dd>
</dl>

</div>
<div class="appendixsec-level-extent" id="Motif-Resources">
<h3 class="appendixsec" id="Motif-Menu-X-Resources">D.4 Motif Menu X Resources</h3>
<a class="index-entry-id" id="index-Menu-X-Resources-_0028Motif-widgets_0029"></a>
<a class="index-entry-id" id="index-Motif-Widget-X-Resources"></a>

<p>If Emacs is compiled with the X toolkit support using Motif or
LessTif widgets, you can use X resources to customize the appearance
of the menu bar (see <a class="pxref" href="Screen.xhtml#Menu-Bar">The Menu Bar</a>), pop-up menus, and dialog boxes
(see <a class="pxref" href="Frames.xhtml#Dialog-Boxes">Using Dialog Boxes</a>).  However, the resources are organized
differently from Lucid widgets.
</p>
<p>The resource names for the menu bar are in the &#8216;<samp class="samp">pane.menubar</samp>&#8217;
class, and they must be specified in this form:
</p>
<div class="example smallexample">
<pre class="example-preformatted">Emacs.pane.menubar.<var class="var">subwidget</var>.<var class="var">resource</var>: <var class="var">value</var>
</pre></div>

<p>For pop-up menus, the resources are in the &#8216;<samp class="samp">menu*</samp>&#8217; class, instead
of &#8216;<samp class="samp">pane.menubar</samp>&#8217;.  For dialog boxes, they are in &#8216;<samp class="samp">dialog</samp>&#8217;.
In each case, each individual menu string is a subwidget; the
subwidget&#8217;s name is the same as the menu item string.  For example,
the &#8216;<samp class="samp">File</samp>&#8217; menu in the menu bar is a subwidget named
&#8216;<samp class="samp">emacs.pane.menubar.File</samp>&#8217;.
</p>
<p>Typically, you want to specify the same resources for the whole menu
bar.  To do this, use &#8216;<samp class="samp">*</samp>&#8217; instead of a specific subwidget name.
For example, to specify the font &#8216;<samp class="samp">8x16</samp>&#8217; for all menu bar items,
including submenus, write this:
</p>
<div class="example smallexample">
<pre class="example-preformatted">Emacs.pane.menubar.*.fontList: 8x16
</pre></div>

<p>Each item in a submenu also has its own name for X resources; for
example, the &#8216;<samp class="samp">File</samp>&#8217; submenu has an item named &#8216;<samp class="samp">Save (current
buffer)</samp>&#8217;.  A resource specification for a submenu item looks like
this:
</p>
<div class="example smallexample">
<pre class="example-preformatted">Emacs.pane.menubar.popup_*.<var class="var">menu</var>.<var class="var">item</var>.<var class="var">resource</var>: <var class="var">value</var>
</pre></div>

<p>For example, here&#8217;s how to specify the font for the &#8216;<samp class="samp">Save (current
buffer)</samp>&#8217; item:
</p>
<div class="example smallexample">
<pre class="example-preformatted">Emacs.pane.menubar.popup_*.File.Save (current buffer).fontList: 8x16
</pre></div>

<p>For an item in a second-level submenu, such as &#8216;<samp class="samp">Complete Word</samp>&#8217;
under &#8216;<samp class="samp">Spell Checking</samp>&#8217; under &#8216;<samp class="samp">Tools</samp>&#8217;, the resource fits this
template:
</p>
<div class="example smallexample">
<pre class="example-preformatted">Emacs.pane.menubar.popup_*.popup_*.<var class="var">menu</var>.<var class="var">resource</var>: <var class="var">value</var>
</pre></div>

<p>For example,
</p>
<div class="example smallexample">
<pre class="example-preformatted">Emacs.pane.menubar.popup_*.popup_*.Spell Checking.Complete Word: <var class="var">value</var>
</pre></div>

<p>(This should be one long line.)
</p>
<p>If you want the submenu items to look different from the menu bar
itself, you must first specify the resource for all of them, then
override the value for submenus alone.  Here is an example:
</p>
<div class="example smallexample">
<pre class="example-preformatted">Emacs.pane.menubar.*.fontList: 9x18
Emacs.pane.menubar.popup_*.fontList: 8x16
</pre></div>

<p>To specify resources for the LessTif file-selection box, use
&#8216;<samp class="samp">fsb*</samp>&#8217;, like this:
</p>
<div class="example">
<pre class="example-preformatted">Emacs.fsb*.fontList: 8x16
</pre></div>

<p>Here is a list of resources for LessTif menu bars and pop-up menus:
</p>
<dl class="table">
<dt><code class="code">armColor</code></dt>
<dd><p>The color to show in an armed button.
</p></dd>
<dt><code class="code">fontList</code></dt>
<dd><p>The font to use.
</p></dd>
<dt><code class="code">marginBottom</code></dt>
<dt><code class="code">marginHeight</code></dt>
<dt><code class="code">marginLeft</code></dt>
<dt><code class="code">marginRight</code></dt>
<dt><code class="code">marginTop</code></dt>
<dt><code class="code">marginWidth</code></dt>
<dd><p>Amount of space to leave around the item, within the border.
</p></dd>
<dt><code class="code">borderWidth</code></dt>
<dd><p>The width of the border around the menu item, on all sides.
</p></dd>
<dt><code class="code">shadowThickness</code></dt>
<dd><p>The width of the border shadow.
</p></dd>
<dt><code class="code">bottomShadowColor</code></dt>
<dd><p>The color for the border shadow, on the bottom and the right.
</p></dd>
<dt><code class="code">topShadowColor</code></dt>
<dd><p>The color for the border shadow, on the top and the left.
</p></dd>
</dl>

</div>
<div class="appendixsec-level-extent" id="GTK-resources">
<h3 class="appendixsec" id="GTK_002b-resources">D.5 GTK+ resources</h3>
<a class="index-entry-id" id="index-GTK_002b-resources"></a>
<a class="index-entry-id" id="index-resource-files-for-GTK_002b"></a>
<a class="index-entry-id" id="index-_007e_002f_002egtkrc_002d2_002e0-file"></a>
<a class="index-entry-id" id="index-_007e_002f_002eemacs_002ed_002fgtkrc-file"></a>

<p>If Emacs is compiled with GTK+ toolkit support, the simplest way to
customize its GTK+ widgets (e.g., menus, dialogs, tool bars and
scroll bars) is to choose an appropriate GTK+ theme, for example with
the GNOME theme selector.
</p>
<p>In GTK+ version 2, you can also use <em class="dfn">GTK+ resources</em> to
customize the appearance of GTK+ widgets used by Emacs.  These
resources are specified in either the file <samp class="file">~/.emacs.d/gtkrc</samp>
(for Emacs-specific GTK+ resources), or <samp class="file">~/.gtkrc-2.0</samp> (for
general GTK+ resources).  We recommend using <samp class="file">~/.emacs.d/gtkrc</samp>,
since GTK+ seems to ignore <samp class="file">~/.gtkrc-2.0</samp> when running GConf with
GNOME.  Note, however, that some GTK+ themes may override
customizations in <samp class="file">~/.emacs.d/gtkrc</samp>; there is nothing we can do
about this.  GTK+ resources do not affect aspects of Emacs unrelated
to GTK+ widgets, such as fonts and colors in the main Emacs window;
those are governed by normal X resources (see <a class="pxref" href="#Resources">X Resources</a>).
</p>
<p>The following sections describe how to customize GTK+ resources for
Emacs.  For details about GTK+ resources, see the GTK+ API document at
<a class="uref" href="https://developer-old.gnome.org/gtk2/stable/gtk2-Resource-Files.html">https://developer-old.gnome.org/gtk2/stable/gtk2-Resource-Files.html</a>.
</p>
<p>In GTK+ version 3, GTK+ resources have been replaced by a completely
different system.  The appearance of GTK+ widgets is now determined by
CSS-like style files: <samp class="file">gtk-3.0/gtk.css</samp> in the GTK+ installation
directory, and <samp class="file">~/.themes/<var class="var">theme</var>/gtk-3.0/gtk.css</samp> for local
style settings (where <var class="var">theme</var> is the name of the current GTK+
theme).  Therefore, the description of GTK+ resources in this section
does not apply to GTK+ 3.  For details about the GTK+ 3 styling
system, see
<a class="uref" href="https://developer-old.gnome.org/gtk3/3.0/GtkCssProvider.html">https://developer-old.gnome.org/gtk3/3.0/GtkCssProvider.html</a>.
</p>

<div class="appendixsubsec-level-extent" id="GTK-Resource-Basics">
<h4 class="appendixsubsec" id="GTK_002b-Resource-Basics">D.5.1 GTK+ Resource Basics</h4>

<p>In a GTK+ 2 resource file (usually <samp class="file">~/.emacs.d/gtkrc</samp>), the
simplest kind of a resource setting simply assigns a value to a
variable.  For example, putting the following line in the resource
file changes the font on all GTK+ widgets to &#8216;<samp class="samp">courier-12</samp>&#8217;:
</p>
<div class="example smallexample">
<pre class="example-preformatted">gtk-font-name = &quot;courier 12&quot;
</pre></div>

<p>Note that in this case the font name must be supplied as a GTK font
pattern (also called a <em class="dfn">Pango font name</em>), not as a
Fontconfig-style font name or XLFD.  See <a class="xref" href="Frames.xhtml#Fonts">Fonts</a>.
</p>
<p>To customize widgets you first define a <em class="dfn">style</em>, and then apply
the style to the widgets.  Here is an example that sets the font for
menus (&#8216;<samp class="samp">#</samp>&#8217; characters indicate comments):
</p>
<div class="example smallexample">
<pre class="example-preformatted"># <span class="r">Define the style &#8216;<samp class="samp">my_style</samp>&#8217;.</span>
style &quot;my_style&quot;
{
  font_name = &quot;helvetica bold 14&quot;
}

# <span class="r">Specify that widget type &#8216;<samp class="samp">*emacs-menuitem*</samp>&#8217; uses &#8216;<samp class="samp">my_style</samp>&#8217;.</span>
widget &quot;*emacs-menuitem*&quot; style &quot;my_style&quot;
</pre></div>

<p>The widget name in this example contains wildcards, so the style is
applied to all widgets matching &#8216;<samp class="samp">*emacs-menuitem*</samp>&#8217;.  The widgets
are named by the way they are contained, from the outer widget to the
inner widget.  Here is another example that applies &#8216;<samp class="samp">my_style</samp>&#8217;
specifically to the Emacs menu bar:
</p>
<div class="example smallexample">
<pre class="example-preformatted">widget &quot;Emacs.pane.menubar.*&quot; style &quot;my_style&quot;
</pre></div>

<p>Here is a more elaborate example, showing how to change the parts of
the scroll bar:
</p>
<div class="example smallexample">
<pre class="example-preformatted">style &quot;scroll&quot;
{
  fg[NORMAL] = &quot;red&quot;&#160;&#160;&#160;&#160;&#160;# <span class="r">Arrow color.</span>
  bg[NORMAL] = &quot;yellow&quot;&#160;&#160;# <span class="r">Thumb and background around arrow.</span>
  bg[ACTIVE] = &quot;blue&quot;&#160;&#160;&#160;&#160;# <span class="r">Trough color.</span>
  bg[PRELIGHT] = &quot;white&quot;&#160;# <span class="r">Thumb color when the mouse is over it.</span>
}

widget &quot;*verticalScrollBar*&quot; style &quot;scroll&quot;
</pre></div>

</div>
<div class="appendixsubsec-level-extent" id="GTK-Widget-Names">
<h4 class="appendixsubsec" id="GTK_002b-widget-names">D.5.2 GTK+ widget names</h4>
<a class="index-entry-id" id="index-GTK_002b-widget-names"></a>

<p>A GTK+ widget is specified by a <em class="dfn">widget name</em> and a <em class="dfn">widget
class</em>.  The widget name refers to a specific widget
(e.g., &#8216;<samp class="samp">emacs-menuitem</samp>&#8217;), while the widget class refers to a
collection of similar widgets (e.g., &#8216;<samp class="samp">GtkMenuItem</samp>&#8217;).  A widget
always has a class, but need not have a name.
</p>
<p><em class="dfn">Absolute names</em> are sequences of widget names or widget
classes, corresponding to hierarchies of widgets embedded within
other widgets.  For example, if a <code class="code">GtkWindow</code> named <code class="code">top</code>
contains a <code class="code">GtkVBox</code> named <code class="code">box</code>, which in turn contains
a <code class="code">GtkMenuBar</code> called <code class="code">menubar</code>, the absolute class name
of the menu-bar widget is <code class="code">GtkWindow.GtkVBox.GtkMenuBar</code>, and
its absolute widget name is <code class="code">top.box.menubar</code>.
</p>
<p>GTK+ resource files can contain two types of commands for specifying
widget appearances:
</p>
<dl class="table">
<dt><code class="code">widget</code></dt>
<dd><p>specifies a style for widgets based on the class name, or just the
class.
</p>
</dd>
<dt><code class="code">widget_class</code></dt>
<dd><p>specifies a style for widgets based on the class name.
</p></dd>
</dl>

<p>See the previous subsection for examples of using the <code class="code">widget</code>
command; the <code class="code">widget_class</code> command is used similarly.  Note that
the widget name/class and the style must be enclosed in double-quotes,
and these commands must be at the top level in the GTK+ resource file.
</p>
<p>As previously noted, you may specify a widget name or class with
shell wildcard syntax: &#8216;<samp class="samp">*</samp>&#8217; matches zero or more characters and
&#8216;<samp class="samp">?</samp>&#8217; matches one character.  This example assigns a style to all
widgets:
</p>
<div class="example smallexample">
<pre class="example-preformatted">widget &quot;*&quot; style &quot;my_style&quot;
</pre></div>

</div>
<div class="appendixsubsec-level-extent" id="GTK-Names-in-Emacs">
<h4 class="appendixsubsec" id="GTK_002b-Widget-Names-in-Emacs">D.5.3 GTK+ Widget Names in Emacs</h4>
<a class="index-entry-id" id="index-GTK_002b-widget-names-in-Emacs"></a>
<a class="index-entry-id" id="index-GTK_002b-widget-classes"></a>

<p>The GTK+ widgets used by an Emacs frame are listed below:
</p>
<dl class="table">
<dt><code class="code">Emacs</code> (class <code class="code">GtkWindow</code>)</dt>
<dd><dl class="table">
<dt><code class="code">pane</code> (class <code class="code">GtkVBox</code>)</dt>
<dd><dl class="table">
<dt><code class="code">menubar</code> (class <code class="code">GtkMenuBar</code>)</dt>
<dd><dl class="table">
<dt>[menu item widgets]</dt>
</dl>
</dd>
<dt>[unnamed widget] (class <code class="code">GtkHandleBox</code>)</dt>
<dd><dl class="table">
<dt><code class="code">emacs-toolbar</code> (class <code class="code">GtkToolbar</code>)</dt>
<dd><dl class="table">
<dt>[tool bar item widgets]</dt>
</dl>
</dd>
</dl>
</dd>
<dt><code class="code">emacs</code> (class <code class="code">GtkFixed</code>)</dt>
<dd><dl class="table">
<dt><code class="code">verticalScrollBar</code> (class <code class="code">GtkVScrollbar</code>)</dt>
</dl>
</dd>
</dl>
</dd>
</dl>
</dd>
</dl>

<p>The contents of Emacs windows are drawn in the <code class="code">emacs</code> widget.
Note that even if there are multiple Emacs windows, each scroll bar
widget is named <code class="code">verticalScrollBar</code>.
</p>
<p>For example, here are two different ways to set the menu bar style:
</p>
<div class="example smallexample">
<pre class="example-preformatted">widget &quot;Emacs.pane.menubar.*&quot; style &quot;my_style&quot;
widget_class &quot;GtkWindow.GtkVBox.GtkMenuBar.*&quot; style &quot;my_style&quot;
</pre></div>

<p>For GTK+ dialogs, Emacs uses a widget named <code class="code">emacs-dialog</code>, of
class <code class="code">GtkDialog</code>.  For file selection, Emacs uses a widget named
<code class="code">emacs-filedialog</code>, of class <code class="code">GtkFileSelection</code>.
</p>
<p>Because the widgets for pop-up menus and dialogs are free-standing
windows and not contained in the <code class="code">Emacs</code> widget, their GTK+
absolute names do not start with &#8216;<samp class="samp">Emacs</samp>&#8217;.  To customize these
widgets, use wildcards like this:
</p>
<div class="example smallexample">
<pre class="example-preformatted">widget &quot;*emacs-dialog*&quot; style &quot;my_dialog_style&quot;
widget &quot;*emacs-filedialog* style &quot;my_file_style&quot;
widget &quot;*emacs-menuitem* style &quot;my_menu_style&quot;
</pre></div>

<p>If you want to apply a style to all menus in Emacs, use this:
</p>
<div class="example smallexample">
<pre class="example-preformatted">widget_class &quot;*Menu*&quot; style &quot;my_menu_style&quot;
</pre></div>

</div>
<div class="appendixsubsec-level-extent" id="GTK-styles">
<h4 class="appendixsubsec" id="GTK_002b-styles">D.5.4 GTK+ styles</h4>
<a class="index-entry-id" id="index-GTK_002b-styles"></a>

<p>Here is an example of two GTK+ style declarations:
</p>
<div class="example smallexample">
<pre class="example-preformatted">pixmap_path &quot;/usr/share/pixmaps:/usr/include/X11/pixmaps&quot;

style &quot;default&quot;
{
  font_name = &quot;helvetica 12&quot;

  bg[NORMAL] = { 0.83, 0.80, 0.73 }
  bg[SELECTED] = { 0.0, 0.55, 0.55 }
  bg[INSENSITIVE] = { 0.77, 0.77, 0.66 }
  bg[ACTIVE] = { 0.0, 0.55, 0.55 }
  bg[PRELIGHT] = { 0.0, 0.55, 0.55 }

  fg[NORMAL] = &quot;black&quot;
  fg[SELECTED] = { 0.9, 0.9, 0.9 }
  fg[ACTIVE] = &quot;black&quot;
  fg[PRELIGHT] = { 0.9, 0.9, 0.9 }

  base[INSENSITIVE] = &quot;#777766&quot;
  text[INSENSITIVE] = { 0.60, 0.65, 0.57 }

  bg_pixmap[NORMAL] = &quot;background.xpm&quot;
  bg_pixmap[INSENSITIVE] = &quot;background.xpm&quot;
  bg_pixmap[ACTIVE] = &quot;background.xpm&quot;
  bg_pixmap[PRELIGHT] = &quot;&lt;none&gt;&quot;

}

style &quot;ruler&quot; = &quot;default&quot;
{
  font_name = &quot;helvetica 8&quot;
}

</pre></div>

<p>The style &#8216;<samp class="samp">ruler</samp>&#8217; inherits from &#8216;<samp class="samp">default</samp>&#8217;.  This way you can build
on existing styles.  The syntax for fonts and colors is described below.
</p>
<p>As this example shows, it is possible to specify several values for
foreground and background depending on the widget&#8217;s <em class="dfn">state</em>.  The
possible states are:
</p>
<dl class="table">
<dt><code class="code">NORMAL</code></dt>
<dd><p>This is the default state for widgets.
</p>
</dd>
<dt><code class="code">ACTIVE</code></dt>
<dd><p>This is the state for a widget that is ready to do something.  It is
also for the trough of a scroll bar, i.e., <code class="code">bg[ACTIVE] = &quot;red&quot;</code>
sets the scroll bar trough to red.  Buttons that have been armed
(pressed but not released yet) are in this state.
</p>
</dd>
<dt><code class="code">PRELIGHT</code></dt>
<dd><p>This is the state for a widget that can be manipulated, when the mouse
pointer is over it&#8212;for example when the mouse is over the thumb in
the scroll bar or over a menu item.  When the mouse is over a button
that is not pressed, the button is in this state.
</p>
</dd>
<dt><code class="code">SELECTED</code></dt>
<dd><p>This is the state for data that has been selected by the user.  It can
be selected text or items selected in a list.  This state is not used
in Emacs.
</p>
</dd>
<dt><code class="code">INSENSITIVE</code></dt>
<dd><p>This is the state for widgets that are visible, but they cannot be
manipulated in the usual way&#8212;for example, buttons that can&#8217;t be
pressed, and disabled menu items.  To display disabled menu items in
yellow, use <code class="code">fg[INSENSITIVE] = &quot;yellow&quot;</code>.
</p></dd>
</dl>

<p>Here are the things that can go in a style declaration:
</p>
<dl class="table">
<dt><code class="code">bg[<var class="var">state</var>] = <var class="var">color</var></code></dt>
<dd><p>This specifies the background color for the widget.  Note that
editable text doesn&#8217;t use <code class="code">bg</code>; it uses <code class="code">base</code> instead.
</p>
</dd>
<dt><code class="code">base[<var class="var">state</var>] = <var class="var">color</var></code></dt>
<dd><p>This specifies the background color for editable text.  In Emacs, this
color is used for the background of the text fields in the file
dialog.
</p>
</dd>
<dt><code class="code">bg_pixmap[<var class="var">state</var>] = &quot;<var class="var">pixmap</var>&quot;</code></dt>
<dd><p>This specifies an image background (instead of a background color).
<var class="var">pixmap</var> should be the image file name.  GTK+ can use a number of
image file formats, including XPM, XBM, GIF, JPEG and PNG.  If you
want a widget to use the same image as its parent, use
&#8216;<samp class="samp">&lt;parent&gt;</samp>&#8217;.  If you don&#8217;t want any image, use &#8216;<samp class="samp">&lt;none&gt;</samp>&#8217;.
&#8216;<samp class="samp">&lt;none&gt;</samp>&#8217; is the way to cancel a background image inherited from a
parent style.
</p>
<p>You can&#8217;t specify the file by its absolute file name.  GTK+ looks for
the pixmap file in directories specified in <code class="code">pixmap_path</code>.
<code class="code">pixmap_path</code> is a colon-separated list of directories within
double quotes, specified at the top level in a <samp class="file">gtkrc</samp> file
(i.e., not inside a style definition; see example above):
</p>
<div class="example smallexample">
<pre class="example-preformatted">pixmap_path &quot;/usr/share/pixmaps:/usr/include/X11/pixmaps&quot;
</pre></div>

</dd>
<dt><code class="code">fg[<var class="var">state</var>] = <var class="var">color</var></code></dt>
<dd><p>This specifies the foreground color for widgets to use.  It is the
color of text in menus and buttons, and the color for the arrows in
the scroll bar.  For editable text, use <code class="code">text</code>.
</p>
</dd>
<dt><code class="code">text[<var class="var">state</var>] = <var class="var">color</var></code></dt>
<dd><p>This is the color for editable text.  In Emacs, this color is used for the
text fields in the file dialog.
</p>
</dd>
<dt><code class="code">font_name = &quot;<var class="var">font</var>&quot;</code></dt>
<dd><p>This specifies the font for text in the widget.  <var class="var">font</var> is a
GTK-style (or Pango) font name, like &#8216;<samp class="samp">Sans Italic 10</samp>&#8217;.
See <a class="xref" href="Frames.xhtml#Fonts">Fonts</a>.  The names are case insensitive.
</p></dd>
</dl>

<p>There are three ways to specify a color: a color name, an RGB
triplet, or a GTK-style RGB triplet.  See <a class="xref" href="Display.xhtml#Colors">Colors for Faces</a>, for a description
of color names and RGB triplets.  Color names should be enclosed with
double quotes, e.g., &#8216;<samp class="samp">&quot;red&quot;</samp>&#8217;.  RGB triplets should be written
without double quotes, e.g., &#8216;<samp class="samp">#ff0000</samp>&#8217;.  GTK-style RGB triplets
have the form <code class="code">{&#160;<var class="var">r</var>,&#160;<var class="var">g</var>,&#160;<var class="var">b</var>&#160;}</code><!-- /@w -->, where
<var class="var">r</var>, <var class="var">g</var> and <var class="var">b</var> are either integers in the range 0&#8211;65535
or floats in the range 0.0&#8211;1.0.
</p>

</div>
</div>
</div>



</body>
</html>
