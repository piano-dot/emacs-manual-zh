<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<!-- Created by GNU Texinfo 7.1, https://www.gnu.org/software/texinfo/ -->
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<!-- 这是 GNU Emacs 手册,
为 Emacs  29.2 更新

英文原版版权提示 - Original English version copyright note

Copyright © 1985-2024 Free Software Foundation, Inc.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "The GNU Manifesto," "Distribution" and
"GNU GENERAL PUBLIC LICENSE," with the Front-Cover Texts being "A GNU
Manual," and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled "GNU Free Documentation
License."

(a) The FSF's Back-Cover Text is: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."

中文翻译版版权提示 - Chinese translation revision copyright notice

版权所有 © 1985-2024 林羿轩(Ralph Lin).

您有在 Free Software Foundation发布的GNU Free Documentation License 第1.3版或之后版本的约束下对其进行再发布及修的权利。 恒定章节为 "The GNU Manifesto," "分发" "(中文版)GNU GENERAL PUBLIC LICENSE" 和
"GNU GENERAL PUBLIC LICENSE" , 前封面文字为 "A GNU
Manual,"后封面文字如下(a).  本书的FDL许可证可以在 "GNU Free Documentation
License."找到.

(a) FSF的后封面文字为: "You have the freedom to copy and
modify this GNU manual.  Buying copies from the FSF supports it in
developing GNU and promoting software freedom."
 -->
<title>17 Commands for Fixing Typos (GNU Emacs Manual)</title>

<meta name="description" content="17 Commands for Fixing Typos (GNU Emacs Manual)"/>
<meta name="keywords" content="17 Commands for Fixing Typos (GNU Emacs Manual)"/>
<meta name="resource-type" content="document"/>
<meta name="distribution" content="global"/>
<meta name="Generator" content="texi2any"/>
<meta name="viewport" content="width=device-width,initial-scale=1"/>

<link href="emacs.xhtml" rel="start" title="Emacs 编辑器"/>
<link href="Key-Index.xhtml" rel="index" title="Key (Character) Index"/>
<link href="emacs.xhtml#SEC_Contents" rel="contents" title="Table of Contents"/>
<link href="emacs.xhtml" rel="up" title="Emacs 编辑器"/>
<link href="Keyboard-Macros.xhtml#Keyboard-Macros" rel="next" title="18 Keyboard Macros"/>
<link href="Search.xhtml#Search" rel="prev" title="16 Searching and Replacement"/>
<style type="text/css">
<!--
kbd.kbd {font-style: oblique}
kbd.key {font-style: normal}
-->
</style>


</head>

<body lang="zh_CN">
<div class="chapter-level-extent" id="Fixit">

<h2 class="chapter" id="Commands-for-Fixing-Typos">17 Commands for Fixing Typos</h2>
<a class="index-entry-id" id="index-typos_002c-fixing"></a>
<a class="index-entry-id" id="index-mistakes_002c-correcting"></a>

<p>In this chapter we describe commands that are useful when you catch
a mistake while editing.  The most fundamental of these commands is
the undo command <kbd class="kbd">C-/</kbd> (also bound to <kbd class="kbd">C-x u</kbd> and <kbd class="kbd">C-_</kbd>).
This undoes a single command, or a
part of a command (as in the case of <code class="code">query-replace</code>), or several
consecutive character insertions.  Consecutive repetitions of
<kbd class="kbd">C-/</kbd> undo earlier and earlier changes, back to the limit of the
undo information available.
</p>
<p>Aside from the commands described here, you can erase text using
deletion commands such as <kbd class="key">DEL</kbd> (<code class="code">delete-backward-char</code>).
These were described earlier in this manual.  See <a class="xref" href="Basic.xhtml#Erasing">Erasing Text</a>.
</p>

<div class="section-level-extent" id="Undo">
<h3 class="section" id="Undo-1">17.1 Undo</h3>
<a class="index-entry-id" id="index-undo"></a>
<a class="index-entry-id" id="index-changes_002c-undoing"></a>

<p>The <em class="dfn">undo</em> command reverses recent changes in the buffer&#8217;s text.
Each buffer records changes individually, and the undo command always
applies to the current buffer.  You can undo all the changes in a
buffer for as far back as the buffer&#8217;s records go.  Usually, each editing
command makes a separate entry in the undo records, but some commands
such as <code class="code">query-replace</code> divide their changes into multiple
entries for flexibility in undoing.  Consecutive character insertion
commands are usually grouped together into a single undo record, to
make undoing less tedious.
</p>
<dl class="table">
<dt><kbd class="kbd">C-/</kbd></dt>
<dt><kbd class="kbd">C-x u</kbd></dt>
<dt><kbd class="kbd">C-_</kbd></dt>
<dd><p>Undo one entry in the current buffer&#8217;s undo records (<code class="code">undo</code>).
</p></dd>
</dl>

<a class="index-entry-id" id="index-C_002dx-u"></a>
<a class="index-entry-id" id="index-C_002d_005f"></a>
<a class="index-entry-id" id="index-C_002d_002f"></a>
<a class="index-entry-id" id="index-undo-1"></a>
<p>To begin to undo, type <kbd class="kbd">C-/</kbd> (or its aliases, <kbd class="kbd">C-_</kbd> or
<kbd class="kbd">C-x u</kbd>)<a class="footnote" id="DOCF5" href="#FOOT5"><sup>5</sup></a>.  This undoes the most recent change in the buffer,
and moves point back to where it was before that change.
  Consecutive repetitions of <kbd class="kbd">C-/</kbd> (or its aliases) undo earlier
and earlier changes in the current buffer.  If all the recorded
changes have already been undone, the undo command signals an error.
</p>
<a class="index-entry-id" id="index-redo"></a>
<a class="index-entry-id" id="index-undo_002donly"></a>
<a class="index-entry-id" id="index-undo_002dredo"></a>
<p>Any command other than an undo command breaks the sequence of undo
commands.  Starting from that moment, the entire sequence of undo
commands that you have just performed are themselves placed into the
undo record.  Therefore, to re-apply changes you have undone, type
<kbd class="kbd">C-f</kbd> or any other command that harmlessly breaks the sequence of
undoing; then type <kbd class="kbd">C-/</kbd> one or more times to undo some of the
undo commands.
</p>
<p>Alternatively, if you want to resume undoing, without redoing
previous undo commands, use <kbd class="kbd">M-x undo-only</kbd>.  This is like
<code class="code">undo</code>, but will not redo changes you have just undone.  To
complement it, <kbd class="kbd">M-x undo-redo</kbd> will undo previous undo commands
(and will not record itself as an undoable command).
</p>
<p>If you notice that a buffer has been modified accidentally, the
easiest way to recover is to type <kbd class="kbd">C-/</kbd> repeatedly until the stars
disappear from the front of the mode line (see <a class="pxref" href="Screen.xhtml#Mode-Line">The Mode Line</a>).
Whenever an undo command makes the stars disappear from the mode line,
it means that the buffer contents are the same as they were when the
file was last read in or saved.  If you do not remember whether you
changed the buffer deliberately, type <kbd class="kbd">C-/</kbd> once.  When you see
the last change you made undone, you will see whether it was an
intentional change.  If it was an accident, leave it undone.  If it
was deliberate, redo the change as described above.
</p>
<p>Alternatively, you can discard all the changes since the buffer was
last visited or saved with <kbd class="kbd">M-x revert-buffer</kbd>
(see <a class="pxref" href="Files.xhtml#Reverting">Reverting a Buffer</a>).
</p>
<a class="index-entry-id" id="index-selective-undo"></a>
<a class="index-entry-id" id="index-C_002du-C_002d_002f"></a>
<p>When there is an active region, any use of <code class="code">undo</code> performs
<em class="dfn">selective undo</em>: it undoes the most recent change within the
region, instead of the entire buffer.  However, when Transient Mark
mode is off (see <a class="pxref" href="Mark.xhtml#Disabled-Transient-Mark">Disabling Transient Mark Mode</a>), <kbd class="kbd">C-/</kbd> always
operates on the entire buffer, ignoring the region.  In this case, you
can perform selective undo by supplying a prefix argument to the
<code class="code">undo</code> command: <kbd class="kbd">C-u C-/</kbd>.  To undo further changes in the
same region, repeat the <code class="code">undo</code> command (no prefix argument is
needed).
</p>
<p>Some specialized buffers do not make undo records.  Buffers whose
names start with spaces never do; these buffers are used internally by
Emacs to hold text that users don&#8217;t normally look at or edit.
</p>
<a class="index-entry-id" id="index-undo_002dlimit"></a>
<a class="index-entry-id" id="index-undo_002dstrong_002dlimit"></a>
<a class="index-entry-id" id="index-undo_002douter_002dlimit"></a>
<a class="index-entry-id" id="index-undo-limit"></a>
<p>When the undo information for a buffer becomes too large, Emacs discards
the oldest records from time to time (during <em class="dfn">garbage
collection</em>).  You can specify how much undo information to keep by
setting the variables <code class="code">undo-limit</code>, <code class="code">undo-strong-limit</code>, and
<code class="code">undo-outer-limit</code>.  Their values are expressed in bytes.
</p>
<p>The variable <code class="code">undo-limit</code> sets a soft limit: Emacs keeps undo
data for enough commands to reach this size, and perhaps exceed it,
but does not keep data for any earlier commands beyond that.  Its
default value is 160000.  The variable <code class="code">undo-strong-limit</code> sets a
stricter limit: any previous command (though not the most recent one)
that pushes the size past this amount is forgotten.  The default value
of <code class="code">undo-strong-limit</code> is 240000.
</p>
<p>Regardless of the values of those variables, the most recent change
is never discarded unless it gets bigger than <code class="code">undo-outer-limit</code>
(normally 24,000,000).  At that point, Emacs discards the undo data and
warns you about it.  This is the only situation in which you cannot
undo the last command.  If this happens, you can increase the value of
<code class="code">undo-outer-limit</code> to make it even less likely to happen in the
future.  But if you didn&#8217;t expect the command to create such large
undo data, then it is probably a bug and you should report it.
See <a class="xref" href="Bugs.xhtml#Bugs">Reporting Bugs</a>.
</p>
</div>
<div class="section-level-extent" id="Transpose">
<h3 class="section" id="Transposing-Text">17.2 Transposing Text</h3>

<dl class="table">
<dt><kbd class="kbd">C-t</kbd></dt>
<dd><p>Transpose two characters (<code class="code">transpose-chars</code>).
</p></dd>
<dt><kbd class="kbd">M-t</kbd></dt>
<dd><p>Transpose two words (<code class="code">transpose-words</code>).
</p></dd>
<dt><kbd class="kbd">C-M-t</kbd></dt>
<dd><p>Transpose two balanced expressions (<code class="code">transpose-sexps</code>).
</p></dd>
<dt><kbd class="kbd">C-x C-t</kbd></dt>
<dd><p>Transpose two lines (<code class="code">transpose-lines</code>).
</p></dd>
<dt><kbd class="kbd">M-x transpose-sentences</kbd></dt>
<dd><p>Transpose two sentences (<code class="code">transpose-sentences</code>).
</p></dd>
<dt><kbd class="kbd">M-x transpose-paragraphs</kbd></dt>
<dd><p>Transpose two paragraphs (<code class="code">transpose-paragraphs</code>).
</p></dd>
<dt><kbd class="kbd">M-x transpose-regions</kbd></dt>
<dd><p>Transpose two regions.
</p></dd>
</dl>

<a class="index-entry-id" id="index-C_002dt"></a>
<a class="index-entry-id" id="index-transpose_002dchars"></a>
<p>The common error of transposing two characters can be fixed, when they
are adjacent, with the <kbd class="kbd">C-t</kbd> command (<code class="code">transpose-chars</code>).  Normally,
<kbd class="kbd">C-t</kbd> transposes the two characters on either side of point.  When
given at the end of a line, rather than transposing the last character of
the line with the newline, which would be useless, <kbd class="kbd">C-t</kbd> transposes the
last two characters on the line.  So, if you catch your transposition error
right away, you can fix it with just a <kbd class="kbd">C-t</kbd>.  If you don&#8217;t catch it so
fast, you must move the cursor back between the two transposed
characters before you type <kbd class="kbd">C-t</kbd>.  If you transposed a space with
the last character of the word before it, the word motion commands
(<kbd class="kbd">M-f</kbd>, <kbd class="kbd">M-b</kbd>, etc.) are a good way of getting there.
Otherwise, a reverse search (<kbd class="kbd">C-r</kbd>) is often the best way.
See <a class="xref" href="Search.xhtml#Search">Searching and Replacement</a>.
</p>
<a class="index-entry-id" id="index-C_002dx-C_002dt"></a>
<a class="index-entry-id" id="index-transpose_002dlines"></a>
<a class="index-entry-id" id="index-M_002dt"></a>
<a class="index-entry-id" id="index-transpose_002dwords"></a>
<p><kbd class="kbd">M-t</kbd> transposes the word before point with the word after point
(<code class="code">transpose-words</code>).  It moves point forward over a word,
dragging the word preceding or containing point forward as well.  The
punctuation characters between the words do not move.  For example,
&#8216;<samp class="samp">FOO,&#160;BAR</samp>&#8217;<!-- /@w --> transposes into &#8216;<samp class="samp">BAR,&#160;FOO</samp>&#8217;<!-- /@w --> rather than
&#8216;<samp class="samp">BAR&#160;FOO,</samp>&#8217;<!-- /@w -->.  When point is at the end of the line, it will
transpose the word before point with the first word on the next line.
</p>
<a class="index-entry-id" id="index-transpose_002dsentences"></a>
<a class="index-entry-id" id="index-transpose_002dparagraphs"></a>
<p><kbd class="kbd">C-M-t</kbd> (<code class="code">transpose-sexps</code>) is a similar command for
transposing two expressions (see <a class="pxref" href="Programs.xhtml#Expressions">Expressions with Balanced Parentheses</a>), and <kbd class="kbd">C-x C-t</kbd>
(<code class="code">transpose-lines</code>) exchanges lines.  <kbd class="kbd">M-x
transpose-sentences</kbd> and <kbd class="kbd">M-x transpose-paragraphs</kbd> transpose
sentences and paragraphs, respectively.  These commands work like
<kbd class="kbd">M-t</kbd> except as regards the units of text they transpose.
</p>
<p>A numeric argument to a transpose command serves as a repeat count: it
tells the transpose command to move the character (or word or
expression or line) before or containing point across several other
characters (or words or expressions or lines).  For example, <kbd class="kbd">C-u&#160;3&#160;C-t</kbd><!-- /@w --> moves the character before point forward across three other
characters.  It would change &#8216;<samp class="samp">f&#8902;oobar</samp>&#8217; into
&#8216;<samp class="samp">oobf&#8902;ar</samp>&#8217;.  This is equivalent to repeating <kbd class="kbd">C-t</kbd>
three times.  <kbd class="kbd">C-u - 4 M-t</kbd> moves the word before point backward
across four words.  <kbd class="kbd">C-u - C-M-t</kbd> would cancel the effect of plain
<kbd class="kbd">C-M-t</kbd>.
</p>
<p>A numeric argument of zero is assigned a special meaning (because
otherwise a command with a repeat count of zero would do nothing): to
transpose the character (or word or expression or line) ending after
point with the one ending after the mark.
</p>
<a class="index-entry-id" id="index-transpose_002dregions"></a>
<p><kbd class="kbd">M-x transpose-regions</kbd> transposes the text between point and
mark with the text between the last two marks pushed to the mark ring
(see <a class="pxref" href="Mark.xhtml#Setting-Mark">Setting the Mark</a>).  With a numeric prefix argument, it transposes
the text between point and mark with the text between two successive
marks that many entries back in the mark ring.  This command is best
used for transposing multiple characters (or words or sentences or
paragraphs) in one go.
</p>
</div>
<div class="section-level-extent" id="Fixing-Case">
<h3 class="section" id="Case-Conversion">17.3 Case Conversion</h3>

<dl class="table">
<dt><kbd class="kbd">M-- M-l</kbd></dt>
<dd><p>Convert last word to lower case.  Note <kbd class="kbd">Meta--</kbd> is Meta-minus.
</p></dd>
<dt><kbd class="kbd">M-- M-u</kbd></dt>
<dd><p>Convert last word to all upper case.
</p></dd>
<dt><kbd class="kbd">M-- M-c</kbd></dt>
<dd><p>Convert last word to lower case with capital initial.
</p></dd>
</dl>

<a class="index-entry-id" id="index-M_002d_002d-M_002dl"></a>
<a class="index-entry-id" id="index-M_002d_002d-M_002du"></a>
<a class="index-entry-id" id="index-M_002d_002d-M_002dc"></a>
<p>A very common error is to type words in the wrong case.  Because of this,
the word case-conversion commands <kbd class="kbd">M-l</kbd>, <kbd class="kbd">M-u</kbd>, and <kbd class="kbd">M-c</kbd> have a
special feature when used with a negative argument: they do not move the
cursor.  As soon as you see you have mistyped the last word, you can simply
case-convert it and go on typing.  See <a class="xref" href="Text.xhtml#Case">Case Conversion Commands</a>.
</p>
</div>
<div class="section-level-extent" id="Spelling">
<h3 class="section" id="Checking-and-Correcting-Spelling">17.4 Checking and Correcting Spelling</h3>
<a class="index-entry-id" id="index-spelling_002c-checking-and-correcting"></a>
<a class="index-entry-id" id="index-checking-spelling"></a>
<a class="index-entry-id" id="index-correcting-spelling"></a>

<p>This section describes the commands to check the spelling of a
single word or of a portion of a buffer.  These commands only work if
a spelling checker program, one of Hunspell, Aspell, Ispell or
Enchant, is installed.  These programs are not part of Emacs, but one
of them is usually installed on GNU/Linux and other free operating
systems.
See <a href="http://aspell.net/man-html/index.html/index.html#Top">Aspell</a> in <cite class="cite">The Aspell Manual</cite>.
</p>
<a class="index-entry-id" id="index-ispell_002dprogram_002dname"></a>
<p>If you have only one of the spelling checker programs installed,
Emacs will find it when you invoke for the first time one of the
commands described here.  If you have more than one of them installed,
you can control which one is used by customizing the variable
<code class="code">ispell-program-name</code>.
</p>
<dl class="table">
<dt><kbd class="kbd">M-$</kbd></dt>
<dd><p>Check and correct spelling of the word at point (<code class="code">ispell-word</code>).
If the region is active, do it for all words in the region instead.
</p></dd>
<dt><kbd class="kbd">C-u M-$</kbd></dt>
<dd><p>If a previous spelling operation was interrupted, continue that
operation (<code class="code">ispell-continue</code>).
</p></dd>
<dt><kbd class="kbd">M-x ispell</kbd></dt>
<dd><p>Check and correct spelling of all words in the buffer.  If the region
is active, do it for all words in the region instead.
</p></dd>
<dt><kbd class="kbd">M-x ispell-buffer</kbd></dt>
<dd><p>Check and correct spelling in the buffer.
</p></dd>
<dt><kbd class="kbd">M-x ispell-region</kbd></dt>
<dd><p>Check and correct spelling in the region.
</p></dd>
<dt><kbd class="kbd">M-x ispell-message</kbd></dt>
<dd><p>Check and correct spelling in a draft mail message, excluding cited
material.
</p></dd>
<dt><kbd class="kbd">M-x ispell-comments-and-strings</kbd></dt>
<dd><p>Check and correct spelling of comments and strings in the buffer or region.
</p></dd>
<dt><kbd class="kbd">M-x ispell-comment-or-string-at-point</kbd></dt>
<dd><p>Check the comment or string at point.
</p></dd>
<dt><kbd class="kbd">M-x ispell-change-dictionary <kbd class="key">RET</kbd> <var class="var">dict</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Restart the spell-checker process, using <var class="var">dict</var> as the dictionary.
</p></dd>
<dt><kbd class="kbd">M-x ispell-kill-ispell</kbd></dt>
<dd><p>Kill the spell-checker subprocess.
</p></dd>
<dt><kbd class="kbd">M-<kbd class="key">TAB</kbd></kbd></dt>
<dt><kbd class="kbd"><kbd class="key">ESC</kbd> <kbd class="key">TAB</kbd></kbd></dt>
<dt><kbd class="kbd">C-M-i</kbd></dt>
<dd><p>Complete the word before point based on the spelling dictionary
(<code class="code">ispell-complete-word</code>).
</p></dd>
<dt><kbd class="kbd">M-x flyspell-mode</kbd></dt>
<dd><p>Enable Flyspell mode, which highlights all misspelled words.
</p></dd>
<dt><kbd class="kbd">M-x flyspell-prog-mode</kbd></dt>
<dd><p>Enable Flyspell mode for comments and strings only.
</p></dd>
</dl>

<a class="index-entry-id" id="index-M_002d_0024"></a>
<a class="index-entry-id" id="index-ispell_002dword"></a>
<a class="index-entry-id" id="index-ispell_002dcontinue"></a>
<p>To check the spelling of the word around or before point, and
optionally correct it as well, type <kbd class="kbd">M-$</kbd> (<code class="code">ispell-word</code>).
If a region is active, <kbd class="kbd">M-$</kbd> checks the spelling of all words
within the region.  See <a class="xref" href="Mark.xhtml#Mark">The Mark and the Region</a>.  (When Transient Mark mode is off,
<kbd class="kbd">M-$</kbd> always acts on the word around or before point, ignoring the
region; see <a class="pxref" href="Mark.xhtml#Disabled-Transient-Mark">Disabling Transient Mark Mode</a>.)  When invoked with a prefix
argument, <kbd class="kbd">C-u M-$</kbd>, this calls <code class="code">ispell-continue</code>, which
continues the spelling operation, if any, which was interrupted with
<kbd class="kbd">X</kbd> or <kbd class="kbd">C-g</kbd>.
</p>
<a class="index-entry-id" id="index-ispell"></a>
<a class="index-entry-id" id="index-ispell_002dbuffer"></a>
<a class="index-entry-id" id="index-ispell_002dregion"></a>
<a class="index-entry-id" id="index-ispell_002dcomments_002dand_002dstrings"></a>
<a class="index-entry-id" id="index-ispell_002dcomment_002dor_002dstring_002dat_002dpoint"></a>
<a class="index-entry-id" id="index-spell_002dchecking-the-active-region"></a>
<p>Similarly, the command <kbd class="kbd">M-x ispell</kbd> performs spell-checking in
the region if one is active, or in the entire buffer otherwise.  The
commands <kbd class="kbd">M-x&#160;ispell-buffer</kbd><!-- /@w --> and <kbd class="kbd">M-x&#160;ispell-region</kbd><!-- /@w -->
explicitly perform spell-checking on the entire buffer or the region
respectively.  To check spelling in an email message you are writing,
use <kbd class="kbd">M-x&#160;ispell-message</kbd><!-- /@w -->; that command checks the whole buffer,
except for material that is indented or appears to be cited from other
messages.  See <a class="xref" href="Sending-Mail.xhtml#Sending-Mail">Sending Mail</a>.  When dealing with source code, you
can use <kbd class="kbd">M-x ispell-comments-and-strings</kbd> or <kbd class="kbd">M-x&#160;ispell-comment-or-string-at-point</kbd><!-- /@w --> to check only comments or string
literals.
</p>
<p>When one of these commands encounters what appears to be an
incorrect word, it asks you what to do.  It usually displays a list of
numbered <em class="dfn">near-misses</em>&#8212;words that are close to the incorrect word.
Then you must type a single-character response.  Here are the valid
responses:
</p>
<dl class="table">
<dt><kbd class="kbd"><var class="var">digit</var></kbd></dt>
<dd><p>Replace the word, just this time, with one of the displayed
near-misses.  Each near-miss is listed with a digit; type that digit
to select it.
</p>
</dd>
<dt><kbd class="kbd"><kbd class="key">SPC</kbd></kbd></dt>
<dd><p>Skip this word&#8212;continue to consider it incorrect, but don&#8217;t change it
here.
</p>
</dd>
<dt><kbd class="kbd">r <var class="var">new</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Replace the word, just this time, with <var class="var">new</var>.  (The replacement
string will be rescanned for more spelling errors.)
</p>
</dd>
<dt><kbd class="kbd">R <var class="var">new</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Replace the word with <var class="var">new</var>, and do a <code class="code">query-replace</code> so you
can replace it elsewhere in the buffer if you wish.  (The replacements
will be rescanned for more spelling errors.)
</p>
</dd>
<dt><kbd class="kbd">a</kbd></dt>
<dd><p>Accept the incorrect word&#8212;treat it as correct, but only in this
editing session.
</p>
</dd>
<dt><kbd class="kbd">A</kbd></dt>
<dd><p>Accept the incorrect word&#8212;treat it as correct, but only in this
editing session and for this buffer.
</p>
</dd>
<dt><kbd class="kbd">i</kbd></dt>
<dd><p>Insert this word in your private dictionary file so that it will be
considered correct from now on, even in future sessions.
</p>
</dd>
<dt><kbd class="kbd">m</kbd></dt>
<dd><p>Like <kbd class="kbd">i</kbd>, but you can also specify dictionary completion
information.
</p>
</dd>
<dt><kbd class="kbd">u</kbd></dt>
<dd><p>Insert the lower-case version of this word in your private dictionary
file.
</p>
</dd>
<dt><kbd class="kbd">l <var class="var">word</var> <kbd class="key">RET</kbd></kbd></dt>
<dd><p>Look in the dictionary for words that match <var class="var">word</var>.  These words
become the new list of near-misses; you can select one of them as
the replacement by typing a digit.  You can use &#8216;<samp class="samp">*</samp>&#8217; in <var class="var">word</var> as a
wildcard.
</p>
</dd>
<dt><kbd class="kbd">C-g</kbd></dt>
<dt><kbd class="kbd">X</kbd></dt>
<dd><p>Interrupt the interactive spell-checking, leaving point at the word
that was being checked.  You can restart checking again afterward with
<kbd class="kbd">C-u&#160;M-$</kbd><!-- /@w -->.
</p>
</dd>
<dt><kbd class="kbd">x</kbd></dt>
<dd><p>Quit interactive spell-checking and move point back to where it was
when you started spell-checking.
</p>
</dd>
<dt><kbd class="kbd">q</kbd></dt>
<dd><p>Quit interactive spell-checking and kill the spell-checker subprocess.
</p>
</dd>
<dt><kbd class="kbd">C-r</kbd></dt>
<dd><p>Enter recursive-edit (see <a class="pxref" href="Recursive-Edit.xhtml">Recursive Editing Levels</a>).  When you exit
recursive-edit with <kbd class="kbd">C-M-c</kbd>, the interactive spell-checking will
resume.  This allows you to consult the buffer text without
interrupting the spell-checking.  Do <em class="emph">not</em> modify the buffer in
the recursive editing, and especially don&#8217;t modify the misspelled
word, as the edits will be undone when you exit recursive-edit.  If
you need to edit the misspelled word, use <kbd class="kbd">r</kbd> or <kbd class="kbd">R</kbd> instead,
or use <kbd class="kbd">X</kbd>, edit the buffer, then resume with <kbd class="kbd">C-u&#160;M-$</kbd><!-- /@w -->.
</p>
</dd>
<dt><kbd class="kbd">C-z</kbd></dt>
<dd><p>Suspend Emacs or iconify the selected frame.
</p>
</dd>
<dt><kbd class="kbd">?</kbd></dt>
<dd><p>Show the list of options.
</p></dd>
</dl>

<a class="index-entry-id" id="index-ispell_002dcomplete_002dword"></a>
<p>In Text mode and related modes, <kbd class="kbd">M-<kbd class="key">TAB</kbd></kbd>
(<code class="code">ispell-complete-word</code>) performs in-buffer completion based on
spelling correction.  Insert the beginning of a word, and then type
<kbd class="kbd">M-<kbd class="key">TAB</kbd></kbd>; this shows a list of completions.  (If your
window manager intercepts <kbd class="kbd">M-<kbd class="key">TAB</kbd></kbd>, type <kbd class="kbd"><kbd class="key">ESC</kbd>&#160;<kbd class="key">TAB</kbd></kbd><!-- /@w --> or <kbd class="kbd">C-M-i</kbd>.)  Each completion is listed with a digit or
character; type that digit or character to choose it.
</p>
<a class="index-entry-id" id="index-ispell-program"></a>
<a class="index-entry-id" id="index-ispell_002dkill_002dispell"></a>
<p>Once started, the spell-checker subprocess continues
to run, waiting for something to do, so that subsequent spell-checking
commands complete more quickly.  If you want to get rid of the
process, use <kbd class="kbd">M-x&#160;ispell-kill-ispell</kbd><!-- /@w -->.  This is not usually
necessary, since the process uses no processor time except when you do
spelling correction.
</p>
<a class="index-entry-id" id="index-ispell_002ddictionary"></a>
<a class="index-entry-id" id="index-ispell_002dlocal_002ddictionary"></a>
<a class="index-entry-id" id="index-ispell_002dpersonal_002ddictionary"></a>
<a class="index-entry-id" id="index-ispell_002dchange_002ddictionary"></a>
<p>Spell-checkers look up spelling in two dictionaries:
the standard dictionary and your personal dictionary.  The standard
dictionary is specified by the variable <code class="code">ispell-local-dictionary</code>
or, if that is <code class="code">nil</code>, by the variable <code class="code">ispell-dictionary</code>.
If both are <code class="code">nil</code>, the spelling program&#8217;s default dictionary is
used.  The command <kbd class="kbd">M-x&#160;ispell-change-dictionary</kbd><!-- /@w --> sets the
standard dictionary for the buffer and then restarts the subprocess,
so that it will use a different standard dictionary.  Your personal
dictionary is specified by the variable
<code class="code">ispell-personal-dictionary</code>.  If that is <code class="code">nil</code>, the
spelling program looks for a personal dictionary in a default
location, which is specific to each spell-checker.
</p>
<a class="index-entry-id" id="index-ispell_002dcomplete_002dword_002ddict"></a>
<p>A separate dictionary is used for word completion.  The variable
<code class="code">ispell-complete-word-dict</code> specifies the file name of this
dictionary.  The completion dictionary must be different because it
cannot use the information about roots and affixes of the words, which
spell-checking uses to detect variations of words.  For some
languages, there is a spell-checking dictionary but no word completion
dictionary.
</p>
<a class="index-entry-id" id="index-Flyspell-mode"></a>
<a class="index-entry-id" id="index-mode_002c-Flyspell"></a>
<a class="index-entry-id" id="index-flyspell_002dmode"></a>
<p>Flyspell mode is a minor mode that performs automatic spell-checking
of the text you type as you type it.  When it finds a word that it
does not recognize, it highlights that word.  Type <kbd class="kbd">M-x&#160;flyspell-mode</kbd><!-- /@w --> to toggle Flyspell mode in the current buffer.  To
enable Flyspell mode in all text mode buffers, add
<code class="code">flyspell-mode</code> to <code class="code">text-mode-hook</code>.  See <a class="xref" href="Customization.xhtml#Hooks">Hooks</a>.  Note
that, as Flyspell mode needs to check each word across which you move,
it will slow down cursor motion and scrolling commands.  It also
doesn&#8217;t automatically check the text you didn&#8217;t type or move across;
use <code class="code">flyspell-region</code> or <code class="code">flyspell-buffer</code> for that.
</p>
<a class="index-entry-id" id="index-flyspell_002dcorrect_002dword"></a>
<a class="index-entry-id" id="index-flyspell_002dauto_002dcorrect_002dword"></a>
<a class="index-entry-id" id="index-flyspell_002dcorrect_002dword_002dbefore_002dpoint"></a>
<p>When Flyspell mode highlights a word as misspelled, you can click on
it with <kbd class="kbd">mouse-2</kbd> (<code class="code">flyspell-correct-word</code>) to display a menu
of possible corrections and actions.  If you want this menu on
<kbd class="kbd">mouse-3</kbd> instead, enable <code class="code">context-menu-mode</code>.  In addition,
<kbd class="kbd">C-.</kbd> or <kbd class="kbd"><kbd class="key">ESC</kbd> <kbd class="key">TAB</kbd></kbd> (<code class="code">flyspell-auto-correct-word</code>)
will propose various successive corrections for the word at point, and
<kbd class="kbd">C-c&#160;$</kbd><!-- /@w --> (<code class="code">flyspell-correct-word-before-point</code>) will pop
up a menu of possible corrections.  Of course, you can always correct
the misspelled word by editing it manually in any way you like.
</p>
<a class="index-entry-id" id="index-flyspell_002dprog_002dmode"></a>
<p>Flyspell Prog mode works just like ordinary Flyspell mode, except
that it only checks words in comments and string constants.  This
feature is useful for editing programs.  Type <kbd class="kbd">M-x&#160;flyspell-prog-mode</kbd><!-- /@w --> to enable or disable this mode in the current
buffer.  To enable this mode in all programming mode buffers, add
<code class="code">flyspell-prog-mode</code> to <code class="code">prog-mode-hook</code> (see <a class="pxref" href="Customization.xhtml#Hooks">Hooks</a>).
</p></div>
</div>
<div class="footnotes-segment">
<h4 class="footnotes-heading">Footnotes</h4>

<h5 class="footnote-body-heading"><a id="FOOT5" href="#DOCF5">(5)</a></h5>
<p>Aside from <kbd class="kbd">C-/</kbd>, the <code class="code">undo</code> command is
also bound to <kbd class="kbd">C-x u</kbd> because that is more straightforward for
beginners to remember: &#8216;<samp class="samp">u</samp>&#8217; stands for &#8220;undo&#8221;.  It is also bound
to <kbd class="kbd">C-_</kbd> because typing <kbd class="kbd">C-/</kbd> on some text terminals actually
enters <kbd class="kbd">C-_</kbd>.</p>
</div>



</body>
</html>
